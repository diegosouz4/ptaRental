function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function slideHero(){var e=document.querySelector("[data-homeSlider='wrapper']"),i=document.querySelectorAll("[data-homeSlider='slide']");!e||i.length<2||$("[data-homeSlider='wrapper']").slick({dots:!0,infinite:!1,slidesToShow:1,slidesToScroll:1,lazyLoad:"ondemand",autoplay:!0,autoplaySpeed:5e3})}function slideSoluctions(){var e=document.querySelector("[data-coursesSlider='wrapper']"),i=document.querySelectorAll("[data-coursesSlider='slide']");!e||i.length<2||$("[data-coursesSlider='wrapper']").slick({dots:!1,infinite:!1,slidesToShow:4,slidesToScroll:1,lazyLoad:"ondemand",responsive:[{breakpoint:900,settings:{slidesToShow:3,slidesToScroll:1}},{breakpoint:600,settings:{slidesToShow:2,slidesToScroll:1}},{breakpoint:500,settings:{slidesToShow:1,slidesToScroll:1}}]})}function slideBlog(){var e=document.querySelector("[data-blogSlider='wrapper']"),i=document.querySelectorAll("[data-blogSlider='slide']");!e||i.length<2||$("[data-blogSlider='wrapper']").slick({dots:!1,infinite:!1,slidesToShow:3,slidesToScroll:1,lazyLoad:"ondemand",responsive:[{breakpoint:600,settings:{slidesToShow:2,slidesToScroll:1}},{breakpoint:500,settings:{slidesToShow:1,slidesToScroll:1}}]})}function changeHero(){var e=document.querySelector(".hero");if(e){var i=["./dest/img/hero-01.jpg","./dest/img/hero-02.jpg","./dest/img/hero-03.jpg"],t=0;setInterval((function(){e.style.backgroundImage="url(".concat(i[t],")"),t=t+1>i.length-1?t=0:t+1}),4e3)}}
/*! lozad.js - v1.16.0 - 2020-09-06
 * https://github.com/ApoorvSaxena/lozad.js
 * Copyright (c) 2020 Apoorv Saxena; Licensed MIT */function initMobileMenu(){var e={wrapper:document.querySelector(".header [data-menu='wrapper']"),btn:document.querySelector(".header [data-menu='btn']")};e.btn&&e.wrapper&&(e.btn.addEventListener("click",(function(i){i.preventDefault();var t=i.currentTarget;console.log("bot√£o"),t.classList.contains("show")?(t.classList.remove("show"),e.wrapper.classList.remove("show"),setTimeout((function(){e.wrapper.style.display="none"}),500)):(t.classList.add("show"),e.wrapper.style.display="block",setTimeout((function(){e.wrapper.classList.add("show")}),500))})),window.addEventListener("resize",(function(){e.wrapper.setAttribute("style",""),e.wrapper.classList.remove("show"),e.btn.classList.remove("show")})))}document.addEventListener("DOMContentLoaded",(function(){slideHero(),slideSoluctions(),slideBlog()})),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}((function(e){"use strict";var i=window.Slick||{};(i=function(){var i=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(t),appendDots:e(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(i,t){return e('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=e(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=e(t).data("slick")||{},n.options=e.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=e.proxy(n.autoPlay,n),n.autoPlayClear=e.proxy(n.autoPlayClear,n),n.autoPlayIterator=e.proxy(n.autoPlayIterator,n),n.changeSlide=e.proxy(n.changeSlide,n),n.clickHandler=e.proxy(n.clickHandler,n),n.selectHandler=e.proxy(n.selectHandler,n),n.setPosition=e.proxy(n.setPosition,n),n.swipeHandler=e.proxy(n.swipeHandler,n),n.dragHandler=e.proxy(n.dragHandler,n),n.keyHandler=e.proxy(n.keyHandler,n),n.instanceUid=i++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},i.prototype.addSlide=i.prototype.slickAdd=function(i,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?e(i).appendTo(s.$slideTrack):o?e(i).insertBefore(s.$slides.eq(t)):e(i).insertAfter(s.$slides.eq(t)):!0===o?e(i).prependTo(s.$slideTrack):e(i).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each((function(i,t){e(t).attr("data-slick-index",i)})),s.$slidesCache=s.$slides,s.reinit()},i.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:i},e.options.speed)}},i.prototype.animateSlide=function(i,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(i=-i),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:i},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:i},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),e({animStart:s.currentLeft}).animate({animStart:i},{duration:s.options.speed,easing:s.options.easing,step:function(e){e=Math.ceil(e),!1===s.options.vertical?(o[s.animType]="translate("+e+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+e+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),i=Math.ceil(i),!1===s.options.vertical?o[s.animType]="translate3d("+i+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+i+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout((function(){s.disableTransition(),t.call()}),s.options.speed))},i.prototype.getNavTarget=function(){var i=this.options.asNavFor;return i&&null!==i&&(i=e(i).not(this.$slider)),i},i.prototype.asNavFor=function(i){var t=this.getNavTarget();null!==t&&"object"==_typeof(t)&&t.each((function(){var t=e(this).slick("getSlick");t.unslicked||t.slideHandler(i,!0)}))},i.prototype.applyTransition=function(e){var i=this,t={};!1===i.options.fade?t[i.transitionType]=i.transformType+" "+i.options.speed+"ms "+i.options.cssEase:t[i.transitionType]="opacity "+i.options.speed+"ms "+i.options.cssEase,!1===i.options.fade?i.$slideTrack.css(t):i.$slides.eq(e).css(t)},i.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},i.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},i.prototype.autoPlayIterator=function(){var e=this,i=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(i=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(i))},i.prototype.buildArrows=function(){var i=this;!0===i.options.arrows&&(i.$prevArrow=e(i.options.prevArrow).addClass("slick-arrow"),i.$nextArrow=e(i.options.nextArrow).addClass("slick-arrow"),i.slideCount>i.options.slidesToShow?(i.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),i.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.prependTo(i.options.appendArrows),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.appendTo(i.options.appendArrows),!0!==i.options.infinite&&i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):i.$prevArrow.add(i.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},i.prototype.buildDots=function(){var i,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=e("<ul />").addClass(o.options.dotsClass),i=0;i<=o.getDotCount();i+=1)t.append(e("<li />").append(o.options.customPaging.call(this,o,i)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},i.prototype.buildOut=function(){var i=this;i.$slides=i.$slider.children(i.options.slide+":not(.slick-cloned)").addClass("slick-slide"),i.slideCount=i.$slides.length,i.$slides.each((function(i,t){e(t).attr("data-slick-index",i).data("originalStyling",e(t).attr("style")||"")})),i.$slider.addClass("slick-slider"),i.$slideTrack=0===i.slideCount?e('<div class="slick-track"/>').appendTo(i.$slider):i.$slides.wrapAll('<div class="slick-track"/>').parent(),i.$list=i.$slideTrack.wrap('<div class="slick-list"/>').parent(),i.$slideTrack.css("opacity",0),!0!==i.options.centerMode&&!0!==i.options.swipeToSlide||(i.options.slidesToScroll=1),e("img[data-lazy]",i.$slider).not("[src]").addClass("slick-loading"),i.setupInfinite(),i.buildArrows(),i.buildDots(),i.updateDots(),i.setSlideClasses("number"==typeof i.currentSlide?i.currentSlide:0),!0===i.options.draggable&&i.$list.addClass("draggable")},i.prototype.buildRows=function(){var e,i,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),e=0;e<s;e++){var a=document.createElement("div");for(i=0;i<l.options.rows;i++){var d=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=e*r+(i*l.options.slidesPerRow+t);n.get(c)&&d.appendChild(n.get(c))}a.appendChild(d)}o.appendChild(a)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},i.prototype.checkResponsive=function(i,t){var o,s,n,r=this,l=!1,a=r.$slider.width(),d=window.innerWidth||e(window).width();if("window"===r.respondTo?n=d:"slider"===r.respondTo?n=a:"min"===r.respondTo&&(n=Math.min(d,a)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(o in s=null,r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[s]),!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[s]),!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i),l=s),i||!1===l||r.$slider.trigger("breakpoint",[r,l])}},i.prototype.changeSlide=function(i,t){var o,s,n=this,r=e(i.currentTarget);switch(r.is("a")&&i.preventDefault(),r.is("li")||(r=r.closest("li")),o=n.slideCount%n.options.slidesToScroll!=0?0:(n.slideCount-n.currentSlide)%n.options.slidesToScroll,i.data.message){case"previous":s=0===o?n.options.slidesToScroll:n.options.slidesToShow-o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide-s,!1,t);break;case"next":s=0===o?n.options.slidesToScroll:o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide+s,!1,t);break;case"index":var l=0===i.data.index?0:i.data.index||r.index()*n.options.slidesToScroll;n.slideHandler(n.checkNavigable(l),!1,t),r.children().trigger("focus");break;default:return}},i.prototype.checkNavigable=function(e){var i,t;if(t=0,e>(i=this.getNavigableIndexes())[i.length-1])e=i[i.length-1];else for(var o in i){if(e<i[o]){e=t;break}t=i[o]}return e},i.prototype.cleanUpEvents=function(){var i=this;i.options.dots&&null!==i.$dots&&(e("li",i.$dots).off("click.slick",i.changeSlide).off("mouseenter.slick",e.proxy(i.interrupt,i,!0)).off("mouseleave.slick",e.proxy(i.interrupt,i,!1)),!0===i.options.accessibility&&i.$dots.off("keydown.slick",i.keyHandler)),i.$slider.off("focus.slick blur.slick"),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow&&i.$prevArrow.off("click.slick",i.changeSlide),i.$nextArrow&&i.$nextArrow.off("click.slick",i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow&&i.$prevArrow.off("keydown.slick",i.keyHandler),i.$nextArrow&&i.$nextArrow.off("keydown.slick",i.keyHandler))),i.$list.off("touchstart.slick mousedown.slick",i.swipeHandler),i.$list.off("touchmove.slick mousemove.slick",i.swipeHandler),i.$list.off("touchend.slick mouseup.slick",i.swipeHandler),i.$list.off("touchcancel.slick mouseleave.slick",i.swipeHandler),i.$list.off("click.slick",i.clickHandler),e(document).off(i.visibilityChange,i.visibility),i.cleanUpSlideEvents(),!0===i.options.accessibility&&i.$list.off("keydown.slick",i.keyHandler),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().off("click.slick",i.selectHandler),e(window).off("orientationchange.slick.slick-"+i.instanceUid,i.orientationChange),e(window).off("resize.slick.slick-"+i.instanceUid,i.resize),e("[draggable!=true]",i.$slideTrack).off("dragstart",i.preventDefault),e(window).off("load.slick.slick-"+i.instanceUid,i.setPosition)},i.prototype.cleanUpSlideEvents=function(){var i=this;i.$list.off("mouseenter.slick",e.proxy(i.interrupt,i,!0)),i.$list.off("mouseleave.slick",e.proxy(i.interrupt,i,!1))},i.prototype.cleanUpRows=function(){var e,i=this;i.options.rows>1&&((e=i.$slides.children().children()).removeAttr("style"),i.$slider.empty().append(e))},i.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},i.prototype.destroy=function(i){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),e(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each((function(){e(this).attr("style",e(this).data("originalStyling"))})),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,i||t.$slider.trigger("destroy",[t])},i.prototype.disableTransition=function(e){var i=this,t={};t[i.transitionType]="",!1===i.options.fade?i.$slideTrack.css(t):i.$slides.eq(e).css(t)},i.prototype.fadeSlide=function(e,i){var t=this;!1===t.cssTransitions?(t.$slides.eq(e).css({zIndex:t.options.zIndex}),t.$slides.eq(e).animate({opacity:1},t.options.speed,t.options.easing,i)):(t.applyTransition(e),t.$slides.eq(e).css({opacity:1,zIndex:t.options.zIndex}),i&&setTimeout((function(){t.disableTransition(e),i.call()}),t.options.speed))},i.prototype.fadeSlideOut=function(e){var i=this;!1===i.cssTransitions?i.$slides.eq(e).animate({opacity:0,zIndex:i.options.zIndex-2},i.options.speed,i.options.easing):(i.applyTransition(e),i.$slides.eq(e).css({opacity:0,zIndex:i.options.zIndex-2}))},i.prototype.filterSlides=i.prototype.slickFilter=function(e){var i=this;null!==e&&(i.$slidesCache=i.$slides,i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.filter(e).appendTo(i.$slideTrack),i.reinit())},i.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",(function(t){t.stopImmediatePropagation();var o=e(this);setTimeout((function(){i.options.pauseOnFocus&&(i.focussed=o.is(":focus"),i.autoPlay())}),0)}))},i.prototype.getCurrent=i.prototype.slickCurrentSlide=function(){return this.currentSlide},i.prototype.getDotCount=function(){var e=this,i=0,t=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},i.prototype.getLeft=function(e){var i,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&e+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(e>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(e-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(e-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):e+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(e+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(e+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),i=!1===n.options.vertical?e*n.slideWidth*-1+n.slideOffset:e*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow),i=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow+1),i=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,i+=(n.$list.width()-o.outerWidth())/2)),i},i.prototype.getOption=i.prototype.slickGetOption=function(e){return this.options[e]},i.prototype.getNavigableIndexes=function(){var e,i=this,t=0,o=0,s=[];for(!1===i.options.infinite?e=i.slideCount:(t=-1*i.options.slidesToScroll,o=-1*i.options.slidesToScroll,e=2*i.slideCount);t<e;)s.push(t),t=o+i.options.slidesToScroll,o+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;return s},i.prototype.getSlick=function(){return this},i.prototype.getSlideCount=function(){var i,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each((function(s,n){if(n.offsetLeft-t+e(n).outerWidth()/2>-1*o.swipeLeft)return i=n,!1})),Math.abs(e(i).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},i.prototype.goTo=i.prototype.slickGoTo=function(e,i){this.changeSlide({data:{message:"index",index:parseInt(e)}},i)},i.prototype.init=function(i){var t=this;e(t.$slider).hasClass("slick-initialized")||(e(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),i&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},i.prototype.initADA=function(){var i=this,t=Math.ceil(i.slideCount/i.options.slidesToShow),o=i.getNavigableIndexes().filter((function(e){return e>=0&&e<i.slideCount}));i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each((function(t){var s=o.indexOf(t);e(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+t,tabindex:-1}),-1!==s&&e(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+s})})),i.$dots.attr("role","tablist").find("li").each((function(s){var n=o[s];e(this).attr({role:"presentation"}),e(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+s,"aria-controls":"slick-slide"+i.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})})).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=i.currentSlide,n=s+i.options.slidesToShow;s<n;s++)i.$slides.eq(s).attr("tabindex",0);i.activateADA()},i.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},i.prototype.initDotEvents=function(){var i=this;!0===i.options.dots&&(e("li",i.$dots).on("click.slick",{message:"index"},i.changeSlide),!0===i.options.accessibility&&i.$dots.on("keydown.slick",i.keyHandler)),!0===i.options.dots&&!0===i.options.pauseOnDotsHover&&e("li",i.$dots).on("mouseenter.slick",e.proxy(i.interrupt,i,!0)).on("mouseleave.slick",e.proxy(i.interrupt,i,!1))},i.prototype.initSlideEvents=function(){var i=this;i.options.pauseOnHover&&(i.$list.on("mouseenter.slick",e.proxy(i.interrupt,i,!0)),i.$list.on("mouseleave.slick",e.proxy(i.interrupt,i,!1)))},i.prototype.initializeEvents=function(){var i=this;i.initArrowEvents(),i.initDotEvents(),i.initSlideEvents(),i.$list.on("touchstart.slick mousedown.slick",{action:"start"},i.swipeHandler),i.$list.on("touchmove.slick mousemove.slick",{action:"move"},i.swipeHandler),i.$list.on("touchend.slick mouseup.slick",{action:"end"},i.swipeHandler),i.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},i.swipeHandler),i.$list.on("click.slick",i.clickHandler),e(document).on(i.visibilityChange,e.proxy(i.visibility,i)),!0===i.options.accessibility&&i.$list.on("keydown.slick",i.keyHandler),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().on("click.slick",i.selectHandler),e(window).on("orientationchange.slick.slick-"+i.instanceUid,e.proxy(i.orientationChange,i)),e(window).on("resize.slick.slick-"+i.instanceUid,e.proxy(i.resize,i)),e("[draggable!=true]",i.$slideTrack).on("dragstart",i.preventDefault),e(window).on("load.slick.slick-"+i.instanceUid,i.setPosition),e(i.setPosition)},i.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},i.prototype.keyHandler=function(e){var i=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===i.options.accessibility?i.changeSlide({data:{message:!0===i.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===i.options.accessibility&&i.changeSlide({data:{message:!0===i.options.rtl?"previous":"next"}}))},i.prototype.lazyLoad=function(){function i(i){e("img[data-lazy]",i).each((function(){var i=e(this),t=e(this).attr("data-lazy"),o=e(this).attr("data-srcset"),s=e(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){i.animate({opacity:0},100,(function(){o&&(i.attr("srcset",o),s&&i.attr("sizes",s)),i.attr("src",t).animate({opacity:1},200,(function(){i.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")})),n.$slider.trigger("lazyLoaded",[n,i,t])}))},r.onerror=function(){i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,i,t])},r.src=t}))}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,a=n.$slider.find(".slick-slide"),d=0;d<n.options.slidesToScroll;d++)r<0&&(r=n.slideCount-1),t=(t=t.add(a.eq(r))).add(a.eq(l)),r--,l++;i(t),n.slideCount<=n.options.slidesToShow?i(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?i(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&i(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},i.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},i.prototype.next=i.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},i.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},i.prototype.pause=i.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},i.prototype.play=i.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},i.prototype.postSlide=function(i){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,i]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&e(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},i.prototype.prev=i.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},i.prototype.preventDefault=function(e){e.preventDefault()},i.prototype.progressiveLazyLoad=function(i){i=i||1;var t,o,s,n,r,l=this,a=e("img[data-lazy]",l.$slider);a.length?(t=a.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){i<3?setTimeout((function(){l.progressiveLazyLoad(i+1)}),500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},i.prototype.refresh=function(i){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),e.extend(s,s.initials,{currentSlide:t}),s.init(),i||s.changeSlide({data:{message:"index",index:t}},!1)},i.prototype.registerBreakpoints=function(){var i,t,o,s=this,n=s.options.responsive||null;if("array"===e.type(n)&&n.length){for(i in s.respondTo=s.options.respondTo||"window",n)if(o=s.breakpoints.length-1,n.hasOwnProperty(i)){for(t=n[i].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[i].settings}s.breakpoints.sort((function(e,i){return s.options.mobileFirst?e-i:i-e}))}},i.prototype.reinit=function(){var i=this;i.$slides=i.$slideTrack.children(i.options.slide).addClass("slick-slide"),i.slideCount=i.$slides.length,i.currentSlide>=i.slideCount&&0!==i.currentSlide&&(i.currentSlide=i.currentSlide-i.options.slidesToScroll),i.slideCount<=i.options.slidesToShow&&(i.currentSlide=0),i.registerBreakpoints(),i.setProps(),i.setupInfinite(),i.buildArrows(),i.updateArrows(),i.initArrowEvents(),i.buildDots(),i.updateDots(),i.initDotEvents(),i.cleanUpSlideEvents(),i.initSlideEvents(),i.checkResponsive(!1,!0),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().on("click.slick",i.selectHandler),i.setSlideClasses("number"==typeof i.currentSlide?i.currentSlide:0),i.setPosition(),i.focusHandler(),i.paused=!i.options.autoplay,i.autoPlay(),i.$slider.trigger("reInit",[i])},i.prototype.resize=function(){var i=this;e(window).width()!==i.windowWidth&&(clearTimeout(i.windowDelay),i.windowDelay=window.setTimeout((function(){i.windowWidth=e(window).width(),i.checkResponsive(),i.unslicked||i.setPosition()}),50))},i.prototype.removeSlide=i.prototype.slickRemove=function(e,i,t){var o=this;if(e="boolean"==typeof e?!0===(i=e)?0:o.slideCount-1:!0===i?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},i.prototype.setCSS=function(e){var i,t,o=this,s={};!0===o.options.rtl&&(e=-e),i="left"==o.positionProp?Math.ceil(e)+"px":"0px",t="top"==o.positionProp?Math.ceil(e)+"px":"0px",s[o.positionProp]=e,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+i+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+i+", "+t+", 0px)",o.$slideTrack.css(s)))},i.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var i=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-i)},i.prototype.setFade=function(){var i,t=this;t.$slides.each((function(o,s){i=t.slideWidth*o*-1,!0===t.options.rtl?e(s).css({position:"relative",right:i,top:0,zIndex:t.options.zIndex-2,opacity:0}):e(s).css({position:"relative",left:i,top:0,zIndex:t.options.zIndex-2,opacity:0})})),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},i.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",i)}},i.prototype.setOption=i.prototype.slickSetOption=function(){var i,t,o,s,n,r=this,l=!1;if("object"===e.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===e.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===e.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)e.each(o,(function(e,i){r.options[e]=i}));else if("responsive"===n)for(t in s)if("array"!==e.type(r.options.responsive))r.options.responsive=[s[t]];else{for(i=r.options.responsive.length-1;i>=0;)r.options.responsive[i].breakpoint===s[t].breakpoint&&r.options.responsive.splice(i,1),i--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},i.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},i.prototype.setProps=function(){var e=this,i=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===i.WebkitTransition&&void 0===i.MozTransition&&void 0===i.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==i.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===i.perspectiveProperty&&void 0===i.MozPerspective&&(e.animType=!1)),void 0!==i.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===i.msTransform&&(e.animType=!1)),void 0!==i.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},i.prototype.setSlideClasses=function(e){var i,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(e).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;i=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(e>=i&&e<=n.slideCount-1-i?n.$slides.slice(e-i+r,e+i+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+e,t.slice(o-i+1+r,o+i+2).addClass("slick-active").attr("aria-hidden","false")),0===e?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):e===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(e).addClass("slick-center")}else e>=0&&e<=n.slideCount-n.options.slidesToShow?n.$slides.slice(e,e+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+e:e,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-e<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},i.prototype.setupInfinite=function(){var i,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,i=s.slideCount;i>s.slideCount-o;i-=1)t=i-1,e(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(i=0;i<o+s.slideCount;i+=1)t=i,e(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each((function(){e(this).attr("id","")}))}},i.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},i.prototype.selectHandler=function(i){var t=this,o=e(i.target).is(".slick-slide")?e(i.target):e(i.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},i.prototype.slideHandler=function(e,i,t){var o,s,n,r,l,a=null,d=this;if(i=i||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===i&&d.asNavFor(e),o=e,a=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,(function(){d.postSlide(o)})):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,(function(){d.postSlide(o)})):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),n=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==t?(d.fadeSlideOut(n),d.fadeSlide(s,(function(){d.postSlide(s)}))):d.postSlide(s),void d.animateHeight();!0!==t?d.animateSlide(a,(function(){d.postSlide(s)})):d.postSlide(s)}},i.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},i.prototype.swipeDirection=function(){var e,i,t,o,s=this;return e=s.touchObject.startX-s.touchObject.curX,i=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(i,e),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0||o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},i.prototype.swipeEnd=function(e){var i,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(i),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},i.prototype.swipeHandler=function(e){var i=this;if(!(!1===i.options.swipe||"ontouchend"in document&&!1===i.options.swipe||!1===i.options.draggable&&-1!==e.type.indexOf("mouse")))switch(i.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,i.touchObject.minSwipe=i.listWidth/i.options.touchThreshold,!0===i.options.verticalSwiping&&(i.touchObject.minSwipe=i.listHeight/i.options.touchThreshold),e.data.action){case"start":i.swipeStart(e);break;case"move":i.swipeMove(e);break;case"end":i.swipeEnd(e)}},i.prototype.swipeMove=function(e){var i,t,o,s,n,r,l=this;return n=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(i=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:e.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:e.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==e.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,e.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=i+o*s:l.swipeLeft=i+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=i+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},i.prototype.swipeStart=function(e){var i,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(i=e.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==i?i.pageX:e.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==i?i.pageY:e.clientY,t.dragging=!0},i.prototype.unfilterSlides=i.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},i.prototype.unload=function(){var i=this;e(".slick-cloned",i.$slider).remove(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove(),i.$nextArrow&&i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove(),i.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},i.prototype.unslick=function(e){var i=this;i.$slider.trigger("unslick",[i,e]),i.destroy()},i.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode||e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode)&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},i.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},i.prototype.visibility=function(){var e=this;e.options.autoplay&&(document[e.hidden]?e.interrupted=!0:e.interrupted=!1)},e.fn.slick=function(){var e,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(e=0;e<r;e++)if("object"==_typeof(s)||void 0===s?o[e].slick=new i(o[e],s):t=o[e].slick[s].apply(o[e].slick,n),void 0!==t)return t;return o}})),document.addEventListener("DOMContentLoaded",(function(){lozad().observe(),initMobileMenu()})),function(e,i){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):e.lozad=i()}(this,(function(){"use strict";var e="undefined"!=typeof document&&document.documentMode,i={rootMargin:"0px",threshold:0,load:function(i){if("picture"===i.nodeName.toLowerCase()){var t=i.querySelector("img"),o=!1;null===t&&(t=document.createElement("img"),o=!0),e&&i.getAttribute("data-iesrc")&&(t.src=i.getAttribute("data-iesrc")),i.getAttribute("data-alt")&&(t.alt=i.getAttribute("data-alt")),o&&i.append(t)}if("video"===i.nodeName.toLowerCase()&&!i.getAttribute("data-src")&&i.children){for(var s=i.children,n=void 0,r=0;r<=s.length-1;r++)(n=s[r].getAttribute("data-src"))&&(s[r].src=n);i.load()}i.getAttribute("data-poster")&&(i.poster=i.getAttribute("data-poster")),i.getAttribute("data-src")&&(i.src=i.getAttribute("data-src")),i.getAttribute("data-srcset")&&i.setAttribute("srcset",i.getAttribute("data-srcset"));var l=",";if(i.getAttribute("data-background-delimiter")&&(l=i.getAttribute("data-background-delimiter")),i.getAttribute("data-background-image"))i.style.backgroundImage="url('"+i.getAttribute("data-background-image").split(l).join("'),url('")+"')";else if(i.getAttribute("data-background-image-set")){var a=i.getAttribute("data-background-image-set").split(l),d=a[0].substr(0,a[0].indexOf(" "))||a[0];d=-1===d.indexOf("url(")?"url("+d+")":d,1===a.length?i.style.backgroundImage=d:i.setAttribute("style",(i.getAttribute("style")||"")+"background-image: "+d+"; background-image: -webkit-image-set("+a+"); background-image: image-set("+a+")")}i.getAttribute("data-toggle-class")&&i.classList.toggle(i.getAttribute("data-toggle-class"))},loaded:function(){}};function t(e){e.setAttribute("data-loaded",!0)}var o=function(e){return"true"===e.getAttribute("data-loaded")},s=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return e instanceof Element?[e]:e instanceof NodeList?e:i.querySelectorAll(e)};return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".lozad",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},i,n),l=r.root,a=r.rootMargin,d=r.threshold,c=r.load,p=r.loaded,u=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(u=new IntersectionObserver(function(e,i){return function(s,n){s.forEach((function(s){(s.intersectionRatio>0||s.isIntersecting)&&(n.unobserve(s.target),o(s.target)||(e(s.target),t(s.target),i(s.target)))}))}}(c,p),{root:l,rootMargin:a,threshold:d}));for(var h,f=s(e,l),v=0;v<f.length;v++)(h=f[v]).getAttribute("data-placeholder-background")&&(h.style.background=h.getAttribute("data-placeholder-background"));return{observe:function(){for(var i=s(e,l),n=0;n<i.length;n++)o(i[n])||(u?u.observe(i[n]):(c(i[n]),t(i[n]),p(i[n])))},triggerLoad:function(e){o(e)||(c(e),t(e),p(e))},observer:u}}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJzbGlkZUhlcm8iLCJzbGlkZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiJCIsInNsaWNrIiwiZG90cyIsImluZmluaXRlIiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJsYXp5TG9hZCIsImF1dG9wbGF5IiwiYXV0b3BsYXlTcGVlZCIsInNsaWRlU29sdWN0aW9ucyIsInJlc3BvbnNpdmUiLCJicmVha3BvaW50Iiwic2V0dGluZ3MiLCJzbGlkZUJsb2ciLCJjaGFuZ2VIZXJvIiwic2VjdGlvbiIsIm9wdGlvbnMiLCJpbmRleCIsInNldEludGVydmFsIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJjb25jYXQiLCJpbml0TW9iaWxlTWVudSIsIm1lbnUiLCJ3cmFwcGVyIiwiYnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRUYXJnZXQiLCJjb25zb2xlIiwibG9nIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJzZXRUaW1lb3V0IiwiZGlzcGxheSIsImFkZCIsIndpbmRvdyIsInNldEF0dHJpYnV0ZSIsImkiLCJkZWZpbmUiLCJhbWQiLCJleHBvcnRzIiwibW9kdWxlIiwicmVxdWlyZSIsImpRdWVyeSIsIlNsaWNrIiwidCIsInMiLCJuIiwidGhpcyIsImRlZmF1bHRzIiwiYWNjZXNzaWJpbGl0eSIsImFkYXB0aXZlSGVpZ2h0IiwiYXBwZW5kQXJyb3dzIiwiYXBwZW5kRG90cyIsImFycm93cyIsImFzTmF2Rm9yIiwicHJldkFycm93IiwibmV4dEFycm93IiwiY2VudGVyTW9kZSIsImNlbnRlclBhZGRpbmciLCJjc3NFYXNlIiwiY3VzdG9tUGFnaW5nIiwidGV4dCIsImRvdHNDbGFzcyIsImRyYWdnYWJsZSIsImVhc2luZyIsImVkZ2VGcmljdGlvbiIsImZhZGUiLCJmb2N1c09uU2VsZWN0IiwiZm9jdXNPbkNoYW5nZSIsImluaXRpYWxTbGlkZSIsIm1vYmlsZUZpcnN0IiwicGF1c2VPbkhvdmVyIiwicGF1c2VPbkZvY3VzIiwicGF1c2VPbkRvdHNIb3ZlciIsInJlc3BvbmRUbyIsInJvd3MiLCJydGwiLCJzbGlkZSIsInNsaWRlc1BlclJvdyIsInNwZWVkIiwic3dpcGUiLCJzd2lwZVRvU2xpZGUiLCJ0b3VjaE1vdmUiLCJ0b3VjaFRocmVzaG9sZCIsInVzZUNTUyIsInVzZVRyYW5zZm9ybSIsInZhcmlhYmxlV2lkdGgiLCJ2ZXJ0aWNhbCIsInZlcnRpY2FsU3dpcGluZyIsIndhaXRGb3JBbmltYXRlIiwiekluZGV4IiwiaW5pdGlhbHMiLCJhbmltYXRpbmciLCJkcmFnZ2luZyIsImF1dG9QbGF5VGltZXIiLCJjdXJyZW50RGlyZWN0aW9uIiwiY3VycmVudExlZnQiLCJjdXJyZW50U2xpZGUiLCJkaXJlY3Rpb24iLCIkZG90cyIsImxpc3RXaWR0aCIsImxpc3RIZWlnaHQiLCJsb2FkSW5kZXgiLCIkbmV4dEFycm93IiwiJHByZXZBcnJvdyIsInNjcm9sbGluZyIsInNsaWRlQ291bnQiLCJzbGlkZVdpZHRoIiwiJHNsaWRlVHJhY2siLCIkc2xpZGVzIiwic2xpZGluZyIsInNsaWRlT2Zmc2V0Iiwic3dpcGVMZWZ0Iiwic3dpcGluZyIsIiRsaXN0IiwidG91Y2hPYmplY3QiLCJ0cmFuc2Zvcm1zRW5hYmxlZCIsInVuc2xpY2tlZCIsImV4dGVuZCIsImFjdGl2ZUJyZWFrcG9pbnQiLCJhbmltVHlwZSIsImFuaW1Qcm9wIiwiYnJlYWtwb2ludHMiLCJicmVha3BvaW50U2V0dGluZ3MiLCJjc3NUcmFuc2l0aW9ucyIsImZvY3Vzc2VkIiwiaW50ZXJydXB0ZWQiLCJoaWRkZW4iLCJwYXVzZWQiLCJwb3NpdGlvblByb3AiLCJyb3dDb3VudCIsInNob3VsZENsaWNrIiwiJHNsaWRlciIsIiRzbGlkZXNDYWNoZSIsInRyYW5zZm9ybVR5cGUiLCJ0cmFuc2l0aW9uVHlwZSIsInZpc2liaWxpdHlDaGFuZ2UiLCJ3aW5kb3dXaWR0aCIsIndpbmRvd1RpbWVyIiwiZGF0YSIsIm9yaWdpbmFsU2V0dGluZ3MiLCJtb3pIaWRkZW4iLCJ3ZWJraXRIaWRkZW4iLCJhdXRvUGxheSIsInByb3h5IiwiYXV0b1BsYXlDbGVhciIsImF1dG9QbGF5SXRlcmF0b3IiLCJjaGFuZ2VTbGlkZSIsImNsaWNrSGFuZGxlciIsInNlbGVjdEhhbmRsZXIiLCJzZXRQb3NpdGlvbiIsInN3aXBlSGFuZGxlciIsImRyYWdIYW5kbGVyIiwia2V5SGFuZGxlciIsImluc3RhbmNlVWlkIiwiaHRtbEV4cHIiLCJyZWdpc3RlckJyZWFrcG9pbnRzIiwiaW5pdCIsImFjdGl2YXRlQURBIiwiZmluZCIsImF0dHIiLCJ0YWJpbmRleCIsImFkZFNsaWRlIiwic2xpY2tBZGQiLCJ1bmxvYWQiLCJhcHBlbmRUbyIsImluc2VydEJlZm9yZSIsImVxIiwiaW5zZXJ0QWZ0ZXIiLCJwcmVwZW5kVG8iLCJjaGlsZHJlbiIsImRldGFjaCIsImFwcGVuZCIsImVhY2giLCJyZWluaXQiLCJhbmltYXRlSGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJhbmltYXRlIiwiaGVpZ2h0IiwiYW5pbWF0ZVNsaWRlIiwibGVmdCIsInRvcCIsImFuaW1TdGFydCIsImR1cmF0aW9uIiwic3RlcCIsIk1hdGgiLCJjZWlsIiwiY3NzIiwiY29tcGxldGUiLCJjYWxsIiwiYXBwbHlUcmFuc2l0aW9uIiwiZGlzYWJsZVRyYW5zaXRpb24iLCJnZXROYXZUYXJnZXQiLCJub3QiLCJzbGlkZUhhbmRsZXIiLCJjbGVhckludGVydmFsIiwiYnVpbGRBcnJvd3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicmVtb3ZlQXR0ciIsInRlc3QiLCJidWlsZERvdHMiLCJnZXREb3RDb3VudCIsImZpcnN0IiwiYnVpbGRPdXQiLCJ3cmFwQWxsIiwicGFyZW50Iiwid3JhcCIsInNldHVwSW5maW5pdGUiLCJ1cGRhdGVEb3RzIiwic2V0U2xpZGVDbGFzc2VzIiwiYnVpbGRSb3dzIiwiciIsImwiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZCIsImNyZWF0ZUVsZW1lbnQiLCJhIiwiYyIsImdldCIsImFwcGVuZENoaWxkIiwiZW1wdHkiLCJ3aWR0aCIsImNoZWNrUmVzcG9uc2l2ZSIsImlubmVyV2lkdGgiLCJtaW4iLCJoYXNPd25Qcm9wZXJ0eSIsInVuc2xpY2siLCJyZWZyZXNoIiwidHJpZ2dlciIsImlzIiwiY2xvc2VzdCIsIm1lc3NhZ2UiLCJjaGVja05hdmlnYWJsZSIsImdldE5hdmlnYWJsZUluZGV4ZXMiLCJjbGVhblVwRXZlbnRzIiwib2ZmIiwiaW50ZXJydXB0IiwidmlzaWJpbGl0eSIsImNsZWFuVXBTbGlkZUV2ZW50cyIsIm9yaWVudGF0aW9uQ2hhbmdlIiwicmVzaXplIiwiY2xlYW5VcFJvd3MiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdG9wUHJvcGFnYXRpb24iLCJkZXN0cm95IiwiZmFkZVNsaWRlIiwib3BhY2l0eSIsImZhZGVTbGlkZU91dCIsImZpbHRlclNsaWRlcyIsInNsaWNrRmlsdGVyIiwiZmlsdGVyIiwiZm9jdXNIYW5kbGVyIiwib24iLCJnZXRDdXJyZW50Iiwic2xpY2tDdXJyZW50U2xpZGUiLCJnZXRMZWZ0IiwiZmxvb3IiLCJvZmZzZXRMZWZ0Iiwib3V0ZXJXaWR0aCIsImdldE9wdGlvbiIsInNsaWNrR2V0T3B0aW9uIiwicHVzaCIsImdldFNsaWNrIiwiZ2V0U2xpZGVDb3VudCIsImFicyIsImdvVG8iLCJzbGlja0dvVG8iLCJwYXJzZUludCIsImhhc0NsYXNzIiwic2V0UHJvcHMiLCJzdGFydExvYWQiLCJsb2FkU2xpZGVyIiwiaW5pdGlhbGl6ZUV2ZW50cyIsInVwZGF0ZUFycm93cyIsImluaXRBREEiLCJpbmRleE9mIiwicm9sZSIsImlkIiwiZW5kIiwiaW5pdEFycm93RXZlbnRzIiwiaW5pdERvdEV2ZW50cyIsImluaXRTbGlkZUV2ZW50cyIsImFjdGlvbiIsImluaXRVSSIsInNob3ciLCJ0YXJnZXQiLCJ0YWdOYW1lIiwibWF0Y2giLCJrZXlDb2RlIiwib25sb2FkIiwib25lcnJvciIsInNyYyIsIm1heCIsInNsaWNlIiwicHJvZ3Jlc3NpdmVMYXp5TG9hZCIsIm5leHQiLCJzbGlja05leHQiLCJwYXVzZSIsInNsaWNrUGF1c2UiLCJwbGF5Iiwic2xpY2tQbGF5IiwicG9zdFNsaWRlIiwiZm9jdXMiLCJwcmV2Iiwic2xpY2tQcmV2IiwidHlwZSIsInNwbGljZSIsInNvcnQiLCJjbGVhclRpbWVvdXQiLCJ3aW5kb3dEZWxheSIsInJlbW92ZVNsaWRlIiwic2xpY2tSZW1vdmUiLCJzZXRDU1MiLCJzZXREaW1lbnNpb25zIiwicGFkZGluZyIsInNldEZhZGUiLCJwb3NpdGlvbiIsInJpZ2h0Iiwic2V0SGVpZ2h0Iiwic2V0T3B0aW9uIiwic2xpY2tTZXRPcHRpb24iLCJhcmd1bWVudHMiLCJib2R5IiwiV2Via2l0VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb24iLCJtc1RyYW5zaXRpb24iLCJPVHJhbnNmb3JtIiwicGVyc3BlY3RpdmVQcm9wZXJ0eSIsIndlYmtpdFBlcnNwZWN0aXZlIiwiTW96VHJhbnNmb3JtIiwiTW96UGVyc3BlY3RpdmUiLCJ3ZWJraXRUcmFuc2Zvcm0iLCJtc1RyYW5zZm9ybSIsInRyYW5zZm9ybSIsImNsb25lIiwicGFyZW50cyIsImhpZGUiLCJzd2lwZURpcmVjdGlvbiIsInN0YXJ0WCIsImN1clgiLCJzdGFydFkiLCJjdXJZIiwiYXRhbjIiLCJyb3VuZCIsIlBJIiwic3dpcGVFbmQiLCJzd2lwZUxlbmd0aCIsImVkZ2VIaXQiLCJtaW5Td2lwZSIsImZpbmdlckNvdW50Iiwib3JpZ2luYWxFdmVudCIsInRvdWNoZXMiLCJzd2lwZVN0YXJ0Iiwic3dpcGVNb3ZlIiwicGFnZVgiLCJjbGllbnRYIiwicGFnZVkiLCJjbGllbnRZIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciIsImZuIiwiQXJyYXkiLCJhcHBseSIsImxvemFkIiwib2JzZXJ2ZSIsImdsb2JhbCIsImZhY3RvcnkiLCJpc0lFIiwiZG9jdW1lbnRNb2RlIiwiZGVmYXVsdENvbmZpZyIsInJvb3RNYXJnaW4iLCJ0aHJlc2hvbGQiLCJsb2FkIiwiZWxlbWVudCIsIm5vZGVOYW1lIiwidG9Mb3dlckNhc2UiLCJpbWciLCJnZXRBdHRyaWJ1dGUiLCJhbHQiLCJjaGlsZHMiLCJjaGlsZFNyYyIsInBvc3RlciIsImJhY2tncm91bmRJbWFnZURlbGltaXRlciIsInNwbGl0Iiwiam9pbiIsImltYWdlU2V0TGlua3MiLCJmaXJzdFVybExpbmsiLCJzdWJzdHIiLCJ0b2dnbGUiLCJsb2FkZWQiLCJtYXJrQXNMb2FkZWQiLCJpc0xvYWRlZCIsImdldEVsZW1lbnRzIiwic2VsZWN0b3IiLCJyb290IiwidW5kZWZpbmVkIiwiRWxlbWVudCIsIk5vZGVMaXN0IiwiX09iamVjdCRhc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImludGVyc2VjdGlvblJhdGlvIiwiaXNJbnRlcnNlY3RpbmciLCJ1bm9ic2VydmUiLCJvbkludGVyc2VjdGlvbiIsImVsZW1lbnRzIiwiYmFja2dyb3VuZCIsIl9pIiwidHJpZ2dlckxvYWQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVFDLEdBQWdDLE9BQU9ELFFBQVUsbUJBQXFCRSxRQUFVLGlCQUFtQkEsT0FBT0MsU0FBVyxTQUFVRixHQUFLLGNBQWNBLENBQUcsRUFBSSxTQUFVQSxHQUFLLE9BQU9BLEdBQUssbUJBQXFCQyxRQUFVRCxFQUFFRyxjQUFnQkYsUUFBVUQsSUFBTUMsT0FBT0csVUFBWSxnQkFBa0JKLENBQUcsRUFBR0QsUUFBUUMsRUFBSSxDQU03VCxTQUFTSyxZQUNQLElBQU1DLEVBQ0tDLFNBQVNDLGNBQWMsK0JBRDVCRixFQUVHQyxTQUFTRSxpQkFBaUIsOEJBRzlC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RUFBTWlCLEdBQVMsQ0FDaEVLLEtBQU1BLEVBQ054QixXQUFZQSxFQUNaQyxVQUFXQSxLQUtmLElBREEsSUF0RWVFLEVBc0VYcUMsRUFBV2xCLEVBQVlDLEVBQVVDLEdBQzVCelcsRUFBSSxFQUFHQSxFQUFJeVgsRUFBU2xhLE9BQVF5QyxLQXZFdEJvVixFQXdFTHFDLEVBQVN6WCxJQXZFUHdWLGFBQWEsaUNBQ3ZCSixFQUFRelcsTUFBTStZLFdBQWF0QyxFQUFRSSxhQUNqQyxnQ0F3RUosTUFBTyxDQUNMYixRQUFTLFdBR1AsSUFGQSxJQUFJOEMsRUFBV2xCLEVBQVlDLEVBQVVDLEdBRTVCa0IsRUFBSyxFQUFHQSxFQUFLRixFQUFTbGEsT0FBUW9hLElBQ2pDckIsRUFBU21CLEVBQVNFLE1BSWxCWCxFQUNGQSxFQUFTckMsUUFBUThDLEVBQVNFLEtBSTVCeEMsRUFBS3NDLEVBQVNFLElBQ2R0QixFQUFhb0IsRUFBU0UsSUFDdEJ2QixFQUFPcUIsRUFBU0UsS0FFcEIsRUFDQUMsWUFBYSxTQUFxQnhDLEdBQzVCa0IsRUFBU2xCLEtBSWJELEVBQUtDLEdBQ0xpQixFQUFhakIsR0FDYmdCLEVBQU9oQixHQUNULEVBRUE0QixTQUFVQSxFQUVkLENBR0YiLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBzbGlkZUhlcm8oKTtcbiAgc2xpZGVTb2x1Y3Rpb25zKCk7XG4gIHNsaWRlQmxvZygpO1xufSk7XG5cbmZ1bmN0aW9uIHNsaWRlSGVybygpIHtcbiAgY29uc3Qgc2xpZGVyID0ge1xuICAgIHdyYXBwZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ob21lU2xpZGVyPSd3cmFwcGVyJ11cIiksXG4gICAgaXRlbnM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ob21lU2xpZGVyPSdzbGlkZSddXCIpLFxuICB9O1xuXG4gIGlmICghc2xpZGVyLndyYXBwZXIgfHwgc2xpZGVyLml0ZW5zLmxlbmd0aCA8IDIpIHJldHVybjtcblxuICAkKFwiW2RhdGEtaG9tZVNsaWRlcj0nd3JhcHBlciddXCIpLnNsaWNrKHtcbiAgICBkb3RzOiB0cnVlLFxuICAgIGluZmluaXRlOiBmYWxzZSxcbiAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgbGF6eUxvYWQ6IFwib25kZW1hbmRcIixcbiAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICBhdXRvcGxheVNwZWVkOiA1MDAwLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gc2xpZGVTb2x1Y3Rpb25zKCkge1xuICBjb25zdCBzbGlkZXIgPSB7XG4gICAgd3JhcHBlcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWNvdXJzZXNTbGlkZXI9J3dyYXBwZXInXVwiKSxcbiAgICBpdGVuczogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNvdXJzZXNTbGlkZXI9J3NsaWRlJ11cIiksXG4gIH07XG5cbiAgaWYgKCFzbGlkZXIud3JhcHBlciB8fCBzbGlkZXIuaXRlbnMubGVuZ3RoIDwgMikgcmV0dXJuO1xuXG4gICQoXCJbZGF0YS1jb3Vyc2VzU2xpZGVyPSd3cmFwcGVyJ11cIikuc2xpY2soe1xuICAgIGRvdHM6IGZhbHNlLFxuICAgIGluZmluaXRlOiBmYWxzZSxcbiAgICBzbGlkZXNUb1Nob3c6IDQsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgbGF6eUxvYWQ6IFwib25kZW1hbmRcIixcbiAgICByZXNwb25zaXZlOiBbXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDkwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDMsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBicmVha3BvaW50OiA2MDAsXG4gICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgc2xpZGVzVG9TaG93OiAyLFxuICAgICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYnJlYWtwb2ludDogNTAwLFxuICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNsaWRlQmxvZygpIHtcbiAgY29uc3Qgc2xpZGVyID0ge1xuICAgIHdyYXBwZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ibG9nU2xpZGVyPSd3cmFwcGVyJ11cIiksXG4gICAgaXRlbnM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ibG9nU2xpZGVyPSdzbGlkZSddXCIpLFxuICB9O1xuXG4gIGlmICghc2xpZGVyLndyYXBwZXIgfHwgc2xpZGVyLml0ZW5zLmxlbmd0aCA8IDIpIHJldHVybjtcblxuICAkKFwiW2RhdGEtYmxvZ1NsaWRlcj0nd3JhcHBlciddXCIpLnNsaWNrKHtcbiAgICBkb3RzOiBmYWxzZSxcbiAgICBpbmZpbml0ZTogZmFsc2UsXG4gICAgc2xpZGVzVG9TaG93OiAzLFxuICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgIGxhenlMb2FkOiBcIm9uZGVtYW5kXCIsXG4gICAgcmVzcG9uc2l2ZTogW1xuICAgICAge1xuICAgICAgICBicmVha3BvaW50OiA2MDAsXG4gICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgc2xpZGVzVG9TaG93OiAyLFxuICAgICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYnJlYWtwb2ludDogNTAwLFxuICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSk7XG59XG5cbiEoZnVuY3Rpb24gKGkpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZGVmaW5lICYmIGRlZmluZS5hbWRcbiAgICA/IGRlZmluZShbXCJqcXVlcnlcIl0sIGkpXG4gICAgOiBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBleHBvcnRzXG4gICAgPyAobW9kdWxlLmV4cG9ydHMgPSBpKHJlcXVpcmUoXCJqcXVlcnlcIikpKVxuICAgIDogaShqUXVlcnkpO1xufSkoZnVuY3Rpb24gKGkpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIHZhciBlID0gd2luZG93LlNsaWNrIHx8IHt9O1xuICAoKGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBlID0gMDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHQsIG8pIHtcbiAgICAgIHZhciBzLFxuICAgICAgICBuID0gdGhpcztcbiAgICAgIChuLmRlZmF1bHRzID0ge1xuICAgICAgICBhY2Nlc3NpYmlsaXR5OiAhMCxcbiAgICAgICAgYWRhcHRpdmVIZWlnaHQ6ICExLFxuICAgICAgICBhcHBlbmRBcnJvd3M6IGkodCksXG4gICAgICAgIGFwcGVuZERvdHM6IGkodCksXG4gICAgICAgIGFycm93czogITAsXG4gICAgICAgIGFzTmF2Rm9yOiBudWxsLFxuICAgICAgICBwcmV2QXJyb3c6XG4gICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJzbGljay1wcmV2XCIgYXJpYS1sYWJlbD1cIlByZXZpb3VzXCIgdHlwZT1cImJ1dHRvblwiPlByZXZpb3VzPC9idXR0b24+JyxcbiAgICAgICAgbmV4dEFycm93OlxuICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwic2xpY2stbmV4dFwiIGFyaWEtbGFiZWw9XCJOZXh0XCIgdHlwZT1cImJ1dHRvblwiPk5leHQ8L2J1dHRvbj4nLFxuICAgICAgICBhdXRvcGxheTogITEsXG4gICAgICAgIGF1dG9wbGF5U3BlZWQ6IDNlMyxcbiAgICAgICAgY2VudGVyTW9kZTogITEsXG4gICAgICAgIGNlbnRlclBhZGRpbmc6IFwiNTBweFwiLFxuICAgICAgICBjc3NFYXNlOiBcImVhc2VcIixcbiAgICAgICAgY3VzdG9tUGFnaW5nOiBmdW5jdGlvbiAoZSwgdCkge1xuICAgICAgICAgIHJldHVybiBpKCc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiAvPicpLnRleHQodCArIDEpO1xuICAgICAgICB9LFxuICAgICAgICBkb3RzOiAhMSxcbiAgICAgICAgZG90c0NsYXNzOiBcInNsaWNrLWRvdHNcIixcbiAgICAgICAgZHJhZ2dhYmxlOiAhMCxcbiAgICAgICAgZWFzaW5nOiBcImxpbmVhclwiLFxuICAgICAgICBlZGdlRnJpY3Rpb246IDAuMzUsXG4gICAgICAgIGZhZGU6ICExLFxuICAgICAgICBmb2N1c09uU2VsZWN0OiAhMSxcbiAgICAgICAgZm9jdXNPbkNoYW5nZTogITEsXG4gICAgICAgIGluZmluaXRlOiAhMCxcbiAgICAgICAgaW5pdGlhbFNsaWRlOiAwLFxuICAgICAgICBsYXp5TG9hZDogXCJvbmRlbWFuZFwiLFxuICAgICAgICBtb2JpbGVGaXJzdDogITEsXG4gICAgICAgIHBhdXNlT25Ib3ZlcjogITAsXG4gICAgICAgIHBhdXNlT25Gb2N1czogITAsXG4gICAgICAgIHBhdXNlT25Eb3RzSG92ZXI6ICExLFxuICAgICAgICByZXNwb25kVG86IFwid2luZG93XCIsXG4gICAgICAgIHJlc3BvbnNpdmU6IG51bGwsXG4gICAgICAgIHJvd3M6IDEsXG4gICAgICAgIHJ0bDogITEsXG4gICAgICAgIHNsaWRlOiBcIlwiLFxuICAgICAgICBzbGlkZXNQZXJSb3c6IDEsXG4gICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIHNwZWVkOiA1MDAsXG4gICAgICAgIHN3aXBlOiAhMCxcbiAgICAgICAgc3dpcGVUb1NsaWRlOiAhMSxcbiAgICAgICAgdG91Y2hNb3ZlOiAhMCxcbiAgICAgICAgdG91Y2hUaHJlc2hvbGQ6IDUsXG4gICAgICAgIHVzZUNTUzogITAsXG4gICAgICAgIHVzZVRyYW5zZm9ybTogITAsXG4gICAgICAgIHZhcmlhYmxlV2lkdGg6ICExLFxuICAgICAgICB2ZXJ0aWNhbDogITEsXG4gICAgICAgIHZlcnRpY2FsU3dpcGluZzogITEsXG4gICAgICAgIHdhaXRGb3JBbmltYXRlOiAhMCxcbiAgICAgICAgekluZGV4OiAxZTMsXG4gICAgICB9KSxcbiAgICAgICAgKG4uaW5pdGlhbHMgPSB7XG4gICAgICAgICAgYW5pbWF0aW5nOiAhMSxcbiAgICAgICAgICBkcmFnZ2luZzogITEsXG4gICAgICAgICAgYXV0b1BsYXlUaW1lcjogbnVsbCxcbiAgICAgICAgICBjdXJyZW50RGlyZWN0aW9uOiAwLFxuICAgICAgICAgIGN1cnJlbnRMZWZ0OiBudWxsLFxuICAgICAgICAgIGN1cnJlbnRTbGlkZTogMCxcbiAgICAgICAgICBkaXJlY3Rpb246IDEsXG4gICAgICAgICAgJGRvdHM6IG51bGwsXG4gICAgICAgICAgbGlzdFdpZHRoOiBudWxsLFxuICAgICAgICAgIGxpc3RIZWlnaHQ6IG51bGwsXG4gICAgICAgICAgbG9hZEluZGV4OiAwLFxuICAgICAgICAgICRuZXh0QXJyb3c6IG51bGwsXG4gICAgICAgICAgJHByZXZBcnJvdzogbnVsbCxcbiAgICAgICAgICBzY3JvbGxpbmc6ICExLFxuICAgICAgICAgIHNsaWRlQ291bnQ6IG51bGwsXG4gICAgICAgICAgc2xpZGVXaWR0aDogbnVsbCxcbiAgICAgICAgICAkc2xpZGVUcmFjazogbnVsbCxcbiAgICAgICAgICAkc2xpZGVzOiBudWxsLFxuICAgICAgICAgIHNsaWRpbmc6ICExLFxuICAgICAgICAgIHNsaWRlT2Zmc2V0OiAwLFxuICAgICAgICAgIHN3aXBlTGVmdDogbnVsbCxcbiAgICAgICAgICBzd2lwaW5nOiAhMSxcbiAgICAgICAgICAkbGlzdDogbnVsbCxcbiAgICAgICAgICB0b3VjaE9iamVjdDoge30sXG4gICAgICAgICAgdHJhbnNmb3Jtc0VuYWJsZWQ6ICExLFxuICAgICAgICAgIHVuc2xpY2tlZDogITEsXG4gICAgICAgIH0pLFxuICAgICAgICBpLmV4dGVuZChuLCBuLmluaXRpYWxzKSxcbiAgICAgICAgKG4uYWN0aXZlQnJlYWtwb2ludCA9IG51bGwpLFxuICAgICAgICAobi5hbmltVHlwZSA9IG51bGwpLFxuICAgICAgICAobi5hbmltUHJvcCA9IG51bGwpLFxuICAgICAgICAobi5icmVha3BvaW50cyA9IFtdKSxcbiAgICAgICAgKG4uYnJlYWtwb2ludFNldHRpbmdzID0gW10pLFxuICAgICAgICAobi5jc3NUcmFuc2l0aW9ucyA9ICExKSxcbiAgICAgICAgKG4uZm9jdXNzZWQgPSAhMSksXG4gICAgICAgIChuLmludGVycnVwdGVkID0gITEpLFxuICAgICAgICAobi5oaWRkZW4gPSBcImhpZGRlblwiKSxcbiAgICAgICAgKG4ucGF1c2VkID0gITApLFxuICAgICAgICAobi5wb3NpdGlvblByb3AgPSBudWxsKSxcbiAgICAgICAgKG4ucmVzcG9uZFRvID0gbnVsbCksXG4gICAgICAgIChuLnJvd0NvdW50ID0gMSksXG4gICAgICAgIChuLnNob3VsZENsaWNrID0gITApLFxuICAgICAgICAobi4kc2xpZGVyID0gaSh0KSksXG4gICAgICAgIChuLiRzbGlkZXNDYWNoZSA9IG51bGwpLFxuICAgICAgICAobi50cmFuc2Zvcm1UeXBlID0gbnVsbCksXG4gICAgICAgIChuLnRyYW5zaXRpb25UeXBlID0gbnVsbCksXG4gICAgICAgIChuLnZpc2liaWxpdHlDaGFuZ2UgPSBcInZpc2liaWxpdHljaGFuZ2VcIiksXG4gICAgICAgIChuLndpbmRvd1dpZHRoID0gMCksXG4gICAgICAgIChuLndpbmRvd1RpbWVyID0gbnVsbCksXG4gICAgICAgIChzID0gaSh0KS5kYXRhKFwic2xpY2tcIikgfHwge30pLFxuICAgICAgICAobi5vcHRpb25zID0gaS5leHRlbmQoe30sIG4uZGVmYXVsdHMsIG8sIHMpKSxcbiAgICAgICAgKG4uY3VycmVudFNsaWRlID0gbi5vcHRpb25zLmluaXRpYWxTbGlkZSksXG4gICAgICAgIChuLm9yaWdpbmFsU2V0dGluZ3MgPSBuLm9wdGlvbnMpLFxuICAgICAgICB2b2lkIDAgIT09IGRvY3VtZW50Lm1vekhpZGRlblxuICAgICAgICAgID8gKChuLmhpZGRlbiA9IFwibW96SGlkZGVuXCIpLFxuICAgICAgICAgICAgKG4udmlzaWJpbGl0eUNoYW5nZSA9IFwibW96dmlzaWJpbGl0eWNoYW5nZVwiKSlcbiAgICAgICAgICA6IHZvaWQgMCAhPT0gZG9jdW1lbnQud2Via2l0SGlkZGVuICYmXG4gICAgICAgICAgICAoKG4uaGlkZGVuID0gXCJ3ZWJraXRIaWRkZW5cIiksXG4gICAgICAgICAgICAobi52aXNpYmlsaXR5Q2hhbmdlID0gXCJ3ZWJraXR2aXNpYmlsaXR5Y2hhbmdlXCIpKSxcbiAgICAgICAgKG4uYXV0b1BsYXkgPSBpLnByb3h5KG4uYXV0b1BsYXksIG4pKSxcbiAgICAgICAgKG4uYXV0b1BsYXlDbGVhciA9IGkucHJveHkobi5hdXRvUGxheUNsZWFyLCBuKSksXG4gICAgICAgIChuLmF1dG9QbGF5SXRlcmF0b3IgPSBpLnByb3h5KG4uYXV0b1BsYXlJdGVyYXRvciwgbikpLFxuICAgICAgICAobi5jaGFuZ2VTbGlkZSA9IGkucHJveHkobi5jaGFuZ2VTbGlkZSwgbikpLFxuICAgICAgICAobi5jbGlja0hhbmRsZXIgPSBpLnByb3h5KG4uY2xpY2tIYW5kbGVyLCBuKSksXG4gICAgICAgIChuLnNlbGVjdEhhbmRsZXIgPSBpLnByb3h5KG4uc2VsZWN0SGFuZGxlciwgbikpLFxuICAgICAgICAobi5zZXRQb3NpdGlvbiA9IGkucHJveHkobi5zZXRQb3NpdGlvbiwgbikpLFxuICAgICAgICAobi5zd2lwZUhhbmRsZXIgPSBpLnByb3h5KG4uc3dpcGVIYW5kbGVyLCBuKSksXG4gICAgICAgIChuLmRyYWdIYW5kbGVyID0gaS5wcm94eShuLmRyYWdIYW5kbGVyLCBuKSksXG4gICAgICAgIChuLmtleUhhbmRsZXIgPSBpLnByb3h5KG4ua2V5SGFuZGxlciwgbikpLFxuICAgICAgICAobi5pbnN0YW5jZVVpZCA9IGUrKyksXG4gICAgICAgIChuLmh0bWxFeHByID0gL14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qKSQvKSxcbiAgICAgICAgbi5yZWdpc3RlckJyZWFrcG9pbnRzKCksXG4gICAgICAgIG4uaW5pdCghMCk7XG4gICAgfTtcbiAgfSkoKSkucHJvdG90eXBlLmFjdGl2YXRlQURBID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuJHNsaWRlVHJhY2tcbiAgICAgIC5maW5kKFwiLnNsaWNrLWFjdGl2ZVwiKVxuICAgICAgLmF0dHIoeyBcImFyaWEtaGlkZGVuXCI6IFwiZmFsc2VcIiB9KVxuICAgICAgLmZpbmQoXCJhLCBpbnB1dCwgYnV0dG9uLCBzZWxlY3RcIilcbiAgICAgIC5hdHRyKHsgdGFiaW5kZXg6IFwiMFwiIH0pO1xuICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYWRkU2xpZGUgPSBlLnByb3RvdHlwZS5zbGlja0FkZCA9XG4gICAgICBmdW5jdGlvbiAoZSwgdCwgbykge1xuICAgICAgICB2YXIgcyA9IHRoaXM7XG4gICAgICAgIGlmIChcImJvb2xlYW5cIiA9PSB0eXBlb2YgdCkgKG8gPSB0KSwgKHQgPSBudWxsKTtcbiAgICAgICAgZWxzZSBpZiAodCA8IDAgfHwgdCA+PSBzLnNsaWRlQ291bnQpIHJldHVybiAhMTtcbiAgICAgICAgcy51bmxvYWQoKSxcbiAgICAgICAgICBcIm51bWJlclwiID09IHR5cGVvZiB0XG4gICAgICAgICAgICA/IDAgPT09IHQgJiYgMCA9PT0gcy4kc2xpZGVzLmxlbmd0aFxuICAgICAgICAgICAgICA/IGkoZSkuYXBwZW5kVG8ocy4kc2xpZGVUcmFjaylcbiAgICAgICAgICAgICAgOiBvXG4gICAgICAgICAgICAgID8gaShlKS5pbnNlcnRCZWZvcmUocy4kc2xpZGVzLmVxKHQpKVxuICAgICAgICAgICAgICA6IGkoZSkuaW5zZXJ0QWZ0ZXIocy4kc2xpZGVzLmVxKHQpKVxuICAgICAgICAgICAgOiAhMCA9PT0gb1xuICAgICAgICAgICAgPyBpKGUpLnByZXBlbmRUbyhzLiRzbGlkZVRyYWNrKVxuICAgICAgICAgICAgOiBpKGUpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spLFxuICAgICAgICAgIChzLiRzbGlkZXMgPSBzLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkpLFxuICAgICAgICAgIHMuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxcbiAgICAgICAgICBzLiRzbGlkZVRyYWNrLmFwcGVuZChzLiRzbGlkZXMpLFxuICAgICAgICAgIHMuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICAgICAgICBpKHQpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsIGUpO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIChzLiRzbGlkZXNDYWNoZSA9IHMuJHNsaWRlcyksXG4gICAgICAgICAgcy5yZWluaXQoKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hbmltYXRlSGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgaWYgKFxuICAgICAgICAxID09PSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICEwID09PSBpLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQgJiZcbiAgICAgICAgITEgPT09IGkub3B0aW9ucy52ZXJ0aWNhbFxuICAgICAgKSB7XG4gICAgICAgIHZhciBlID0gaS4kc2xpZGVzLmVxKGkuY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCghMCk7XG4gICAgICAgIGkuJGxpc3QuYW5pbWF0ZSh7IGhlaWdodDogZSB9LCBpLm9wdGlvbnMuc3BlZWQpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hbmltYXRlU2xpZGUgPSBmdW5jdGlvbiAoZSwgdCkge1xuICAgICAgdmFyIG8gPSB7fSxcbiAgICAgICAgcyA9IHRoaXM7XG4gICAgICBzLmFuaW1hdGVIZWlnaHQoKSxcbiAgICAgICAgITAgPT09IHMub3B0aW9ucy5ydGwgJiYgITEgPT09IHMub3B0aW9ucy52ZXJ0aWNhbCAmJiAoZSA9IC1lKSxcbiAgICAgICAgITEgPT09IHMudHJhbnNmb3Jtc0VuYWJsZWRcbiAgICAgICAgICA/ICExID09PSBzLm9wdGlvbnMudmVydGljYWxcbiAgICAgICAgICAgID8gcy4kc2xpZGVUcmFjay5hbmltYXRlKFxuICAgICAgICAgICAgICAgIHsgbGVmdDogZSB9LFxuICAgICAgICAgICAgICAgIHMub3B0aW9ucy5zcGVlZCxcbiAgICAgICAgICAgICAgICBzLm9wdGlvbnMuZWFzaW5nLFxuICAgICAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgOiBzLiRzbGlkZVRyYWNrLmFuaW1hdGUoXG4gICAgICAgICAgICAgICAgeyB0b3A6IGUgfSxcbiAgICAgICAgICAgICAgICBzLm9wdGlvbnMuc3BlZWQsXG4gICAgICAgICAgICAgICAgcy5vcHRpb25zLmVhc2luZyxcbiAgICAgICAgICAgICAgICB0XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICA6ICExID09PSBzLmNzc1RyYW5zaXRpb25zXG4gICAgICAgICAgPyAoITAgPT09IHMub3B0aW9ucy5ydGwgJiYgKHMuY3VycmVudExlZnQgPSAtcy5jdXJyZW50TGVmdCksXG4gICAgICAgICAgICBpKHsgYW5pbVN0YXJ0OiBzLmN1cnJlbnRMZWZ0IH0pLmFuaW1hdGUoXG4gICAgICAgICAgICAgIHsgYW5pbVN0YXJ0OiBlIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogcy5vcHRpb25zLnNwZWVkLFxuICAgICAgICAgICAgICAgIGVhc2luZzogcy5vcHRpb25zLmVhc2luZyxcbiAgICAgICAgICAgICAgICBzdGVwOiBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgICAgICAgKGkgPSBNYXRoLmNlaWwoaSkpLFxuICAgICAgICAgICAgICAgICAgICAhMSA9PT0gcy5vcHRpb25zLnZlcnRpY2FsXG4gICAgICAgICAgICAgICAgICAgICAgPyAoKG9bcy5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZShcIiArIGkgKyBcInB4LCAwcHgpXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcy4kc2xpZGVUcmFjay5jc3MobykpXG4gICAgICAgICAgICAgICAgICAgICAgOiAoKG9bcy5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZSgwcHgsXCIgKyBpICsgXCJweClcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBzLiRzbGlkZVRyYWNrLmNzcyhvKSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdCAmJiB0LmNhbGwoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApKVxuICAgICAgICAgIDogKHMuYXBwbHlUcmFuc2l0aW9uKCksXG4gICAgICAgICAgICAoZSA9IE1hdGguY2VpbChlKSksXG4gICAgICAgICAgICAhMSA9PT0gcy5vcHRpb25zLnZlcnRpY2FsXG4gICAgICAgICAgICAgID8gKG9bcy5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZTNkKFwiICsgZSArIFwicHgsIDBweCwgMHB4KVwiKVxuICAgICAgICAgICAgICA6IChvW3MuYW5pbVR5cGVdID0gXCJ0cmFuc2xhdGUzZCgwcHgsXCIgKyBlICsgXCJweCwgMHB4KVwiKSxcbiAgICAgICAgICAgIHMuJHNsaWRlVHJhY2suY3NzKG8pLFxuICAgICAgICAgICAgdCAmJlxuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzLmRpc2FibGVUcmFuc2l0aW9uKCksIHQuY2FsbCgpO1xuICAgICAgICAgICAgICB9LCBzLm9wdGlvbnMuc3BlZWQpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0TmF2VGFyZ2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzLFxuICAgICAgICB0ID0gZS5vcHRpb25zLmFzTmF2Rm9yO1xuICAgICAgcmV0dXJuIHQgJiYgbnVsbCAhPT0gdCAmJiAodCA9IGkodCkubm90KGUuJHNsaWRlcikpLCB0O1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hc05hdkZvciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdCA9IHRoaXMuZ2V0TmF2VGFyZ2V0KCk7XG4gICAgICBudWxsICE9PSB0ICYmXG4gICAgICAgIFwib2JqZWN0XCIgPT0gdHlwZW9mIHQgJiZcbiAgICAgICAgdC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgdCA9IGkodGhpcykuc2xpY2soXCJnZXRTbGlja1wiKTtcbiAgICAgICAgICB0LnVuc2xpY2tlZCB8fCB0LnNsaWRlSGFuZGxlcihlLCAhMCk7XG4gICAgICAgIH0pO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hcHBseVRyYW5zaXRpb24gPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzLFxuICAgICAgICB0ID0ge307XG4gICAgICAhMSA9PT0gZS5vcHRpb25zLmZhZGVcbiAgICAgICAgPyAodFtlLnRyYW5zaXRpb25UeXBlXSA9XG4gICAgICAgICAgICBlLnRyYW5zZm9ybVR5cGUgKyBcIiBcIiArIGUub3B0aW9ucy5zcGVlZCArIFwibXMgXCIgKyBlLm9wdGlvbnMuY3NzRWFzZSlcbiAgICAgICAgOiAodFtlLnRyYW5zaXRpb25UeXBlXSA9XG4gICAgICAgICAgICBcIm9wYWNpdHkgXCIgKyBlLm9wdGlvbnMuc3BlZWQgKyBcIm1zIFwiICsgZS5vcHRpb25zLmNzc0Vhc2UpLFxuICAgICAgICAhMSA9PT0gZS5vcHRpb25zLmZhZGUgPyBlLiRzbGlkZVRyYWNrLmNzcyh0KSA6IGUuJHNsaWRlcy5lcShpKS5jc3ModCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmF1dG9QbGF5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgaS5hdXRvUGxheUNsZWFyKCksXG4gICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAoaS5hdXRvUGxheVRpbWVyID0gc2V0SW50ZXJ2YWwoXG4gICAgICAgICAgICBpLmF1dG9QbGF5SXRlcmF0b3IsXG4gICAgICAgICAgICBpLm9wdGlvbnMuYXV0b3BsYXlTcGVlZFxuICAgICAgICAgICkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hdXRvUGxheUNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgaS5hdXRvUGxheVRpbWVyICYmIGNsZWFySW50ZXJ2YWwoaS5hdXRvUGxheVRpbWVyKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYXV0b1BsYXlJdGVyYXRvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcyxcbiAgICAgICAgZSA9IGkuY3VycmVudFNsaWRlICsgaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuICAgICAgaS5wYXVzZWQgfHxcbiAgICAgICAgaS5pbnRlcnJ1cHRlZCB8fFxuICAgICAgICBpLmZvY3Vzc2VkIHx8XG4gICAgICAgICghMSA9PT0gaS5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgKDEgPT09IGkuZGlyZWN0aW9uICYmIGkuY3VycmVudFNsaWRlICsgMSA9PT0gaS5zbGlkZUNvdW50IC0gMVxuICAgICAgICAgICAgPyAoaS5kaXJlY3Rpb24gPSAwKVxuICAgICAgICAgICAgOiAwID09PSBpLmRpcmVjdGlvbiAmJlxuICAgICAgICAgICAgICAoKGUgPSBpLmN1cnJlbnRTbGlkZSAtIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgICAgIGkuY3VycmVudFNsaWRlIC0gMSA9PSAwICYmIChpLmRpcmVjdGlvbiA9IDEpKSksXG4gICAgICAgIGkuc2xpZGVIYW5kbGVyKGUpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYnVpbGRBcnJvd3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAhMCA9PT0gZS5vcHRpb25zLmFycm93cyAmJlxuICAgICAgICAoKGUuJHByZXZBcnJvdyA9IGkoZS5vcHRpb25zLnByZXZBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1hcnJvd1wiKSksXG4gICAgICAgIChlLiRuZXh0QXJyb3cgPSBpKGUub3B0aW9ucy5uZXh0QXJyb3cpLmFkZENsYXNzKFwic2xpY2stYXJyb3dcIikpLFxuICAgICAgICBlLnNsaWRlQ291bnQgPiBlLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyAoZS4kcHJldkFycm93XG4gICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWhpZGRlblwiKVxuICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIHRhYmluZGV4XCIpLFxuICAgICAgICAgICAgZS4kbmV4dEFycm93XG4gICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWhpZGRlblwiKVxuICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIHRhYmluZGV4XCIpLFxuICAgICAgICAgICAgZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5wcmV2QXJyb3cpICYmXG4gICAgICAgICAgICAgIGUuJHByZXZBcnJvdy5wcmVwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksXG4gICAgICAgICAgICBlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykgJiZcbiAgICAgICAgICAgICAgZS4kbmV4dEFycm93LmFwcGVuZFRvKGUub3B0aW9ucy5hcHBlbmRBcnJvd3MpLFxuICAgICAgICAgICAgITAgIT09IGUub3B0aW9ucy5pbmZpbml0ZSAmJlxuICAgICAgICAgICAgICBlLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcInRydWVcIikpXG4gICAgICAgICAgOiBlLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgLmFkZChlLiRuZXh0QXJyb3cpXG4gICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWhpZGRlblwiKVxuICAgICAgICAgICAgICAuYXR0cih7IFwiYXJpYS1kaXNhYmxlZFwiOiBcInRydWVcIiwgdGFiaW5kZXg6IFwiLTFcIiB9KSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmJ1aWxkRG90cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvID0gdGhpcztcbiAgICAgIGlmICghMCA9PT0gby5vcHRpb25zLmRvdHMpIHtcbiAgICAgICAgZm9yIChcbiAgICAgICAgICBvLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1kb3R0ZWRcIiksXG4gICAgICAgICAgICB0ID0gaShcIjx1bCAvPlwiKS5hZGRDbGFzcyhvLm9wdGlvbnMuZG90c0NsYXNzKSxcbiAgICAgICAgICAgIGUgPSAwO1xuICAgICAgICAgIGUgPD0gby5nZXREb3RDb3VudCgpO1xuICAgICAgICAgIGUgKz0gMVxuICAgICAgICApXG4gICAgICAgICAgdC5hcHBlbmQoaShcIjxsaSAvPlwiKS5hcHBlbmQoby5vcHRpb25zLmN1c3RvbVBhZ2luZy5jYWxsKHRoaXMsIG8sIGUpKSk7XG4gICAgICAgIChvLiRkb3RzID0gdC5hcHBlbmRUbyhvLm9wdGlvbnMuYXBwZW5kRG90cykpLFxuICAgICAgICAgIG8uJGRvdHMuZmluZChcImxpXCIpLmZpcnN0KCkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIik7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmJ1aWxkT3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgKGUuJHNsaWRlcyA9IGUuJHNsaWRlclxuICAgICAgICAuY2hpbGRyZW4oZS5vcHRpb25zLnNsaWRlICsgXCI6bm90KC5zbGljay1jbG9uZWQpXCIpXG4gICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLXNsaWRlXCIpKSxcbiAgICAgICAgKGUuc2xpZGVDb3VudCA9IGUuJHNsaWRlcy5sZW5ndGgpLFxuICAgICAgICBlLiRzbGlkZXMuZWFjaChmdW5jdGlvbiAoZSwgdCkge1xuICAgICAgICAgIGkodClcbiAgICAgICAgICAgIC5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiLCBlKVxuICAgICAgICAgICAgLmRhdGEoXCJvcmlnaW5hbFN0eWxpbmdcIiwgaSh0KS5hdHRyKFwic3R5bGVcIikgfHwgXCJcIik7XG4gICAgICAgIH0pLFxuICAgICAgICBlLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1zbGlkZXJcIiksXG4gICAgICAgIChlLiRzbGlkZVRyYWNrID1cbiAgICAgICAgICAwID09PSBlLnNsaWRlQ291bnRcbiAgICAgICAgICAgID8gaSgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLmFwcGVuZFRvKGUuJHNsaWRlcilcbiAgICAgICAgICAgIDogZS4kc2xpZGVzLndyYXBBbGwoJzxkaXYgY2xhc3M9XCJzbGljay10cmFja1wiLz4nKS5wYXJlbnQoKSksXG4gICAgICAgIChlLiRsaXN0ID0gZS4kc2xpZGVUcmFjay53cmFwKCc8ZGl2IGNsYXNzPVwic2xpY2stbGlzdFwiLz4nKS5wYXJlbnQoKSksXG4gICAgICAgIGUuJHNsaWRlVHJhY2suY3NzKFwib3BhY2l0eVwiLCAwKSxcbiAgICAgICAgKCEwICE9PSBlLm9wdGlvbnMuY2VudGVyTW9kZSAmJiAhMCAhPT0gZS5vcHRpb25zLnN3aXBlVG9TbGlkZSkgfHxcbiAgICAgICAgICAoZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsID0gMSksXG4gICAgICAgIGkoXCJpbWdbZGF0YS1sYXp5XVwiLCBlLiRzbGlkZXIpLm5vdChcIltzcmNdXCIpLmFkZENsYXNzKFwic2xpY2stbG9hZGluZ1wiKSxcbiAgICAgICAgZS5zZXR1cEluZmluaXRlKCksXG4gICAgICAgIGUuYnVpbGRBcnJvd3MoKSxcbiAgICAgICAgZS5idWlsZERvdHMoKSxcbiAgICAgICAgZS51cGRhdGVEb3RzKCksXG4gICAgICAgIGUuc2V0U2xpZGVDbGFzc2VzKFxuICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGUuY3VycmVudFNsaWRlID8gZS5jdXJyZW50U2xpZGUgOiAwXG4gICAgICAgICksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuZHJhZ2dhYmxlICYmIGUuJGxpc3QuYWRkQ2xhc3MoXCJkcmFnZ2FibGVcIik7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmJ1aWxkUm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpLFxuICAgICAgICBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByLFxuICAgICAgICBsID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKChvID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKSxcbiAgICAgICAgKG4gPSBsLiRzbGlkZXIuY2hpbGRyZW4oKSksXG4gICAgICAgIGwub3B0aW9ucy5yb3dzID4gMSlcbiAgICAgICkge1xuICAgICAgICBmb3IgKFxuICAgICAgICAgIHIgPSBsLm9wdGlvbnMuc2xpZGVzUGVyUm93ICogbC5vcHRpb25zLnJvd3MsXG4gICAgICAgICAgICBzID0gTWF0aC5jZWlsKG4ubGVuZ3RoIC8gciksXG4gICAgICAgICAgICBpID0gMDtcbiAgICAgICAgICBpIDwgcztcbiAgICAgICAgICBpKytcbiAgICAgICAgKSB7XG4gICAgICAgICAgdmFyIGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgIGZvciAoZSA9IDA7IGUgPCBsLm9wdGlvbnMucm93czsgZSsrKSB7XG4gICAgICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBmb3IgKHQgPSAwOyB0IDwgbC5vcHRpb25zLnNsaWRlc1BlclJvdzsgdCsrKSB7XG4gICAgICAgICAgICAgIHZhciBjID0gaSAqIHIgKyAoZSAqIGwub3B0aW9ucy5zbGlkZXNQZXJSb3cgKyB0KTtcbiAgICAgICAgICAgICAgbi5nZXQoYykgJiYgYS5hcHBlbmRDaGlsZChuLmdldChjKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkLmFwcGVuZENoaWxkKGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvLmFwcGVuZENoaWxkKGQpO1xuICAgICAgICB9XG4gICAgICAgIGwuJHNsaWRlci5lbXB0eSgpLmFwcGVuZChvKSxcbiAgICAgICAgICBsLiRzbGlkZXJcbiAgICAgICAgICAgIC5jaGlsZHJlbigpXG4gICAgICAgICAgICAuY2hpbGRyZW4oKVxuICAgICAgICAgICAgLmNoaWxkcmVuKClcbiAgICAgICAgICAgIC5jc3Moe1xuICAgICAgICAgICAgICB3aWR0aDogMTAwIC8gbC5vcHRpb25zLnNsaWRlc1BlclJvdyArIFwiJVwiLFxuICAgICAgICAgICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNoZWNrUmVzcG9uc2l2ZSA9IGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICB2YXIgbyxcbiAgICAgICAgcyxcbiAgICAgICAgbixcbiAgICAgICAgciA9IHRoaXMsXG4gICAgICAgIGwgPSAhMSxcbiAgICAgICAgZCA9IHIuJHNsaWRlci53aWR0aCgpLFxuICAgICAgICBhID0gd2luZG93LmlubmVyV2lkdGggfHwgaSh3aW5kb3cpLndpZHRoKCk7XG4gICAgICBpZiAoXG4gICAgICAgIChcIndpbmRvd1wiID09PSByLnJlc3BvbmRUb1xuICAgICAgICAgID8gKG4gPSBhKVxuICAgICAgICAgIDogXCJzbGlkZXJcIiA9PT0gci5yZXNwb25kVG9cbiAgICAgICAgICA/IChuID0gZClcbiAgICAgICAgICA6IFwibWluXCIgPT09IHIucmVzcG9uZFRvICYmIChuID0gTWF0aC5taW4oYSwgZCkpLFxuICAgICAgICByLm9wdGlvbnMucmVzcG9uc2l2ZSAmJlxuICAgICAgICAgIHIub3B0aW9ucy5yZXNwb25zaXZlLmxlbmd0aCAmJlxuICAgICAgICAgIG51bGwgIT09IHIub3B0aW9ucy5yZXNwb25zaXZlKVxuICAgICAgKSB7XG4gICAgICAgIHMgPSBudWxsO1xuICAgICAgICBmb3IgKG8gaW4gci5icmVha3BvaW50cylcbiAgICAgICAgICByLmJyZWFrcG9pbnRzLmhhc093blByb3BlcnR5KG8pICYmXG4gICAgICAgICAgICAoITEgPT09IHIub3JpZ2luYWxTZXR0aW5ncy5tb2JpbGVGaXJzdFxuICAgICAgICAgICAgICA/IG4gPCByLmJyZWFrcG9pbnRzW29dICYmIChzID0gci5icmVha3BvaW50c1tvXSlcbiAgICAgICAgICAgICAgOiBuID4gci5icmVha3BvaW50c1tvXSAmJiAocyA9IHIuYnJlYWtwb2ludHNbb10pKTtcbiAgICAgICAgbnVsbCAhPT0gc1xuICAgICAgICAgID8gbnVsbCAhPT0gci5hY3RpdmVCcmVha3BvaW50XG4gICAgICAgICAgICA/IChzICE9PSByLmFjdGl2ZUJyZWFrcG9pbnQgfHwgdCkgJiZcbiAgICAgICAgICAgICAgKChyLmFjdGl2ZUJyZWFrcG9pbnQgPSBzKSxcbiAgICAgICAgICAgICAgXCJ1bnNsaWNrXCIgPT09IHIuYnJlYWtwb2ludFNldHRpbmdzW3NdXG4gICAgICAgICAgICAgICAgPyByLnVuc2xpY2socylcbiAgICAgICAgICAgICAgICA6ICgoci5vcHRpb25zID0gaS5leHRlbmQoXG4gICAgICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgICAgICByLm9yaWdpbmFsU2V0dGluZ3MsXG4gICAgICAgICAgICAgICAgICAgIHIuYnJlYWtwb2ludFNldHRpbmdzW3NdXG4gICAgICAgICAgICAgICAgICApKSxcbiAgICAgICAgICAgICAgICAgICEwID09PSBlICYmIChyLmN1cnJlbnRTbGlkZSA9IHIub3B0aW9ucy5pbml0aWFsU2xpZGUpLFxuICAgICAgICAgICAgICAgICAgci5yZWZyZXNoKGUpKSxcbiAgICAgICAgICAgICAgKGwgPSBzKSlcbiAgICAgICAgICAgIDogKChyLmFjdGl2ZUJyZWFrcG9pbnQgPSBzKSxcbiAgICAgICAgICAgICAgXCJ1bnNsaWNrXCIgPT09IHIuYnJlYWtwb2ludFNldHRpbmdzW3NdXG4gICAgICAgICAgICAgICAgPyByLnVuc2xpY2socylcbiAgICAgICAgICAgICAgICA6ICgoci5vcHRpb25zID0gaS5leHRlbmQoXG4gICAgICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgICAgICByLm9yaWdpbmFsU2V0dGluZ3MsXG4gICAgICAgICAgICAgICAgICAgIHIuYnJlYWtwb2ludFNldHRpbmdzW3NdXG4gICAgICAgICAgICAgICAgICApKSxcbiAgICAgICAgICAgICAgICAgICEwID09PSBlICYmIChyLmN1cnJlbnRTbGlkZSA9IHIub3B0aW9ucy5pbml0aWFsU2xpZGUpLFxuICAgICAgICAgICAgICAgICAgci5yZWZyZXNoKGUpKSxcbiAgICAgICAgICAgICAgKGwgPSBzKSlcbiAgICAgICAgICA6IG51bGwgIT09IHIuYWN0aXZlQnJlYWtwb2ludCAmJlxuICAgICAgICAgICAgKChyLmFjdGl2ZUJyZWFrcG9pbnQgPSBudWxsKSxcbiAgICAgICAgICAgIChyLm9wdGlvbnMgPSByLm9yaWdpbmFsU2V0dGluZ3MpLFxuICAgICAgICAgICAgITAgPT09IGUgJiYgKHIuY3VycmVudFNsaWRlID0gci5vcHRpb25zLmluaXRpYWxTbGlkZSksXG4gICAgICAgICAgICByLnJlZnJlc2goZSksXG4gICAgICAgICAgICAobCA9IHMpKSxcbiAgICAgICAgICBlIHx8ICExID09PSBsIHx8IHIuJHNsaWRlci50cmlnZ2VyKFwiYnJlYWtwb2ludFwiLCBbciwgbF0pO1xuICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5jaGFuZ2VTbGlkZSA9IGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICB2YXIgbyxcbiAgICAgICAgcyxcbiAgICAgICAgbixcbiAgICAgICAgciA9IHRoaXMsXG4gICAgICAgIGwgPSBpKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBzd2l0Y2ggKFxuICAgICAgICAobC5pcyhcImFcIikgJiYgZS5wcmV2ZW50RGVmYXVsdCgpLFxuICAgICAgICBsLmlzKFwibGlcIikgfHwgKGwgPSBsLmNsb3Nlc3QoXCJsaVwiKSksXG4gICAgICAgIChuID0gci5zbGlkZUNvdW50ICUgci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9IDApLFxuICAgICAgICAobyA9IG5cbiAgICAgICAgICA/IDBcbiAgICAgICAgICA6IChyLnNsaWRlQ291bnQgLSByLmN1cnJlbnRTbGlkZSkgJSByLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLFxuICAgICAgICBlLmRhdGEubWVzc2FnZSlcbiAgICAgICkge1xuICAgICAgICBjYXNlIFwicHJldmlvdXNcIjpcbiAgICAgICAgICAocyA9IDAgPT09IG8gPyByLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgOiByLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gbyksXG4gICAgICAgICAgICByLnNsaWRlQ291bnQgPiByLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgICAgIHIuc2xpZGVIYW5kbGVyKHIuY3VycmVudFNsaWRlIC0gcywgITEsIHQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwibmV4dFwiOlxuICAgICAgICAgIChzID0gMCA9PT0gbyA/IHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IG8pLFxuICAgICAgICAgICAgci5zbGlkZUNvdW50ID4gci5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgICAgICByLnNsaWRlSGFuZGxlcihyLmN1cnJlbnRTbGlkZSArIHMsICExLCB0KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImluZGV4XCI6XG4gICAgICAgICAgdmFyIGQgPVxuICAgICAgICAgICAgMCA9PT0gZS5kYXRhLmluZGV4XG4gICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICA6IGUuZGF0YS5pbmRleCB8fCBsLmluZGV4KCkgKiByLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICAgICAgci5zbGlkZUhhbmRsZXIoci5jaGVja05hdmlnYWJsZShkKSwgITEsIHQpLFxuICAgICAgICAgICAgbC5jaGlsZHJlbigpLnRyaWdnZXIoXCJmb2N1c1wiKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNoZWNrTmF2aWdhYmxlID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlLCB0O1xuICAgICAgaWYgKCgoZSA9IHRoaXMuZ2V0TmF2aWdhYmxlSW5kZXhlcygpKSwgKHQgPSAwKSwgaSA+IGVbZS5sZW5ndGggLSAxXSkpXG4gICAgICAgIGkgPSBlW2UubGVuZ3RoIC0gMV07XG4gICAgICBlbHNlXG4gICAgICAgIGZvciAodmFyIG8gaW4gZSkge1xuICAgICAgICAgIGlmIChpIDwgZVtvXSkge1xuICAgICAgICAgICAgaSA9IHQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgdCA9IGVbb107XG4gICAgICAgIH1cbiAgICAgIHJldHVybiBpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5jbGVhblVwRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgZS5vcHRpb25zLmRvdHMgJiZcbiAgICAgICAgbnVsbCAhPT0gZS4kZG90cyAmJlxuICAgICAgICAoaShcImxpXCIsIGUuJGRvdHMpXG4gICAgICAgICAgLm9mZihcImNsaWNrLnNsaWNrXCIsIGUuY2hhbmdlU2xpZGUpXG4gICAgICAgICAgLm9mZihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITApKVxuICAgICAgICAgIC5vZmYoXCJtb3VzZWxlYXZlLnNsaWNrXCIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICExKSksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgIGUuJGRvdHMub2ZmKFwia2V5ZG93bi5zbGlja1wiLCBlLmtleUhhbmRsZXIpKSxcbiAgICAgICAgZS4kc2xpZGVyLm9mZihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIiksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuYXJyb3dzICYmXG4gICAgICAgICAgZS5zbGlkZUNvdW50ID4gZS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgIChlLiRwcmV2QXJyb3cgJiYgZS4kcHJldkFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIsIGUuY2hhbmdlU2xpZGUpLFxuICAgICAgICAgIGUuJG5leHRBcnJvdyAmJiBlLiRuZXh0QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIiwgZS5jaGFuZ2VTbGlkZSksXG4gICAgICAgICAgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmXG4gICAgICAgICAgICAoZS4kcHJldkFycm93ICYmIGUuJHByZXZBcnJvdy5vZmYoXCJrZXlkb3duLnNsaWNrXCIsIGUua2V5SGFuZGxlciksXG4gICAgICAgICAgICBlLiRuZXh0QXJyb3cgJiYgZS4kbmV4dEFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIiwgZS5rZXlIYW5kbGVyKSkpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIsIGUuc3dpcGVIYW5kbGVyKSxcbiAgICAgICAgZS4kbGlzdC5vZmYoXCJ0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrXCIsIGUuc3dpcGVIYW5kbGVyKSxcbiAgICAgICAgZS4kbGlzdC5vZmYoXCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrXCIsIGUuc3dpcGVIYW5kbGVyKSxcbiAgICAgICAgZS4kbGlzdC5vZmYoXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIsIGUuc3dpcGVIYW5kbGVyKSxcbiAgICAgICAgZS4kbGlzdC5vZmYoXCJjbGljay5zbGlja1wiLCBlLmNsaWNrSGFuZGxlciksXG4gICAgICAgIGkoZG9jdW1lbnQpLm9mZihlLnZpc2liaWxpdHlDaGFuZ2UsIGUudmlzaWJpbGl0eSksXG4gICAgICAgIGUuY2xlYW5VcFNsaWRlRXZlbnRzKCksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgIGUuJGxpc3Qub2ZmKFwia2V5ZG93bi5zbGlja1wiLCBlLmtleUhhbmRsZXIpLFxuICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmZvY3VzT25TZWxlY3QgJiZcbiAgICAgICAgICBpKGUuJHNsaWRlVHJhY2spLmNoaWxkcmVuKCkub2ZmKFwiY2xpY2suc2xpY2tcIiwgZS5zZWxlY3RIYW5kbGVyKSxcbiAgICAgICAgaSh3aW5kb3cpLm9mZihcbiAgICAgICAgICBcIm9yaWVudGF0aW9uY2hhbmdlLnNsaWNrLnNsaWNrLVwiICsgZS5pbnN0YW5jZVVpZCxcbiAgICAgICAgICBlLm9yaWVudGF0aW9uQ2hhbmdlXG4gICAgICAgICksXG4gICAgICAgIGkod2luZG93KS5vZmYoXCJyZXNpemUuc2xpY2suc2xpY2stXCIgKyBlLmluc3RhbmNlVWlkLCBlLnJlc2l6ZSksXG4gICAgICAgIGkoXCJbZHJhZ2dhYmxlIT10cnVlXVwiLCBlLiRzbGlkZVRyYWNrKS5vZmYoXG4gICAgICAgICAgXCJkcmFnc3RhcnRcIixcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0XG4gICAgICAgICksXG4gICAgICAgIGkod2luZG93KS5vZmYoXCJsb2FkLnNsaWNrLnNsaWNrLVwiICsgZS5pbnN0YW5jZVVpZCwgZS5zZXRQb3NpdGlvbik7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNsZWFuVXBTbGlkZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGUuJGxpc3Qub2ZmKFwibW91c2VlbnRlci5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMCkpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuY2xlYW5VcFJvd3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSxcbiAgICAgICAgZSA9IHRoaXM7XG4gICAgICBlLm9wdGlvbnMucm93cyA+IDEgJiZcbiAgICAgICAgKChpID0gZS4kc2xpZGVzLmNoaWxkcmVuKCkuY2hpbGRyZW4oKSkucmVtb3ZlQXR0cihcInN0eWxlXCIpLFxuICAgICAgICBlLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQoaSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5jbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgITEgPT09IHRoaXMuc2hvdWxkQ2xpY2sgJiZcbiAgICAgICAgKGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksIGkuc3RvcFByb3BhZ2F0aW9uKCksIGkucHJldmVudERlZmF1bHQoKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgdC5hdXRvUGxheUNsZWFyKCksXG4gICAgICAgICh0LnRvdWNoT2JqZWN0ID0ge30pLFxuICAgICAgICB0LmNsZWFuVXBFdmVudHMoKSxcbiAgICAgICAgaShcIi5zbGljay1jbG9uZWRcIiwgdC4kc2xpZGVyKS5kZXRhY2goKSxcbiAgICAgICAgdC4kZG90cyAmJiB0LiRkb3RzLnJlbW92ZSgpLFxuICAgICAgICB0LiRwcmV2QXJyb3cgJiZcbiAgICAgICAgICB0LiRwcmV2QXJyb3cubGVuZ3RoICYmXG4gICAgICAgICAgKHQuJHByZXZBcnJvd1xuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWQgc2xpY2stYXJyb3cgc2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgICAucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIilcbiAgICAgICAgICAgIC5jc3MoXCJkaXNwbGF5XCIsIFwiXCIpLFxuICAgICAgICAgIHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMucHJldkFycm93KSAmJiB0LiRwcmV2QXJyb3cucmVtb3ZlKCkpLFxuICAgICAgICB0LiRuZXh0QXJyb3cgJiZcbiAgICAgICAgICB0LiRuZXh0QXJyb3cubGVuZ3RoICYmXG4gICAgICAgICAgKHQuJG5leHRBcnJvd1xuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWQgc2xpY2stYXJyb3cgc2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgICAucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIilcbiAgICAgICAgICAgIC5jc3MoXCJkaXNwbGF5XCIsIFwiXCIpLFxuICAgICAgICAgIHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMubmV4dEFycm93KSAmJiB0LiRuZXh0QXJyb3cucmVtb3ZlKCkpLFxuICAgICAgICB0LiRzbGlkZXMgJiZcbiAgICAgICAgICAodC4kc2xpZGVzXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXG4gICAgICAgICAgICAgIFwic2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnRcIlxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlblwiKVxuICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpXG4gICAgICAgICAgICAuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIGkodGhpcykuYXR0cihcInN0eWxlXCIsIGkodGhpcykuZGF0YShcIm9yaWdpbmFsU3R5bGluZ1wiKSk7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICB0LiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksXG4gICAgICAgICAgdC4kc2xpZGVUcmFjay5kZXRhY2goKSxcbiAgICAgICAgICB0LiRsaXN0LmRldGFjaCgpLFxuICAgICAgICAgIHQuJHNsaWRlci5hcHBlbmQodC4kc2xpZGVzKSksXG4gICAgICAgIHQuY2xlYW5VcFJvd3MoKSxcbiAgICAgICAgdC4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGVyXCIpLFxuICAgICAgICB0LiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1pbml0aWFsaXplZFwiKSxcbiAgICAgICAgdC4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stZG90dGVkXCIpLFxuICAgICAgICAodC51bnNsaWNrZWQgPSAhMCksXG4gICAgICAgIGUgfHwgdC4kc2xpZGVyLnRyaWdnZXIoXCJkZXN0cm95XCIsIFt0XSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmRpc2FibGVUcmFuc2l0aW9uID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlID0gdGhpcyxcbiAgICAgICAgdCA9IHt9O1xuICAgICAgKHRbZS50cmFuc2l0aW9uVHlwZV0gPSBcIlwiKSxcbiAgICAgICAgITEgPT09IGUub3B0aW9ucy5mYWRlID8gZS4kc2xpZGVUcmFjay5jc3ModCkgOiBlLiRzbGlkZXMuZXEoaSkuY3NzKHQpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5mYWRlU2xpZGUgPSBmdW5jdGlvbiAoaSwgZSkge1xuICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgITEgPT09IHQuY3NzVHJhbnNpdGlvbnNcbiAgICAgICAgPyAodC4kc2xpZGVzLmVxKGkpLmNzcyh7IHpJbmRleDogdC5vcHRpb25zLnpJbmRleCB9KSxcbiAgICAgICAgICB0LiRzbGlkZXNcbiAgICAgICAgICAgIC5lcShpKVxuICAgICAgICAgICAgLmFuaW1hdGUoeyBvcGFjaXR5OiAxIH0sIHQub3B0aW9ucy5zcGVlZCwgdC5vcHRpb25zLmVhc2luZywgZSkpXG4gICAgICAgIDogKHQuYXBwbHlUcmFuc2l0aW9uKGkpLFxuICAgICAgICAgIHQuJHNsaWRlcy5lcShpKS5jc3MoeyBvcGFjaXR5OiAxLCB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXggfSksXG4gICAgICAgICAgZSAmJlxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHQuZGlzYWJsZVRyYW5zaXRpb24oaSksIGUuY2FsbCgpO1xuICAgICAgICAgICAgfSwgdC5vcHRpb25zLnNwZWVkKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmZhZGVTbGlkZU91dCA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAhMSA9PT0gZS5jc3NUcmFuc2l0aW9uc1xuICAgICAgICA/IGUuJHNsaWRlc1xuICAgICAgICAgICAgLmVxKGkpXG4gICAgICAgICAgICAuYW5pbWF0ZShcbiAgICAgICAgICAgICAgeyBvcGFjaXR5OiAwLCB6SW5kZXg6IGUub3B0aW9ucy56SW5kZXggLSAyIH0sXG4gICAgICAgICAgICAgIGUub3B0aW9ucy5zcGVlZCxcbiAgICAgICAgICAgICAgZS5vcHRpb25zLmVhc2luZ1xuICAgICAgICAgICAgKVxuICAgICAgICA6IChlLmFwcGx5VHJhbnNpdGlvbihpKSxcbiAgICAgICAgICBlLiRzbGlkZXMuZXEoaSkuY3NzKHsgb3BhY2l0eTogMCwgekluZGV4OiBlLm9wdGlvbnMuekluZGV4IC0gMiB9KSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmZpbHRlclNsaWRlcyA9IGUucHJvdG90eXBlLnNsaWNrRmlsdGVyID1cbiAgICAgIGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgbnVsbCAhPT0gaSAmJlxuICAgICAgICAgICgoZS4kc2xpZGVzQ2FjaGUgPSBlLiRzbGlkZXMpLFxuICAgICAgICAgIGUudW5sb2FkKCksXG4gICAgICAgICAgZS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLFxuICAgICAgICAgIGUuJHNsaWRlc0NhY2hlLmZpbHRlcihpKS5hcHBlbmRUbyhlLiRzbGlkZVRyYWNrKSxcbiAgICAgICAgICBlLnJlaW5pdCgpKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5mb2N1c0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBlLiRzbGlkZXJcbiAgICAgICAgLm9mZihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIilcbiAgICAgICAgLm9uKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiLCBcIipcIiwgZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICB0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIHZhciBvID0gaSh0aGlzKTtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGUub3B0aW9ucy5wYXVzZU9uRm9jdXMgJiZcbiAgICAgICAgICAgICAgKChlLmZvY3Vzc2VkID0gby5pcyhcIjpmb2N1c1wiKSksIGUuYXV0b1BsYXkoKSk7XG4gICAgICAgICAgfSwgMCk7XG4gICAgICAgIH0pO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXRDdXJyZW50ID0gZS5wcm90b3R5cGUuc2xpY2tDdXJyZW50U2xpZGUgPVxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50U2xpZGU7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0RG90Q291bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXMsXG4gICAgICAgIGUgPSAwLFxuICAgICAgICB0ID0gMCxcbiAgICAgICAgbyA9IDA7XG4gICAgICBpZiAoITAgPT09IGkub3B0aW9ucy5pbmZpbml0ZSlcbiAgICAgICAgaWYgKGkuc2xpZGVDb3VudCA8PSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KSArK287XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBmb3IgKDsgZSA8IGkuc2xpZGVDb3VudDsgKVxuICAgICAgICAgICAgKytvLFxuICAgICAgICAgICAgICAoZSA9IHQgKyBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLFxuICAgICAgICAgICAgICAodCArPVxuICAgICAgICAgICAgICAgIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICAgICAgICA/IGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbFxuICAgICAgICAgICAgICAgICAgOiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgIGVsc2UgaWYgKCEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSkgbyA9IGkuc2xpZGVDb3VudDtcbiAgICAgIGVsc2UgaWYgKGkub3B0aW9ucy5hc05hdkZvcilcbiAgICAgICAgZm9yICg7IGUgPCBpLnNsaWRlQ291bnQ7IClcbiAgICAgICAgICArK28sXG4gICAgICAgICAgICAoZSA9IHQgKyBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLFxuICAgICAgICAgICAgKHQgKz1cbiAgICAgICAgICAgICAgaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDw9IGkub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICAgICAgICA/IGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbFxuICAgICAgICAgICAgICAgIDogaS5vcHRpb25zLnNsaWRlc1RvU2hvdyk7XG4gICAgICBlbHNlXG4gICAgICAgIG8gPVxuICAgICAgICAgIDEgK1xuICAgICAgICAgIE1hdGguY2VpbChcbiAgICAgICAgICAgIChpLnNsaWRlQ291bnQgLSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KSAvIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbFxuICAgICAgICAgICk7XG4gICAgICByZXR1cm4gbyAtIDE7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmdldExlZnQgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8sXG4gICAgICAgIHMsXG4gICAgICAgIG4gPSB0aGlzLFxuICAgICAgICByID0gMDtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIChuLnNsaWRlT2Zmc2V0ID0gMCksXG4gICAgICAgICh0ID0gbi4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApKSxcbiAgICAgICAgITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZVxuICAgICAgICAgID8gKG4uc2xpZGVDb3VudCA+IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAgICAgKChuLnNsaWRlT2Zmc2V0ID0gbi5zbGlkZVdpZHRoICogbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAqIC0xKSxcbiAgICAgICAgICAgICAgKHMgPSAtMSksXG4gICAgICAgICAgICAgICEwID09PSBuLm9wdGlvbnMudmVydGljYWwgJiZcbiAgICAgICAgICAgICAgICAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUgJiZcbiAgICAgICAgICAgICAgICAoMiA9PT0gbi5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgICAgICAgICAgPyAocyA9IC0xLjUpXG4gICAgICAgICAgICAgICAgICA6IDEgPT09IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgKHMgPSAtMikpLFxuICAgICAgICAgICAgICAociA9IHQgKiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICogcykpLFxuICAgICAgICAgICAgbi5zbGlkZUNvdW50ICUgbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9IDAgJiZcbiAgICAgICAgICAgICAgaSArIG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA+IG4uc2xpZGVDb3VudCAmJlxuICAgICAgICAgICAgICBuLnNsaWRlQ291bnQgPiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgICAgIChpID4gbi5zbGlkZUNvdW50XG4gICAgICAgICAgICAgICAgPyAoKG4uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgICAgICAgICAgICAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIChpIC0gbi5zbGlkZUNvdW50KSkgKlxuICAgICAgICAgICAgICAgICAgICBuLnNsaWRlV2lkdGggKlxuICAgICAgICAgICAgICAgICAgICAtMSksXG4gICAgICAgICAgICAgICAgICAociA9IChuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gKGkgLSBuLnNsaWRlQ291bnQpKSAqIHQgKiAtMSkpXG4gICAgICAgICAgICAgICAgOiAoKG4uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgICAgICAgICAgICAobi5zbGlkZUNvdW50ICUgbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSAqXG4gICAgICAgICAgICAgICAgICAgIG4uc2xpZGVXaWR0aCAqXG4gICAgICAgICAgICAgICAgICAgIC0xKSxcbiAgICAgICAgICAgICAgICAgIChyID0gKG4uc2xpZGVDb3VudCAlIG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCkgKiB0ICogLTEpKSkpXG4gICAgICAgICAgOiBpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyA+IG4uc2xpZGVDb3VudCAmJlxuICAgICAgICAgICAgKChuLnNsaWRlT2Zmc2V0ID1cbiAgICAgICAgICAgICAgKGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gbi5zbGlkZUNvdW50KSAqIG4uc2xpZGVXaWR0aCksXG4gICAgICAgICAgICAociA9IChpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIG4uc2xpZGVDb3VudCkgKiB0KSksXG4gICAgICAgIG4uc2xpZGVDb3VudCA8PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgKChuLnNsaWRlT2Zmc2V0ID0gMCksIChyID0gMCkpLFxuICAgICAgICAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUgJiYgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICA/IChuLnNsaWRlT2Zmc2V0ID1cbiAgICAgICAgICAgICAgKG4uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3Iobi5vcHRpb25zLnNsaWRlc1RvU2hvdykpIC8gMiAtXG4gICAgICAgICAgICAgIChuLnNsaWRlV2lkdGggKiBuLnNsaWRlQ291bnQpIC8gMilcbiAgICAgICAgICA6ICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJiAhMCA9PT0gbi5vcHRpb25zLmluZmluaXRlXG4gICAgICAgICAgPyAobi5zbGlkZU9mZnNldCArPVxuICAgICAgICAgICAgICBuLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKSAtXG4gICAgICAgICAgICAgIG4uc2xpZGVXaWR0aClcbiAgICAgICAgICA6ICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgKChuLnNsaWRlT2Zmc2V0ID0gMCksXG4gICAgICAgICAgICAobi5zbGlkZU9mZnNldCArPVxuICAgICAgICAgICAgICBuLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKSkpLFxuICAgICAgICAoZSA9XG4gICAgICAgICAgITEgPT09IG4ub3B0aW9ucy52ZXJ0aWNhbFxuICAgICAgICAgICAgPyBpICogbi5zbGlkZVdpZHRoICogLTEgKyBuLnNsaWRlT2Zmc2V0XG4gICAgICAgICAgICA6IGkgKiB0ICogLTEgKyByKSxcbiAgICAgICAgITAgPT09IG4ub3B0aW9ucy52YXJpYWJsZVdpZHRoICYmXG4gICAgICAgICAgKChvID1cbiAgICAgICAgICAgIG4uc2xpZGVDb3VudCA8PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IHx8ICExID09PSBuLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICAgICAgPyBuLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmVxKGkpXG4gICAgICAgICAgICAgIDogbi4kc2xpZGVUcmFja1xuICAgICAgICAgICAgICAgICAgLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpXG4gICAgICAgICAgICAgICAgICAuZXEoaSArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKSxcbiAgICAgICAgICAoZSA9XG4gICAgICAgICAgICAhMCA9PT0gbi5vcHRpb25zLnJ0bFxuICAgICAgICAgICAgICA/IG9bMF1cbiAgICAgICAgICAgICAgICA/IC0xICogKG4uJHNsaWRlVHJhY2sud2lkdGgoKSAtIG9bMF0ub2Zmc2V0TGVmdCAtIG8ud2lkdGgoKSlcbiAgICAgICAgICAgICAgICA6IDBcbiAgICAgICAgICAgICAgOiBvWzBdXG4gICAgICAgICAgICAgID8gLTEgKiBvWzBdLm9mZnNldExlZnRcbiAgICAgICAgICAgICAgOiAwKSxcbiAgICAgICAgICAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUgJiZcbiAgICAgICAgICAgICgobyA9XG4gICAgICAgICAgICAgIG4uc2xpZGVDb3VudCA8PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IHx8XG4gICAgICAgICAgICAgICExID09PSBuLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICAgICAgICA/IG4uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaSlcbiAgICAgICAgICAgICAgICA6IG4uJHNsaWRlVHJhY2tcbiAgICAgICAgICAgICAgICAgICAgLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpXG4gICAgICAgICAgICAgICAgICAgIC5lcShpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArIDEpKSxcbiAgICAgICAgICAgIChlID1cbiAgICAgICAgICAgICAgITAgPT09IG4ub3B0aW9ucy5ydGxcbiAgICAgICAgICAgICAgICA/IG9bMF1cbiAgICAgICAgICAgICAgICAgID8gLTEgKiAobi4kc2xpZGVUcmFjay53aWR0aCgpIC0gb1swXS5vZmZzZXRMZWZ0IC0gby53aWR0aCgpKVxuICAgICAgICAgICAgICAgICAgOiAwXG4gICAgICAgICAgICAgICAgOiBvWzBdXG4gICAgICAgICAgICAgICAgPyAtMSAqIG9bMF0ub2Zmc2V0TGVmdFxuICAgICAgICAgICAgICAgIDogMCksXG4gICAgICAgICAgICAoZSArPSAobi4kbGlzdC53aWR0aCgpIC0gby5vdXRlcldpZHRoKCkpIC8gMikpKSxcbiAgICAgICAgZVxuICAgICAgKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0T3B0aW9uID0gZS5wcm90b3R5cGUuc2xpY2tHZXRPcHRpb24gPVxuICAgICAgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uc1tpXTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXROYXZpZ2FibGVJbmRleGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGksXG4gICAgICAgIGUgPSB0aGlzLFxuICAgICAgICB0ID0gMCxcbiAgICAgICAgbyA9IDAsXG4gICAgICAgIHMgPSBbXTtcbiAgICAgIGZvciAoXG4gICAgICAgICExID09PSBlLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICA/IChpID0gZS5zbGlkZUNvdW50KVxuICAgICAgICAgIDogKCh0ID0gLTEgKiBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLFxuICAgICAgICAgICAgKG8gPSAtMSAqIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgICAoaSA9IDIgKiBlLnNsaWRlQ291bnQpKTtcbiAgICAgICAgdCA8IGk7XG5cbiAgICAgIClcbiAgICAgICAgcy5wdXNoKHQpLFxuICAgICAgICAgICh0ID0gbyArIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgKG8gKz1cbiAgICAgICAgICAgIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBlLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICAgID8gZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICAgICAgICAgIDogZS5vcHRpb25zLnNsaWRlc1RvU2hvdyk7XG4gICAgICByZXR1cm4gcztcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0U2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0U2xpZGVDb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvID0gdGhpcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgICh0ID1cbiAgICAgICAgICAhMCA9PT0gby5vcHRpb25zLmNlbnRlck1vZGVcbiAgICAgICAgICAgID8gby5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihvLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMilcbiAgICAgICAgICAgIDogMCksXG4gICAgICAgICEwID09PSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlXG4gICAgICAgICAgPyAoby4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLXNsaWRlXCIpLmVhY2goZnVuY3Rpb24gKHMsIG4pIHtcbiAgICAgICAgICAgICAgaWYgKG4ub2Zmc2V0TGVmdCAtIHQgKyBpKG4pLm91dGVyV2lkdGgoKSAvIDIgPiAtMSAqIG8uc3dpcGVMZWZ0KVxuICAgICAgICAgICAgICAgIHJldHVybiAoZSA9IG4pLCAhMTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgTWF0aC5hYnMoaShlKS5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiKSAtIG8uY3VycmVudFNsaWRlKSB8fCAxKVxuICAgICAgICAgIDogby5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nb1RvID0gZS5wcm90b3R5cGUuc2xpY2tHb1RvID1cbiAgICAgIGZ1bmN0aW9uIChpLCBlKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlU2xpZGUoeyBkYXRhOiB7IG1lc3NhZ2U6IFwiaW5kZXhcIiwgaW5kZXg6IHBhcnNlSW50KGkpIH0gfSwgZSk7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICBpKHQuJHNsaWRlcikuaGFzQ2xhc3MoXCJzbGljay1pbml0aWFsaXplZFwiKSB8fFxuICAgICAgICAoaSh0LiRzbGlkZXIpLmFkZENsYXNzKFwic2xpY2staW5pdGlhbGl6ZWRcIiksXG4gICAgICAgIHQuYnVpbGRSb3dzKCksXG4gICAgICAgIHQuYnVpbGRPdXQoKSxcbiAgICAgICAgdC5zZXRQcm9wcygpLFxuICAgICAgICB0LnN0YXJ0TG9hZCgpLFxuICAgICAgICB0LmxvYWRTbGlkZXIoKSxcbiAgICAgICAgdC5pbml0aWFsaXplRXZlbnRzKCksXG4gICAgICAgIHQudXBkYXRlQXJyb3dzKCksXG4gICAgICAgIHQudXBkYXRlRG90cygpLFxuICAgICAgICB0LmNoZWNrUmVzcG9uc2l2ZSghMCksXG4gICAgICAgIHQuZm9jdXNIYW5kbGVyKCkpLFxuICAgICAgICBlICYmIHQuJHNsaWRlci50cmlnZ2VyKFwiaW5pdFwiLCBbdF0pLFxuICAgICAgICAhMCA9PT0gdC5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiYgdC5pbml0QURBKCksXG4gICAgICAgIHQub3B0aW9ucy5hdXRvcGxheSAmJiAoKHQucGF1c2VkID0gITEpLCB0LmF1dG9QbGF5KCkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5pbml0QURBID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzLFxuICAgICAgICB0ID0gTWF0aC5jZWlsKGUuc2xpZGVDb3VudCAvIGUub3B0aW9ucy5zbGlkZXNUb1Nob3cpLFxuICAgICAgICBvID0gZS5nZXROYXZpZ2FibGVJbmRleGVzKCkuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIGkgPj0gMCAmJiBpIDwgZS5zbGlkZUNvdW50O1xuICAgICAgICB9KTtcbiAgICAgIGUuJHNsaWRlc1xuICAgICAgICAuYWRkKGUuJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1jbG9uZWRcIikpXG4gICAgICAgIC5hdHRyKHsgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiwgdGFiaW5kZXg6IFwiLTFcIiB9KVxuICAgICAgICAuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKVxuICAgICAgICAuYXR0cih7IHRhYmluZGV4OiBcIi0xXCIgfSksXG4gICAgICAgIG51bGwgIT09IGUuJGRvdHMgJiZcbiAgICAgICAgICAoZS4kc2xpZGVzXG4gICAgICAgICAgICAubm90KGUuJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1jbG9uZWRcIikpXG4gICAgICAgICAgICAuZWFjaChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICB2YXIgcyA9IG8uaW5kZXhPZih0KTtcbiAgICAgICAgICAgICAgaSh0aGlzKS5hdHRyKHtcbiAgICAgICAgICAgICAgICByb2xlOiBcInRhYnBhbmVsXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwic2xpY2stc2xpZGVcIiArIGUuaW5zdGFuY2VVaWQgKyB0LFxuICAgICAgICAgICAgICAgIHRhYmluZGV4OiAtMSxcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLTEgIT09IHMgJiZcbiAgICAgICAgICAgICAgICAgIGkodGhpcykuYXR0cih7XG4gICAgICAgICAgICAgICAgICAgIFwiYXJpYS1kZXNjcmliZWRieVwiOlxuICAgICAgICAgICAgICAgICAgICAgIFwic2xpY2stc2xpZGUtY29udHJvbFwiICsgZS5pbnN0YW5jZVVpZCArIHMsXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgIGUuJGRvdHNcbiAgICAgICAgICAgIC5hdHRyKFwicm9sZVwiLCBcInRhYmxpc3RcIilcbiAgICAgICAgICAgIC5maW5kKFwibGlcIilcbiAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICAgIHZhciBuID0gb1tzXTtcbiAgICAgICAgICAgICAgaSh0aGlzKS5hdHRyKHsgcm9sZTogXCJwcmVzZW50YXRpb25cIiB9KSxcbiAgICAgICAgICAgICAgICBpKHRoaXMpXG4gICAgICAgICAgICAgICAgICAuZmluZChcImJ1dHRvblwiKVxuICAgICAgICAgICAgICAgICAgLmZpcnN0KClcbiAgICAgICAgICAgICAgICAgIC5hdHRyKHtcbiAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJ0YWJcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwic2xpY2stc2xpZGUtY29udHJvbFwiICsgZS5pbnN0YW5jZVVpZCArIHMsXG4gICAgICAgICAgICAgICAgICAgIFwiYXJpYS1jb250cm9sc1wiOiBcInNsaWNrLXNsaWRlXCIgKyBlLmluc3RhbmNlVWlkICsgbixcbiAgICAgICAgICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHMgKyAxICsgXCIgb2YgXCIgKyB0LFxuICAgICAgICAgICAgICAgICAgICBcImFyaWEtc2VsZWN0ZWRcIjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgdGFiaW5kZXg6IFwiLTFcIixcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5lcShlLmN1cnJlbnRTbGlkZSlcbiAgICAgICAgICAgIC5maW5kKFwiYnV0dG9uXCIpXG4gICAgICAgICAgICAuYXR0cih7IFwiYXJpYS1zZWxlY3RlZFwiOiBcInRydWVcIiwgdGFiaW5kZXg6IFwiMFwiIH0pXG4gICAgICAgICAgICAuZW5kKCkpO1xuICAgICAgZm9yICh2YXIgcyA9IGUuY3VycmVudFNsaWRlLCBuID0gcyArIGUub3B0aW9ucy5zbGlkZXNUb1Nob3c7IHMgPCBuOyBzKyspXG4gICAgICAgIGUuJHNsaWRlcy5lcShzKS5hdHRyKFwidGFiaW5kZXhcIiwgMCk7XG4gICAgICBlLmFjdGl2YXRlQURBKCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmluaXRBcnJvd0V2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgICEwID09PSBpLm9wdGlvbnMuYXJyb3dzICYmXG4gICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgKGkuJHByZXZBcnJvd1xuICAgICAgICAgIC5vZmYoXCJjbGljay5zbGlja1wiKVxuICAgICAgICAgIC5vbihcImNsaWNrLnNsaWNrXCIsIHsgbWVzc2FnZTogXCJwcmV2aW91c1wiIH0sIGkuY2hhbmdlU2xpZGUpLFxuICAgICAgICBpLiRuZXh0QXJyb3dcbiAgICAgICAgICAub2ZmKFwiY2xpY2suc2xpY2tcIilcbiAgICAgICAgICAub24oXCJjbGljay5zbGlja1wiLCB7IG1lc3NhZ2U6IFwibmV4dFwiIH0sIGkuY2hhbmdlU2xpZGUpLFxuICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiZcbiAgICAgICAgICAoaS4kcHJldkFycm93Lm9uKFwia2V5ZG93bi5zbGlja1wiLCBpLmtleUhhbmRsZXIpLFxuICAgICAgICAgIGkuJG5leHRBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIiwgaS5rZXlIYW5kbGVyKSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5pbml0RG90RXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgITAgPT09IGUub3B0aW9ucy5kb3RzICYmXG4gICAgICAgIChpKFwibGlcIiwgZS4kZG90cykub24oXG4gICAgICAgICAgXCJjbGljay5zbGlja1wiLFxuICAgICAgICAgIHsgbWVzc2FnZTogXCJpbmRleFwiIH0sXG4gICAgICAgICAgZS5jaGFuZ2VTbGlkZVxuICAgICAgICApLFxuICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiZcbiAgICAgICAgICBlLiRkb3RzLm9uKFwia2V5ZG93bi5zbGlja1wiLCBlLmtleUhhbmRsZXIpKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5kb3RzICYmXG4gICAgICAgICAgITAgPT09IGUub3B0aW9ucy5wYXVzZU9uRG90c0hvdmVyICYmXG4gICAgICAgICAgaShcImxpXCIsIGUuJGRvdHMpXG4gICAgICAgICAgICAub24oXCJtb3VzZWVudGVyLnNsaWNrXCIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICEwKSlcbiAgICAgICAgICAgIC5vbihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuaW5pdFNsaWRlRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgZS5vcHRpb25zLnBhdXNlT25Ib3ZlciAmJlxuICAgICAgICAoZS4kbGlzdC5vbihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITApKSxcbiAgICAgICAgZS4kbGlzdC5vbihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmluaXRpYWxpemVFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBlLmluaXRBcnJvd0V2ZW50cygpLFxuICAgICAgICBlLmluaXREb3RFdmVudHMoKSxcbiAgICAgICAgZS5pbml0U2xpZGVFdmVudHMoKSxcbiAgICAgICAgZS4kbGlzdC5vbihcbiAgICAgICAgICBcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIsXG4gICAgICAgICAgeyBhY3Rpb246IFwic3RhcnRcIiB9LFxuICAgICAgICAgIGUuc3dpcGVIYW5kbGVyXG4gICAgICAgICksXG4gICAgICAgIGUuJGxpc3Qub24oXG4gICAgICAgICAgXCJ0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrXCIsXG4gICAgICAgICAgeyBhY3Rpb246IFwibW92ZVwiIH0sXG4gICAgICAgICAgZS5zd2lwZUhhbmRsZXJcbiAgICAgICAgKSxcbiAgICAgICAgZS4kbGlzdC5vbihcbiAgICAgICAgICBcInRvdWNoZW5kLnNsaWNrIG1vdXNldXAuc2xpY2tcIixcbiAgICAgICAgICB7IGFjdGlvbjogXCJlbmRcIiB9LFxuICAgICAgICAgIGUuc3dpcGVIYW5kbGVyXG4gICAgICAgICksXG4gICAgICAgIGUuJGxpc3Qub24oXG4gICAgICAgICAgXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIsXG4gICAgICAgICAgeyBhY3Rpb246IFwiZW5kXCIgfSxcbiAgICAgICAgICBlLnN3aXBlSGFuZGxlclxuICAgICAgICApLFxuICAgICAgICBlLiRsaXN0Lm9uKFwiY2xpY2suc2xpY2tcIiwgZS5jbGlja0hhbmRsZXIpLFxuICAgICAgICBpKGRvY3VtZW50KS5vbihlLnZpc2liaWxpdHlDaGFuZ2UsIGkucHJveHkoZS52aXNpYmlsaXR5LCBlKSksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgIGUuJGxpc3Qub24oXCJrZXlkb3duLnNsaWNrXCIsIGUua2V5SGFuZGxlciksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuZm9jdXNPblNlbGVjdCAmJlxuICAgICAgICAgIGkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsIGUuc2VsZWN0SGFuZGxlciksXG4gICAgICAgIGkod2luZG93KS5vbihcbiAgICAgICAgICBcIm9yaWVudGF0aW9uY2hhbmdlLnNsaWNrLnNsaWNrLVwiICsgZS5pbnN0YW5jZVVpZCxcbiAgICAgICAgICBpLnByb3h5KGUub3JpZW50YXRpb25DaGFuZ2UsIGUpXG4gICAgICAgICksXG4gICAgICAgIGkod2luZG93KS5vbihcbiAgICAgICAgICBcInJlc2l6ZS5zbGljay5zbGljay1cIiArIGUuaW5zdGFuY2VVaWQsXG4gICAgICAgICAgaS5wcm94eShlLnJlc2l6ZSwgZSlcbiAgICAgICAgKSxcbiAgICAgICAgaShcIltkcmFnZ2FibGUhPXRydWVdXCIsIGUuJHNsaWRlVHJhY2spLm9uKFwiZHJhZ3N0YXJ0XCIsIGUucHJldmVudERlZmF1bHQpLFxuICAgICAgICBpKHdpbmRvdykub24oXCJsb2FkLnNsaWNrLnNsaWNrLVwiICsgZS5pbnN0YW5jZVVpZCwgZS5zZXRQb3NpdGlvbiksXG4gICAgICAgIGkoZS5zZXRQb3NpdGlvbik7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmluaXRVSSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgICEwID09PSBpLm9wdGlvbnMuYXJyb3dzICYmXG4gICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgKGkuJHByZXZBcnJvdy5zaG93KCksIGkuJG5leHRBcnJvdy5zaG93KCkpLFxuICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmRvdHMgJiZcbiAgICAgICAgICBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgaS4kZG90cy5zaG93KCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmtleUhhbmRsZXIgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgaS50YXJnZXQudGFnTmFtZS5tYXRjaChcIlRFWFRBUkVBfElOUFVUfFNFTEVDVFwiKSB8fFxuICAgICAgICAoMzcgPT09IGkua2V5Q29kZSAmJiAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHlcbiAgICAgICAgICA/IGUuY2hhbmdlU2xpZGUoe1xuICAgICAgICAgICAgICBkYXRhOiB7IG1lc3NhZ2U6ICEwID09PSBlLm9wdGlvbnMucnRsID8gXCJuZXh0XCIgOiBcInByZXZpb3VzXCIgfSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgOiAzOSA9PT0gaS5rZXlDb2RlICYmXG4gICAgICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiZcbiAgICAgICAgICAgIGUuY2hhbmdlU2xpZGUoe1xuICAgICAgICAgICAgICBkYXRhOiB7IG1lc3NhZ2U6ICEwID09PSBlLm9wdGlvbnMucnRsID8gXCJwcmV2aW91c1wiIDogXCJuZXh0XCIgfSxcbiAgICAgICAgICAgIH0pKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUubGF6eUxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBmdW5jdGlvbiBlKGUpIHtcbiAgICAgICAgaShcImltZ1tkYXRhLWxhenldXCIsIGUpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBlID0gaSh0aGlzKSxcbiAgICAgICAgICAgIHQgPSBpKHRoaXMpLmF0dHIoXCJkYXRhLWxhenlcIiksXG4gICAgICAgICAgICBvID0gaSh0aGlzKS5hdHRyKFwiZGF0YS1zcmNzZXRcIiksXG4gICAgICAgICAgICBzID0gaSh0aGlzKS5hdHRyKFwiZGF0YS1zaXplc1wiKSB8fCBuLiRzbGlkZXIuYXR0cihcImRhdGEtc2l6ZXNcIiksXG4gICAgICAgICAgICByID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgICAoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBlLmFuaW1hdGUoeyBvcGFjaXR5OiAwIH0sIDEwMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBvICYmIChlLmF0dHIoXCJzcmNzZXRcIiwgbyksIHMgJiYgZS5hdHRyKFwic2l6ZXNcIiwgcykpLFxuICAgICAgICAgICAgICAgIGUuYXR0cihcInNyY1wiLCB0KS5hbmltYXRlKHsgb3BhY2l0eTogMSB9LCAyMDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIGUucmVtb3ZlQXR0cihcImRhdGEtbGF6eSBkYXRhLXNyY3NldCBkYXRhLXNpemVzXCIpLnJlbW92ZUNsYXNzKFxuICAgICAgICAgICAgICAgICAgICBcInNsaWNrLWxvYWRpbmdcIlxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBuLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkZWRcIiwgW24sIGUsIHRdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgZVxuICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpXG4gICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWxhenlsb2FkLWVycm9yXCIpLFxuICAgICAgICAgICAgICAgIG4uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRFcnJvclwiLCBbbiwgZSwgdF0pO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAoci5zcmMgPSB0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB2YXIgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyxcbiAgICAgICAgbiA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgICghMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGVcbiAgICAgICAgICA/ICEwID09PSBuLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICAgID8gKHMgPVxuICAgICAgICAgICAgICAgIChvID0gbi5jdXJyZW50U2xpZGUgKyAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxKSkgK1xuICAgICAgICAgICAgICAgIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgK1xuICAgICAgICAgICAgICAgIDIpXG4gICAgICAgICAgICA6ICgobyA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICAgICAgbi5jdXJyZW50U2xpZGUgLSAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxKVxuICAgICAgICAgICAgICApKSxcbiAgICAgICAgICAgICAgKHMgPSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiArIDEgKyAyICsgbi5jdXJyZW50U2xpZGUpKVxuICAgICAgICAgIDogKChvID0gbi5vcHRpb25zLmluZmluaXRlXG4gICAgICAgICAgICAgID8gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArIG4uY3VycmVudFNsaWRlXG4gICAgICAgICAgICAgIDogbi5jdXJyZW50U2xpZGUpLFxuICAgICAgICAgICAgKHMgPSBNYXRoLmNlaWwobyArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKSxcbiAgICAgICAgICAgICEwID09PSBuLm9wdGlvbnMuZmFkZSAmJiAobyA+IDAgJiYgby0tLCBzIDw9IG4uc2xpZGVDb3VudCAmJiBzKyspKSxcbiAgICAgICAgKHQgPSBuLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKS5zbGljZShvLCBzKSksXG4gICAgICAgIFwiYW50aWNpcGF0ZWRcIiA9PT0gbi5vcHRpb25zLmxhenlMb2FkKVxuICAgICAgKVxuICAgICAgICBmb3IgKFxuICAgICAgICAgIHZhciByID0gbyAtIDEsIGwgPSBzLCBkID0gbi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIiksIGEgPSAwO1xuICAgICAgICAgIGEgPCBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICAgICAgYSsrXG4gICAgICAgIClcbiAgICAgICAgICByIDwgMCAmJiAociA9IG4uc2xpZGVDb3VudCAtIDEpLFxuICAgICAgICAgICAgKHQgPSAodCA9IHQuYWRkKGQuZXEocikpKS5hZGQoZC5lcShsKSkpLFxuICAgICAgICAgICAgci0tLFxuICAgICAgICAgICAgbCsrO1xuICAgICAgZSh0KSxcbiAgICAgICAgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICA/IGUobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikpXG4gICAgICAgICAgOiBuLmN1cnJlbnRTbGlkZSA+PSBuLnNsaWRlQ291bnQgLSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyBlKG4uJHNsaWRlci5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5zbGljZSgwLCBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KSlcbiAgICAgICAgICA6IDAgPT09IG4uY3VycmVudFNsaWRlICYmXG4gICAgICAgICAgICBlKFxuICAgICAgICAgICAgICBuLiRzbGlkZXIuZmluZChcIi5zbGljay1jbG9uZWRcIikuc2xpY2UoLTEgKiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgICAgKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUubG9hZFNsaWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIGkuc2V0UG9zaXRpb24oKSxcbiAgICAgICAgaS4kc2xpZGVUcmFjay5jc3MoeyBvcGFjaXR5OiAxIH0pLFxuICAgICAgICBpLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLFxuICAgICAgICBpLmluaXRVSSgpLFxuICAgICAgICBcInByb2dyZXNzaXZlXCIgPT09IGkub3B0aW9ucy5sYXp5TG9hZCAmJiBpLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUubmV4dCA9IGUucHJvdG90eXBlLnNsaWNrTmV4dCA9XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlU2xpZGUoeyBkYXRhOiB7IG1lc3NhZ2U6IFwibmV4dFwiIH0gfSk7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUub3JpZW50YXRpb25DaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpLmNoZWNrUmVzcG9uc2l2ZSgpLCBpLnNldFBvc2l0aW9uKCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnBhdXNlID0gZS5wcm90b3R5cGUuc2xpY2tQYXVzZSA9XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpID0gdGhpcztcbiAgICAgICAgaS5hdXRvUGxheUNsZWFyKCksIChpLnBhdXNlZCA9ICEwKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5wbGF5ID0gZS5wcm90b3R5cGUuc2xpY2tQbGF5ID1cbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgICBpLmF1dG9QbGF5KCksXG4gICAgICAgICAgKGkub3B0aW9ucy5hdXRvcGxheSA9ICEwKSxcbiAgICAgICAgICAoaS5wYXVzZWQgPSAhMSksXG4gICAgICAgICAgKGkuZm9jdXNzZWQgPSAhMSksXG4gICAgICAgICAgKGkuaW50ZXJydXB0ZWQgPSAhMSk7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucG9zdFNsaWRlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgIHQudW5zbGlja2VkIHx8XG4gICAgICAgICh0LiRzbGlkZXIudHJpZ2dlcihcImFmdGVyQ2hhbmdlXCIsIFt0LCBlXSksXG4gICAgICAgICh0LmFuaW1hdGluZyA9ICExKSxcbiAgICAgICAgdC5zbGlkZUNvdW50ID4gdC5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiB0LnNldFBvc2l0aW9uKCksXG4gICAgICAgICh0LnN3aXBlTGVmdCA9IG51bGwpLFxuICAgICAgICB0Lm9wdGlvbnMuYXV0b3BsYXkgJiYgdC5hdXRvUGxheSgpLFxuICAgICAgICAhMCA9PT0gdC5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiZcbiAgICAgICAgICAodC5pbml0QURBKCksXG4gICAgICAgICAgdC5vcHRpb25zLmZvY3VzT25DaGFuZ2UgJiZcbiAgICAgICAgICAgIGkodC4kc2xpZGVzLmdldCh0LmN1cnJlbnRTbGlkZSkpLmF0dHIoXCJ0YWJpbmRleFwiLCAwKS5mb2N1cygpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnByZXYgPSBlLnByb3RvdHlwZS5zbGlja1ByZXYgPVxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNoYW5nZVNsaWRlKHsgZGF0YTogeyBtZXNzYWdlOiBcInByZXZpb3VzXCIgfSB9KTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICBpLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnByb2dyZXNzaXZlTGF6eUxvYWQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZSA9IGUgfHwgMTtcbiAgICAgIHZhciB0LFxuICAgICAgICBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByLFxuICAgICAgICBsID0gdGhpcyxcbiAgICAgICAgZCA9IGkoXCJpbWdbZGF0YS1sYXp5XVwiLCBsLiRzbGlkZXIpO1xuICAgICAgZC5sZW5ndGhcbiAgICAgICAgPyAoKHQgPSBkLmZpcnN0KCkpLFxuICAgICAgICAgIChvID0gdC5hdHRyKFwiZGF0YS1sYXp5XCIpKSxcbiAgICAgICAgICAocyA9IHQuYXR0cihcImRhdGEtc3Jjc2V0XCIpKSxcbiAgICAgICAgICAobiA9IHQuYXR0cihcImRhdGEtc2l6ZXNcIikgfHwgbC4kc2xpZGVyLmF0dHIoXCJkYXRhLXNpemVzXCIpKSxcbiAgICAgICAgICAoKHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpKS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzICYmICh0LmF0dHIoXCJzcmNzZXRcIiwgcyksIG4gJiYgdC5hdHRyKFwic2l6ZXNcIiwgbikpLFxuICAgICAgICAgICAgICB0XG4gICAgICAgICAgICAgICAgLmF0dHIoXCJzcmNcIiwgbylcbiAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcImRhdGEtbGF6eSBkYXRhLXNyY3NldCBkYXRhLXNpemVzXCIpXG4gICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKSxcbiAgICAgICAgICAgICAgITAgPT09IGwub3B0aW9ucy5hZGFwdGl2ZUhlaWdodCAmJiBsLnNldFBvc2l0aW9uKCksXG4gICAgICAgICAgICAgIGwuJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRlZFwiLCBbbCwgdCwgb10pLFxuICAgICAgICAgICAgICBsLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcbiAgICAgICAgICB9KSxcbiAgICAgICAgICAoci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZSA8IDNcbiAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIGwucHJvZ3Jlc3NpdmVMYXp5TG9hZChlICsgMSk7XG4gICAgICAgICAgICAgICAgfSwgNTAwKVxuICAgICAgICAgICAgICA6ICh0XG4gICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcImRhdGEtbGF6eVwiKVxuICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stbGF6eWxvYWQtZXJyb3JcIiksXG4gICAgICAgICAgICAgICAgbC4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZEVycm9yXCIsIFtsLCB0LCBvXSksXG4gICAgICAgICAgICAgICAgbC5wcm9ncmVzc2l2ZUxhenlMb2FkKCkpO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIChyLnNyYyA9IG8pKVxuICAgICAgICA6IGwuJHNsaWRlci50cmlnZ2VyKFwiYWxsSW1hZ2VzTG9hZGVkXCIsIFtsXSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIHQsXG4gICAgICAgIG8sXG4gICAgICAgIHMgPSB0aGlzO1xuICAgICAgKG8gPSBzLnNsaWRlQ291bnQgLSBzLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxcbiAgICAgICAgIXMub3B0aW9ucy5pbmZpbml0ZSAmJiBzLmN1cnJlbnRTbGlkZSA+IG8gJiYgKHMuY3VycmVudFNsaWRlID0gbyksXG4gICAgICAgIHMuc2xpZGVDb3VudCA8PSBzLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChzLmN1cnJlbnRTbGlkZSA9IDApLFxuICAgICAgICAodCA9IHMuY3VycmVudFNsaWRlKSxcbiAgICAgICAgcy5kZXN0cm95KCEwKSxcbiAgICAgICAgaS5leHRlbmQocywgcy5pbml0aWFscywgeyBjdXJyZW50U2xpZGU6IHQgfSksXG4gICAgICAgIHMuaW5pdCgpLFxuICAgICAgICBlIHx8IHMuY2hhbmdlU2xpZGUoeyBkYXRhOiB7IG1lc3NhZ2U6IFwiaW5kZXhcIiwgaW5kZXg6IHQgfSB9LCAhMSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnJlZ2lzdGVyQnJlYWtwb2ludHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyA9IHRoaXMsXG4gICAgICAgIG4gPSBzLm9wdGlvbnMucmVzcG9uc2l2ZSB8fCBudWxsO1xuICAgICAgaWYgKFwiYXJyYXlcIiA9PT0gaS50eXBlKG4pICYmIG4ubGVuZ3RoKSB7XG4gICAgICAgIHMucmVzcG9uZFRvID0gcy5vcHRpb25zLnJlc3BvbmRUbyB8fCBcIndpbmRvd1wiO1xuICAgICAgICBmb3IgKGUgaW4gbilcbiAgICAgICAgICBpZiAoKChvID0gcy5icmVha3BvaW50cy5sZW5ndGggLSAxKSwgbi5oYXNPd25Qcm9wZXJ0eShlKSkpIHtcbiAgICAgICAgICAgIGZvciAodCA9IG5bZV0uYnJlYWtwb2ludDsgbyA+PSAwOyApXG4gICAgICAgICAgICAgIHMuYnJlYWtwb2ludHNbb10gJiZcbiAgICAgICAgICAgICAgICBzLmJyZWFrcG9pbnRzW29dID09PSB0ICYmXG4gICAgICAgICAgICAgICAgcy5icmVha3BvaW50cy5zcGxpY2UobywgMSksXG4gICAgICAgICAgICAgICAgby0tO1xuICAgICAgICAgICAgcy5icmVha3BvaW50cy5wdXNoKHQpLCAocy5icmVha3BvaW50U2V0dGluZ3NbdF0gPSBuW2VdLnNldHRpbmdzKTtcbiAgICAgICAgICB9XG4gICAgICAgIHMuYnJlYWtwb2ludHMuc29ydChmdW5jdGlvbiAoaSwgZSkge1xuICAgICAgICAgIHJldHVybiBzLm9wdGlvbnMubW9iaWxlRmlyc3QgPyBpIC0gZSA6IGUgLSBpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucmVpbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgKGUuJHNsaWRlcyA9IGUuJHNsaWRlVHJhY2tcbiAgICAgICAgLmNoaWxkcmVuKGUub3B0aW9ucy5zbGlkZSlcbiAgICAgICAgLmFkZENsYXNzKFwic2xpY2stc2xpZGVcIikpLFxuICAgICAgICAoZS5zbGlkZUNvdW50ID0gZS4kc2xpZGVzLmxlbmd0aCksXG4gICAgICAgIGUuY3VycmVudFNsaWRlID49IGUuc2xpZGVDb3VudCAmJlxuICAgICAgICAgIDAgIT09IGUuY3VycmVudFNsaWRlICYmXG4gICAgICAgICAgKGUuY3VycmVudFNsaWRlID0gZS5jdXJyZW50U2xpZGUgLSBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLFxuICAgICAgICBlLnNsaWRlQ291bnQgPD0gZS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiAoZS5jdXJyZW50U2xpZGUgPSAwKSxcbiAgICAgICAgZS5yZWdpc3RlckJyZWFrcG9pbnRzKCksXG4gICAgICAgIGUuc2V0UHJvcHMoKSxcbiAgICAgICAgZS5zZXR1cEluZmluaXRlKCksXG4gICAgICAgIGUuYnVpbGRBcnJvd3MoKSxcbiAgICAgICAgZS51cGRhdGVBcnJvd3MoKSxcbiAgICAgICAgZS5pbml0QXJyb3dFdmVudHMoKSxcbiAgICAgICAgZS5idWlsZERvdHMoKSxcbiAgICAgICAgZS51cGRhdGVEb3RzKCksXG4gICAgICAgIGUuaW5pdERvdEV2ZW50cygpLFxuICAgICAgICBlLmNsZWFuVXBTbGlkZUV2ZW50cygpLFxuICAgICAgICBlLmluaXRTbGlkZUV2ZW50cygpLFxuICAgICAgICBlLmNoZWNrUmVzcG9uc2l2ZSghMSwgITApLFxuICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmZvY3VzT25TZWxlY3QgJiZcbiAgICAgICAgICBpKGUuJHNsaWRlVHJhY2spLmNoaWxkcmVuKCkub24oXCJjbGljay5zbGlja1wiLCBlLnNlbGVjdEhhbmRsZXIpLFxuICAgICAgICBlLnNldFNsaWRlQ2xhc3NlcyhcbiAgICAgICAgICBcIm51bWJlclwiID09IHR5cGVvZiBlLmN1cnJlbnRTbGlkZSA/IGUuY3VycmVudFNsaWRlIDogMFxuICAgICAgICApLFxuICAgICAgICBlLnNldFBvc2l0aW9uKCksXG4gICAgICAgIGUuZm9jdXNIYW5kbGVyKCksXG4gICAgICAgIChlLnBhdXNlZCA9ICFlLm9wdGlvbnMuYXV0b3BsYXkpLFxuICAgICAgICBlLmF1dG9QbGF5KCksXG4gICAgICAgIGUuJHNsaWRlci50cmlnZ2VyKFwicmVJbml0XCIsIFtlXSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGkod2luZG93KS53aWR0aCgpICE9PSBlLndpbmRvd1dpZHRoICYmXG4gICAgICAgIChjbGVhclRpbWVvdXQoZS53aW5kb3dEZWxheSksXG4gICAgICAgIChlLndpbmRvd0RlbGF5ID0gd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIChlLndpbmRvd1dpZHRoID0gaSh3aW5kb3cpLndpZHRoKCkpLFxuICAgICAgICAgICAgZS5jaGVja1Jlc3BvbnNpdmUoKSxcbiAgICAgICAgICAgIGUudW5zbGlja2VkIHx8IGUuc2V0UG9zaXRpb24oKTtcbiAgICAgICAgfSwgNTApKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnJlbW92ZVNsaWRlID0gZS5wcm90b3R5cGUuc2xpY2tSZW1vdmUgPVxuICAgICAgZnVuY3Rpb24gKGksIGUsIHQpIHtcbiAgICAgICAgdmFyIG8gPSB0aGlzO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgKChpID1cbiAgICAgICAgICAgIFwiYm9vbGVhblwiID09IHR5cGVvZiBpXG4gICAgICAgICAgICAgID8gITAgPT09IChlID0gaSlcbiAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICA6IG8uc2xpZGVDb3VudCAtIDFcbiAgICAgICAgICAgICAgOiAhMCA9PT0gZVxuICAgICAgICAgICAgICA/IC0taVxuICAgICAgICAgICAgICA6IGkpLFxuICAgICAgICAgIG8uc2xpZGVDb3VudCA8IDEgfHwgaSA8IDAgfHwgaSA+IG8uc2xpZGVDb3VudCAtIDEpXG4gICAgICAgIClcbiAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgIG8udW5sb2FkKCksXG4gICAgICAgICAgITAgPT09IHRcbiAgICAgICAgICAgID8gby4kc2xpZGVUcmFjay5jaGlsZHJlbigpLnJlbW92ZSgpXG4gICAgICAgICAgICA6IG8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5lcShpKS5yZW1vdmUoKSxcbiAgICAgICAgICAoby4kc2xpZGVzID0gby4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpKSxcbiAgICAgICAgICBvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksXG4gICAgICAgICAgby4kc2xpZGVUcmFjay5hcHBlbmQoby4kc2xpZGVzKSxcbiAgICAgICAgICAoby4kc2xpZGVzQ2FjaGUgPSBvLiRzbGlkZXMpLFxuICAgICAgICAgIG8ucmVpbml0KCk7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0Q1NTID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvID0gdGhpcyxcbiAgICAgICAgcyA9IHt9O1xuICAgICAgITAgPT09IG8ub3B0aW9ucy5ydGwgJiYgKGkgPSAtaSksXG4gICAgICAgIChlID0gXCJsZWZ0XCIgPT0gby5wb3NpdGlvblByb3AgPyBNYXRoLmNlaWwoaSkgKyBcInB4XCIgOiBcIjBweFwiKSxcbiAgICAgICAgKHQgPSBcInRvcFwiID09IG8ucG9zaXRpb25Qcm9wID8gTWF0aC5jZWlsKGkpICsgXCJweFwiIDogXCIwcHhcIiksXG4gICAgICAgIChzW28ucG9zaXRpb25Qcm9wXSA9IGkpLFxuICAgICAgICAhMSA9PT0gby50cmFuc2Zvcm1zRW5hYmxlZFxuICAgICAgICAgID8gby4kc2xpZGVUcmFjay5jc3MocylcbiAgICAgICAgICA6ICgocyA9IHt9KSxcbiAgICAgICAgICAgICExID09PSBvLmNzc1RyYW5zaXRpb25zXG4gICAgICAgICAgICAgID8gKChzW28uYW5pbVR5cGVdID0gXCJ0cmFuc2xhdGUoXCIgKyBlICsgXCIsIFwiICsgdCArIFwiKVwiKSxcbiAgICAgICAgICAgICAgICBvLiRzbGlkZVRyYWNrLmNzcyhzKSlcbiAgICAgICAgICAgICAgOiAoKHNbby5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZTNkKFwiICsgZSArIFwiLCBcIiArIHQgKyBcIiwgMHB4KVwiKSxcbiAgICAgICAgICAgICAgICBvLiRzbGlkZVRyYWNrLmNzcyhzKSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXREaW1lbnNpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgITEgPT09IGkub3B0aW9ucy52ZXJ0aWNhbFxuICAgICAgICA/ICEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgIGkuJGxpc3QuY3NzKHsgcGFkZGluZzogXCIwcHggXCIgKyBpLm9wdGlvbnMuY2VudGVyUGFkZGluZyB9KVxuICAgICAgICA6IChpLiRsaXN0LmhlaWdodChcbiAgICAgICAgICAgIGkuJHNsaWRlcy5maXJzdCgpLm91dGVySGVpZ2h0KCEwKSAqIGkub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICApLFxuICAgICAgICAgICEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgaS4kbGlzdC5jc3MoeyBwYWRkaW5nOiBpLm9wdGlvbnMuY2VudGVyUGFkZGluZyArIFwiIDBweFwiIH0pKSxcbiAgICAgICAgKGkubGlzdFdpZHRoID0gaS4kbGlzdC53aWR0aCgpKSxcbiAgICAgICAgKGkubGlzdEhlaWdodCA9IGkuJGxpc3QuaGVpZ2h0KCkpLFxuICAgICAgICAhMSA9PT0gaS5vcHRpb25zLnZlcnRpY2FsICYmICExID09PSBpLm9wdGlvbnMudmFyaWFibGVXaWR0aFxuICAgICAgICAgID8gKChpLnNsaWRlV2lkdGggPSBNYXRoLmNlaWwoaS5saXN0V2lkdGggLyBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KSksXG4gICAgICAgICAgICBpLiRzbGlkZVRyYWNrLndpZHRoKFxuICAgICAgICAgICAgICBNYXRoLmNlaWwoXG4gICAgICAgICAgICAgICAgaS5zbGlkZVdpZHRoICogaS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGhcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKSlcbiAgICAgICAgICA6ICEwID09PSBpLm9wdGlvbnMudmFyaWFibGVXaWR0aFxuICAgICAgICAgID8gaS4kc2xpZGVUcmFjay53aWR0aCg1ZTMgKiBpLnNsaWRlQ291bnQpXG4gICAgICAgICAgOiAoKGkuc2xpZGVXaWR0aCA9IE1hdGguY2VpbChpLmxpc3RXaWR0aCkpLFxuICAgICAgICAgICAgaS4kc2xpZGVUcmFjay5oZWlnaHQoXG4gICAgICAgICAgICAgIE1hdGguY2VpbChcbiAgICAgICAgICAgICAgICBpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkgKlxuICAgICAgICAgICAgICAgICAgaS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGhcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKSk7XG4gICAgICB2YXIgZSA9IGkuJHNsaWRlcy5maXJzdCgpLm91dGVyV2lkdGgoITApIC0gaS4kc2xpZGVzLmZpcnN0KCkud2lkdGgoKTtcbiAgICAgICExID09PSBpLm9wdGlvbnMudmFyaWFibGVXaWR0aCAmJlxuICAgICAgICBpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLndpZHRoKGkuc2xpZGVXaWR0aCAtIGUpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXRGYWRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQgPSB0aGlzO1xuICAgICAgdC4kc2xpZGVzLmVhY2goZnVuY3Rpb24gKG8sIHMpIHtcbiAgICAgICAgKGUgPSB0LnNsaWRlV2lkdGggKiBvICogLTEpLFxuICAgICAgICAgICEwID09PSB0Lm9wdGlvbnMucnRsXG4gICAgICAgICAgICA/IGkocykuY3NzKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgICAgICAgIHJpZ2h0OiBlLFxuICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXggLSAyLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICA6IGkocykuY3NzKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgICAgICAgIGxlZnQ6IGUsXG4gICAgICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgICAgIHpJbmRleDogdC5vcHRpb25zLnpJbmRleCAtIDIsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICB9KSxcbiAgICAgICAgdC4kc2xpZGVzXG4gICAgICAgICAgLmVxKHQuY3VycmVudFNsaWRlKVxuICAgICAgICAgIC5jc3MoeyB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXggLSAxLCBvcGFjaXR5OiAxIH0pO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXRIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgIDEgPT09IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgITAgPT09IGkub3B0aW9ucy5hZGFwdGl2ZUhlaWdodCAmJlxuICAgICAgICAhMSA9PT0gaS5vcHRpb25zLnZlcnRpY2FsXG4gICAgICApIHtcbiAgICAgICAgdmFyIGUgPSBpLiRzbGlkZXMuZXEoaS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTtcbiAgICAgICAgaS4kbGlzdC5jc3MoXCJoZWlnaHRcIiwgZSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldE9wdGlvbiA9IGUucHJvdG90eXBlLnNsaWNrU2V0T3B0aW9uID1cbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGUsXG4gICAgICAgICAgdCxcbiAgICAgICAgICBvLFxuICAgICAgICAgIHMsXG4gICAgICAgICAgbixcbiAgICAgICAgICByID0gdGhpcyxcbiAgICAgICAgICBsID0gITE7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAoXCJvYmplY3RcIiA9PT0gaS50eXBlKGFyZ3VtZW50c1swXSlcbiAgICAgICAgICAgID8gKChvID0gYXJndW1lbnRzWzBdKSwgKGwgPSBhcmd1bWVudHNbMV0pLCAobiA9IFwibXVsdGlwbGVcIikpXG4gICAgICAgICAgICA6IFwic3RyaW5nXCIgPT09IGkudHlwZShhcmd1bWVudHNbMF0pICYmXG4gICAgICAgICAgICAgICgobyA9IGFyZ3VtZW50c1swXSksXG4gICAgICAgICAgICAgIChzID0gYXJndW1lbnRzWzFdKSxcbiAgICAgICAgICAgICAgKGwgPSBhcmd1bWVudHNbMl0pLFxuICAgICAgICAgICAgICBcInJlc3BvbnNpdmVcIiA9PT0gYXJndW1lbnRzWzBdICYmIFwiYXJyYXlcIiA9PT0gaS50eXBlKGFyZ3VtZW50c1sxXSlcbiAgICAgICAgICAgICAgICA/IChuID0gXCJyZXNwb25zaXZlXCIpXG4gICAgICAgICAgICAgICAgOiB2b2lkIDAgIT09IGFyZ3VtZW50c1sxXSAmJiAobiA9IFwic2luZ2xlXCIpKSxcbiAgICAgICAgICBcInNpbmdsZVwiID09PSBuKVxuICAgICAgICApXG4gICAgICAgICAgci5vcHRpb25zW29dID0gcztcbiAgICAgICAgZWxzZSBpZiAoXCJtdWx0aXBsZVwiID09PSBuKVxuICAgICAgICAgIGkuZWFjaChvLCBmdW5jdGlvbiAoaSwgZSkge1xuICAgICAgICAgICAgci5vcHRpb25zW2ldID0gZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgZWxzZSBpZiAoXCJyZXNwb25zaXZlXCIgPT09IG4pXG4gICAgICAgICAgZm9yICh0IGluIHMpXG4gICAgICAgICAgICBpZiAoXCJhcnJheVwiICE9PSBpLnR5cGUoci5vcHRpb25zLnJlc3BvbnNpdmUpKVxuICAgICAgICAgICAgICByLm9wdGlvbnMucmVzcG9uc2l2ZSA9IFtzW3RdXTtcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBmb3IgKGUgPSByLm9wdGlvbnMucmVzcG9uc2l2ZS5sZW5ndGggLSAxOyBlID49IDA7IClcbiAgICAgICAgICAgICAgICByLm9wdGlvbnMucmVzcG9uc2l2ZVtlXS5icmVha3BvaW50ID09PSBzW3RdLmJyZWFrcG9pbnQgJiZcbiAgICAgICAgICAgICAgICAgIHIub3B0aW9ucy5yZXNwb25zaXZlLnNwbGljZShlLCAxKSxcbiAgICAgICAgICAgICAgICAgIGUtLTtcbiAgICAgICAgICAgICAgci5vcHRpb25zLnJlc3BvbnNpdmUucHVzaChzW3RdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgbCAmJiAoci51bmxvYWQoKSwgci5yZWluaXQoKSk7XG4gICAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0UG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpLnNldERpbWVuc2lvbnMoKSxcbiAgICAgICAgaS5zZXRIZWlnaHQoKSxcbiAgICAgICAgITEgPT09IGkub3B0aW9ucy5mYWRlXG4gICAgICAgICAgPyBpLnNldENTUyhpLmdldExlZnQoaS5jdXJyZW50U2xpZGUpKVxuICAgICAgICAgIDogaS5zZXRGYWRlKCksXG4gICAgICAgIGkuJHNsaWRlci50cmlnZ2VyKFwic2V0UG9zaXRpb25cIiwgW2ldKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0UHJvcHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXMsXG4gICAgICAgIGUgPSBkb2N1bWVudC5ib2R5LnN0eWxlO1xuICAgICAgKGkucG9zaXRpb25Qcm9wID0gITAgPT09IGkub3B0aW9ucy52ZXJ0aWNhbCA/IFwidG9wXCIgOiBcImxlZnRcIiksXG4gICAgICAgIFwidG9wXCIgPT09IGkucG9zaXRpb25Qcm9wXG4gICAgICAgICAgPyBpLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKVxuICAgICAgICAgIDogaS4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stdmVydGljYWxcIiksXG4gICAgICAgICh2b2lkIDAgPT09IGUuV2Via2l0VHJhbnNpdGlvbiAmJlxuICAgICAgICAgIHZvaWQgMCA9PT0gZS5Nb3pUcmFuc2l0aW9uICYmXG4gICAgICAgICAgdm9pZCAwID09PSBlLm1zVHJhbnNpdGlvbikgfHxcbiAgICAgICAgICAoITAgPT09IGkub3B0aW9ucy51c2VDU1MgJiYgKGkuY3NzVHJhbnNpdGlvbnMgPSAhMCkpLFxuICAgICAgICBpLm9wdGlvbnMuZmFkZSAmJlxuICAgICAgICAgIChcIm51bWJlclwiID09IHR5cGVvZiBpLm9wdGlvbnMuekluZGV4XG4gICAgICAgICAgICA/IGkub3B0aW9ucy56SW5kZXggPCAzICYmIChpLm9wdGlvbnMuekluZGV4ID0gMylcbiAgICAgICAgICAgIDogKGkub3B0aW9ucy56SW5kZXggPSBpLmRlZmF1bHRzLnpJbmRleCkpLFxuICAgICAgICB2b2lkIDAgIT09IGUuT1RyYW5zZm9ybSAmJlxuICAgICAgICAgICgoaS5hbmltVHlwZSA9IFwiT1RyYW5zZm9ybVwiKSxcbiAgICAgICAgICAoaS50cmFuc2Zvcm1UeXBlID0gXCItby10cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNpdGlvblR5cGUgPSBcIk9UcmFuc2l0aW9uXCIpLFxuICAgICAgICAgIHZvaWQgMCA9PT0gZS5wZXJzcGVjdGl2ZVByb3BlcnR5ICYmXG4gICAgICAgICAgICB2b2lkIDAgPT09IGUud2Via2l0UGVyc3BlY3RpdmUgJiZcbiAgICAgICAgICAgIChpLmFuaW1UeXBlID0gITEpKSxcbiAgICAgICAgdm9pZCAwICE9PSBlLk1velRyYW5zZm9ybSAmJlxuICAgICAgICAgICgoaS5hbmltVHlwZSA9IFwiTW96VHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zZm9ybVR5cGUgPSBcIi1tb3otdHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zaXRpb25UeXBlID0gXCJNb3pUcmFuc2l0aW9uXCIpLFxuICAgICAgICAgIHZvaWQgMCA9PT0gZS5wZXJzcGVjdGl2ZVByb3BlcnR5ICYmXG4gICAgICAgICAgICB2b2lkIDAgPT09IGUuTW96UGVyc3BlY3RpdmUgJiZcbiAgICAgICAgICAgIChpLmFuaW1UeXBlID0gITEpKSxcbiAgICAgICAgdm9pZCAwICE9PSBlLndlYmtpdFRyYW5zZm9ybSAmJlxuICAgICAgICAgICgoaS5hbmltVHlwZSA9IFwid2Via2l0VHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zZm9ybVR5cGUgPSBcIi13ZWJraXQtdHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zaXRpb25UeXBlID0gXCJ3ZWJraXRUcmFuc2l0aW9uXCIpLFxuICAgICAgICAgIHZvaWQgMCA9PT0gZS5wZXJzcGVjdGl2ZVByb3BlcnR5ICYmXG4gICAgICAgICAgICB2b2lkIDAgPT09IGUud2Via2l0UGVyc3BlY3RpdmUgJiZcbiAgICAgICAgICAgIChpLmFuaW1UeXBlID0gITEpKSxcbiAgICAgICAgdm9pZCAwICE9PSBlLm1zVHJhbnNmb3JtICYmXG4gICAgICAgICAgKChpLmFuaW1UeXBlID0gXCJtc1RyYW5zZm9ybVwiKSxcbiAgICAgICAgICAoaS50cmFuc2Zvcm1UeXBlID0gXCItbXMtdHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zaXRpb25UeXBlID0gXCJtc1RyYW5zaXRpb25cIiksXG4gICAgICAgICAgdm9pZCAwID09PSBlLm1zVHJhbnNmb3JtICYmIChpLmFuaW1UeXBlID0gITEpKSxcbiAgICAgICAgdm9pZCAwICE9PSBlLnRyYW5zZm9ybSAmJlxuICAgICAgICAgICExICE9PSBpLmFuaW1UeXBlICYmXG4gICAgICAgICAgKChpLmFuaW1UeXBlID0gXCJ0cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNmb3JtVHlwZSA9IFwidHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zaXRpb25UeXBlID0gXCJ0cmFuc2l0aW9uXCIpKSxcbiAgICAgICAgKGkudHJhbnNmb3Jtc0VuYWJsZWQgPVxuICAgICAgICAgIGkub3B0aW9ucy51c2VUcmFuc2Zvcm0gJiYgbnVsbCAhPT0gaS5hbmltVHlwZSAmJiAhMSAhPT0gaS5hbmltVHlwZSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldFNsaWRlQ2xhc3NlcyA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyxcbiAgICAgICAgbiA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgICgodCA9IG4uJHNsaWRlclxuICAgICAgICAgIC5maW5kKFwiLnNsaWNrLXNsaWRlXCIpXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay1jdXJyZW50XCIpXG4gICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcInRydWVcIikpLFxuICAgICAgICBuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jdXJyZW50XCIpLFxuICAgICAgICAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUpXG4gICAgICApIHtcbiAgICAgICAgdmFyIHIgPSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICUgMiA9PSAwID8gMSA6IDA7XG4gICAgICAgIChlID0gTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMikpLFxuICAgICAgICAgICEwID09PSBuLm9wdGlvbnMuaW5maW5pdGUgJiZcbiAgICAgICAgICAgIChpID49IGUgJiYgaSA8PSBuLnNsaWRlQ291bnQgLSAxIC0gZVxuICAgICAgICAgICAgICA/IG4uJHNsaWRlc1xuICAgICAgICAgICAgICAgICAgLnNsaWNlKGkgLSBlICsgciwgaSArIGUgKyAxKVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwiZmFsc2VcIilcbiAgICAgICAgICAgICAgOiAoKG8gPSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgaSksXG4gICAgICAgICAgICAgICAgdFxuICAgICAgICAgICAgICAgICAgLnNsaWNlKG8gLSBlICsgMSArIHIsIG8gKyBlICsgMilcbiAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKVxuICAgICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpKSxcbiAgICAgICAgICAgIDAgPT09IGlcbiAgICAgICAgICAgICAgPyB0XG4gICAgICAgICAgICAgICAgICAuZXEodC5sZW5ndGggLSAxIC0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWNlbnRlclwiKVxuICAgICAgICAgICAgICA6IGkgPT09IG4uc2xpZGVDb3VudCAtIDEgJiZcbiAgICAgICAgICAgICAgICB0LmVxKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpKSxcbiAgICAgICAgICBuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgaSA+PSAwICYmIGkgPD0gbi5zbGlkZUNvdW50IC0gbi5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgID8gbi4kc2xpZGVzXG4gICAgICAgICAgICAgIC5zbGljZShpLCBpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKVxuICAgICAgICAgIDogdC5sZW5ndGggPD0gbi5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgID8gdC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKVxuICAgICAgICAgIDogKChzID0gbi5zbGlkZUNvdW50ICUgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyksXG4gICAgICAgICAgICAobyA9ICEwID09PSBuLm9wdGlvbnMuaW5maW5pdGUgPyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgaSA6IGkpLFxuICAgICAgICAgICAgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PSBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgJiZcbiAgICAgICAgICAgIG4uc2xpZGVDb3VudCAtIGkgPCBuLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICAgID8gdFxuICAgICAgICAgICAgICAgICAgLnNsaWNlKG8gLSAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIHMpLCBvICsgcylcbiAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKVxuICAgICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpXG4gICAgICAgICAgICAgIDogdFxuICAgICAgICAgICAgICAgICAgLnNsaWNlKG8sIG8gKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwiZmFsc2VcIikpO1xuICAgICAgKFwib25kZW1hbmRcIiAhPT0gbi5vcHRpb25zLmxhenlMb2FkICYmXG4gICAgICAgIFwiYW50aWNpcGF0ZWRcIiAhPT0gbi5vcHRpb25zLmxhenlMb2FkKSB8fFxuICAgICAgICBuLmxhenlMb2FkKCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldHVwSW5maW5pdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgICghMCA9PT0gcy5vcHRpb25zLmZhZGUgJiYgKHMub3B0aW9ucy5jZW50ZXJNb2RlID0gITEpLFxuICAgICAgICAhMCA9PT0gcy5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgITEgPT09IHMub3B0aW9ucy5mYWRlICYmXG4gICAgICAgICAgKCh0ID0gbnVsbCksIHMuc2xpZGVDb3VudCA+IHMub3B0aW9ucy5zbGlkZXNUb1Nob3cpKVxuICAgICAgKSB7XG4gICAgICAgIGZvciAoXG4gICAgICAgICAgbyA9XG4gICAgICAgICAgICAhMCA9PT0gcy5vcHRpb25zLmNlbnRlck1vZGVcbiAgICAgICAgICAgICAgPyBzLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgMVxuICAgICAgICAgICAgICA6IHMub3B0aW9ucy5zbGlkZXNUb1Nob3csXG4gICAgICAgICAgICBlID0gcy5zbGlkZUNvdW50O1xuICAgICAgICAgIGUgPiBzLnNsaWRlQ291bnQgLSBvO1xuICAgICAgICAgIGUgLT0gMVxuICAgICAgICApXG4gICAgICAgICAgKHQgPSBlIC0gMSksXG4gICAgICAgICAgICBpKHMuJHNsaWRlc1t0XSlcbiAgICAgICAgICAgICAgLmNsb25lKCEwKVxuICAgICAgICAgICAgICAuYXR0cihcImlkXCIsIFwiXCIpXG4gICAgICAgICAgICAgIC5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiLCB0IC0gcy5zbGlkZUNvdW50KVxuICAgICAgICAgICAgICAucHJlcGVuZFRvKHMuJHNsaWRlVHJhY2spXG4gICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWNsb25lZFwiKTtcbiAgICAgICAgZm9yIChlID0gMDsgZSA8IG8gKyBzLnNsaWRlQ291bnQ7IGUgKz0gMSlcbiAgICAgICAgICAodCA9IGUpLFxuICAgICAgICAgICAgaShzLiRzbGlkZXNbdF0pXG4gICAgICAgICAgICAgIC5jbG9uZSghMClcbiAgICAgICAgICAgICAgLmF0dHIoXCJpZFwiLCBcIlwiKVxuICAgICAgICAgICAgICAuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiwgdCArIHMuc2xpZGVDb3VudClcbiAgICAgICAgICAgICAgLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spXG4gICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWNsb25lZFwiKTtcbiAgICAgICAgcy4kc2xpZGVUcmFja1xuICAgICAgICAgIC5maW5kKFwiLnNsaWNrLWNsb25lZFwiKVxuICAgICAgICAgIC5maW5kKFwiW2lkXVwiKVxuICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGkodGhpcykuYXR0cihcImlkXCIsIFwiXCIpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgaSB8fCBlLmF1dG9QbGF5KCksIChlLmludGVycnVwdGVkID0gaSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNlbGVjdEhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIHQgPSB0aGlzLFxuICAgICAgICBvID0gaShlLnRhcmdldCkuaXMoXCIuc2xpY2stc2xpZGVcIilcbiAgICAgICAgICA/IGkoZS50YXJnZXQpXG4gICAgICAgICAgOiBpKGUudGFyZ2V0KS5wYXJlbnRzKFwiLnNsaWNrLXNsaWRlXCIpLFxuICAgICAgICBzID0gcGFyc2VJbnQoby5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiKSk7XG4gICAgICBzIHx8IChzID0gMCksXG4gICAgICAgIHQuc2xpZGVDb3VudCA8PSB0Lm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyB0LnNsaWRlSGFuZGxlcihzLCAhMSwgITApXG4gICAgICAgICAgOiB0LnNsaWRlSGFuZGxlcihzKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2xpZGVIYW5kbGVyID0gZnVuY3Rpb24gKGksIGUsIHQpIHtcbiAgICAgIHZhciBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByLFxuICAgICAgICBsLFxuICAgICAgICBkID0gbnVsbCxcbiAgICAgICAgYSA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgICgoZSA9IGUgfHwgITEpLFxuICAgICAgICAhKFxuICAgICAgICAgICghMCA9PT0gYS5hbmltYXRpbmcgJiYgITAgPT09IGEub3B0aW9ucy53YWl0Rm9yQW5pbWF0ZSkgfHxcbiAgICAgICAgICAoITAgPT09IGEub3B0aW9ucy5mYWRlICYmIGEuY3VycmVudFNsaWRlID09PSBpKVxuICAgICAgICApKVxuICAgICAgKVxuICAgICAgICBpZiAoXG4gICAgICAgICAgKCExID09PSBlICYmIGEuYXNOYXZGb3IoaSksXG4gICAgICAgICAgKG8gPSBpKSxcbiAgICAgICAgICAoZCA9IGEuZ2V0TGVmdChvKSksXG4gICAgICAgICAgKHIgPSBhLmdldExlZnQoYS5jdXJyZW50U2xpZGUpKSxcbiAgICAgICAgICAoYS5jdXJyZW50TGVmdCA9IG51bGwgPT09IGEuc3dpcGVMZWZ0ID8gciA6IGEuc3dpcGVMZWZ0KSxcbiAgICAgICAgICAhMSA9PT0gYS5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgICAhMSA9PT0gYS5vcHRpb25zLmNlbnRlck1vZGUgJiZcbiAgICAgICAgICAgIChpIDwgMCB8fCBpID4gYS5nZXREb3RDb3VudCgpICogYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSlcbiAgICAgICAgKVxuICAgICAgICAgICExID09PSBhLm9wdGlvbnMuZmFkZSAmJlxuICAgICAgICAgICAgKChvID0gYS5jdXJyZW50U2xpZGUpLFxuICAgICAgICAgICAgITAgIT09IHRcbiAgICAgICAgICAgICAgPyBhLmFuaW1hdGVTbGlkZShyLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICBhLnBvc3RTbGlkZShvKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICA6IGEucG9zdFNsaWRlKG8pKTtcbiAgICAgICAgZWxzZSBpZiAoXG4gICAgICAgICAgITEgPT09IGEub3B0aW9ucy5pbmZpbml0ZSAmJlxuICAgICAgICAgICEwID09PSBhLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgIChpIDwgMCB8fCBpID4gYS5zbGlkZUNvdW50IC0gYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKVxuICAgICAgICApXG4gICAgICAgICAgITEgPT09IGEub3B0aW9ucy5mYWRlICYmXG4gICAgICAgICAgICAoKG8gPSBhLmN1cnJlbnRTbGlkZSksXG4gICAgICAgICAgICAhMCAhPT0gdFxuICAgICAgICAgICAgICA/IGEuYW5pbWF0ZVNsaWRlKHIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIGEucG9zdFNsaWRlKG8pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIDogYS5wb3N0U2xpZGUobykpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAoYS5vcHRpb25zLmF1dG9wbGF5ICYmIGNsZWFySW50ZXJ2YWwoYS5hdXRvUGxheVRpbWVyKSxcbiAgICAgICAgICAgIChzID1cbiAgICAgICAgICAgICAgbyA8IDBcbiAgICAgICAgICAgICAgICA/IGEuc2xpZGVDb3VudCAlIGEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPSAwXG4gICAgICAgICAgICAgICAgICA/IGEuc2xpZGVDb3VudCAtIChhLnNsaWRlQ291bnQgJSBhLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpXG4gICAgICAgICAgICAgICAgICA6IGEuc2xpZGVDb3VudCArIG9cbiAgICAgICAgICAgICAgICA6IG8gPj0gYS5zbGlkZUNvdW50XG4gICAgICAgICAgICAgICAgPyBhLnNsaWRlQ291bnQgJSBhLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgIT0gMFxuICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICA6IG8gLSBhLnNsaWRlQ291bnRcbiAgICAgICAgICAgICAgICA6IG8pLFxuICAgICAgICAgICAgKGEuYW5pbWF0aW5nID0gITApLFxuICAgICAgICAgICAgYS4kc2xpZGVyLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIiwgW2EsIGEuY3VycmVudFNsaWRlLCBzXSksXG4gICAgICAgICAgICAobiA9IGEuY3VycmVudFNsaWRlKSxcbiAgICAgICAgICAgIChhLmN1cnJlbnRTbGlkZSA9IHMpLFxuICAgICAgICAgICAgYS5zZXRTbGlkZUNsYXNzZXMoYS5jdXJyZW50U2xpZGUpLFxuICAgICAgICAgICAgYS5vcHRpb25zLmFzTmF2Rm9yICYmXG4gICAgICAgICAgICAgIChsID0gKGwgPSBhLmdldE5hdlRhcmdldCgpKS5zbGljayhcImdldFNsaWNrXCIpKS5zbGlkZUNvdW50IDw9XG4gICAgICAgICAgICAgICAgbC5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgICAgICBsLnNldFNsaWRlQ2xhc3NlcyhhLmN1cnJlbnRTbGlkZSksXG4gICAgICAgICAgICBhLnVwZGF0ZURvdHMoKSxcbiAgICAgICAgICAgIGEudXBkYXRlQXJyb3dzKCksXG4gICAgICAgICAgICAhMCA9PT0gYS5vcHRpb25zLmZhZGUpXG4gICAgICAgICAgKVxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgITAgIT09IHRcbiAgICAgICAgICAgICAgICA/IChhLmZhZGVTbGlkZU91dChuKSxcbiAgICAgICAgICAgICAgICAgIGEuZmFkZVNsaWRlKHMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5wb3N0U2xpZGUocyk7XG4gICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICA6IGEucG9zdFNsaWRlKHMpLFxuICAgICAgICAgICAgICB2b2lkIGEuYW5pbWF0ZUhlaWdodCgpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICEwICE9PSB0XG4gICAgICAgICAgICA/IGEuYW5pbWF0ZVNsaWRlKGQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBhLnBvc3RTbGlkZShzKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIDogYS5wb3N0U2xpZGUocyk7XG4gICAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc3RhcnRMb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgITAgPT09IGkub3B0aW9ucy5hcnJvd3MgJiZcbiAgICAgICAgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAoaS4kcHJldkFycm93LmhpZGUoKSwgaS4kbmV4dEFycm93LmhpZGUoKSksXG4gICAgICAgICEwID09PSBpLm9wdGlvbnMuZG90cyAmJlxuICAgICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICBpLiRkb3RzLmhpZGUoKSxcbiAgICAgICAgaS4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stbG9hZGluZ1wiKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc3dpcGVEaXJlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSxcbiAgICAgICAgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyA9IHRoaXM7XG4gICAgICByZXR1cm4gKFxuICAgICAgICAoaSA9IHMudG91Y2hPYmplY3Quc3RhcnRYIC0gcy50b3VjaE9iamVjdC5jdXJYKSxcbiAgICAgICAgKGUgPSBzLnRvdWNoT2JqZWN0LnN0YXJ0WSAtIHMudG91Y2hPYmplY3QuY3VyWSksXG4gICAgICAgICh0ID0gTWF0aC5hdGFuMihlLCBpKSksXG4gICAgICAgIChvID0gTWF0aC5yb3VuZCgoMTgwICogdCkgLyBNYXRoLlBJKSkgPCAwICYmIChvID0gMzYwIC0gTWF0aC5hYnMobykpLFxuICAgICAgICBvIDw9IDQ1ICYmIG8gPj0gMFxuICAgICAgICAgID8gITEgPT09IHMub3B0aW9ucy5ydGxcbiAgICAgICAgICAgID8gXCJsZWZ0XCJcbiAgICAgICAgICAgIDogXCJyaWdodFwiXG4gICAgICAgICAgOiBvIDw9IDM2MCAmJiBvID49IDMxNVxuICAgICAgICAgID8gITEgPT09IHMub3B0aW9ucy5ydGxcbiAgICAgICAgICAgID8gXCJsZWZ0XCJcbiAgICAgICAgICAgIDogXCJyaWdodFwiXG4gICAgICAgICAgOiBvID49IDEzNSAmJiBvIDw9IDIyNVxuICAgICAgICAgID8gITEgPT09IHMub3B0aW9ucy5ydGxcbiAgICAgICAgICAgID8gXCJyaWdodFwiXG4gICAgICAgICAgICA6IFwibGVmdFwiXG4gICAgICAgICAgOiAhMCA9PT0gcy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZ1xuICAgICAgICAgID8gbyA+PSAzNSAmJiBvIDw9IDEzNVxuICAgICAgICAgICAgPyBcImRvd25cIlxuICAgICAgICAgICAgOiBcInVwXCJcbiAgICAgICAgICA6IFwidmVydGljYWxcIlxuICAgICAgKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc3dpcGVFbmQgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8gPSB0aGlzO1xuICAgICAgaWYgKCgoby5kcmFnZ2luZyA9ICExKSwgKG8uc3dpcGluZyA9ICExKSwgby5zY3JvbGxpbmcpKVxuICAgICAgICByZXR1cm4gKG8uc2Nyb2xsaW5nID0gITEpLCAhMTtcbiAgICAgIGlmIChcbiAgICAgICAgKChvLmludGVycnVwdGVkID0gITEpLFxuICAgICAgICAoby5zaG91bGRDbGljayA9ICEoby50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA+IDEwKSksXG4gICAgICAgIHZvaWQgMCA9PT0gby50b3VjaE9iamVjdC5jdXJYKVxuICAgICAgKVxuICAgICAgICByZXR1cm4gITE7XG4gICAgICBpZiAoXG4gICAgICAgICghMCA9PT0gby50b3VjaE9iamVjdC5lZGdlSGl0ICYmXG4gICAgICAgICAgby4kc2xpZGVyLnRyaWdnZXIoXCJlZGdlXCIsIFtvLCBvLnN3aXBlRGlyZWN0aW9uKCldKSxcbiAgICAgICAgby50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA+PSBvLnRvdWNoT2JqZWN0Lm1pblN3aXBlKVxuICAgICAgKSB7XG4gICAgICAgIHN3aXRjaCAoKHQgPSBvLnN3aXBlRGlyZWN0aW9uKCkpKSB7XG4gICAgICAgICAgY2FzZSBcImxlZnRcIjpcbiAgICAgICAgICBjYXNlIFwiZG93blwiOlxuICAgICAgICAgICAgKGUgPSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlXG4gICAgICAgICAgICAgID8gby5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZSArIG8uZ2V0U2xpZGVDb3VudCgpKVxuICAgICAgICAgICAgICA6IG8uY3VycmVudFNsaWRlICsgby5nZXRTbGlkZUNvdW50KCkpLFxuICAgICAgICAgICAgICAoby5jdXJyZW50RGlyZWN0aW9uID0gMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgICAgICBjYXNlIFwidXBcIjpcbiAgICAgICAgICAgIChlID0gby5vcHRpb25zLnN3aXBlVG9TbGlkZVxuICAgICAgICAgICAgICA/IG8uY2hlY2tOYXZpZ2FibGUoby5jdXJyZW50U2xpZGUgLSBvLmdldFNsaWRlQ291bnQoKSlcbiAgICAgICAgICAgICAgOiBvLmN1cnJlbnRTbGlkZSAtIG8uZ2V0U2xpZGVDb3VudCgpKSxcbiAgICAgICAgICAgICAgKG8uY3VycmVudERpcmVjdGlvbiA9IDEpO1xuICAgICAgICB9XG4gICAgICAgIFwidmVydGljYWxcIiAhPSB0ICYmXG4gICAgICAgICAgKG8uc2xpZGVIYW5kbGVyKGUpLFxuICAgICAgICAgIChvLnRvdWNoT2JqZWN0ID0ge30pLFxuICAgICAgICAgIG8uJHNsaWRlci50cmlnZ2VyKFwic3dpcGVcIiwgW28sIHRdKSk7XG4gICAgICB9IGVsc2VcbiAgICAgICAgby50b3VjaE9iamVjdC5zdGFydFggIT09IG8udG91Y2hPYmplY3QuY3VyWCAmJlxuICAgICAgICAgIChvLnNsaWRlSGFuZGxlcihvLmN1cnJlbnRTbGlkZSksIChvLnRvdWNoT2JqZWN0ID0ge30pKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc3dpcGVIYW5kbGVyID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgIShcbiAgICAgICAgICAhMSA9PT0gZS5vcHRpb25zLnN3aXBlIHx8XG4gICAgICAgICAgKFwib250b3VjaGVuZFwiIGluIGRvY3VtZW50ICYmICExID09PSBlLm9wdGlvbnMuc3dpcGUpIHx8XG4gICAgICAgICAgKCExID09PSBlLm9wdGlvbnMuZHJhZ2dhYmxlICYmIC0xICE9PSBpLnR5cGUuaW5kZXhPZihcIm1vdXNlXCIpKVxuICAgICAgICApXG4gICAgICApXG4gICAgICAgIHN3aXRjaCAoXG4gICAgICAgICAgKChlLnRvdWNoT2JqZWN0LmZpbmdlckNvdW50ID1cbiAgICAgICAgICAgIGkub3JpZ2luYWxFdmVudCAmJiB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudC50b3VjaGVzXG4gICAgICAgICAgICAgID8gaS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMubGVuZ3RoXG4gICAgICAgICAgICAgIDogMSksXG4gICAgICAgICAgKGUudG91Y2hPYmplY3QubWluU3dpcGUgPSBlLmxpc3RXaWR0aCAvIGUub3B0aW9ucy50b3VjaFRocmVzaG9sZCksXG4gICAgICAgICAgITAgPT09IGUub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiZcbiAgICAgICAgICAgIChlLnRvdWNoT2JqZWN0Lm1pblN3aXBlID0gZS5saXN0SGVpZ2h0IC8gZS5vcHRpb25zLnRvdWNoVGhyZXNob2xkKSxcbiAgICAgICAgICBpLmRhdGEuYWN0aW9uKVxuICAgICAgICApIHtcbiAgICAgICAgICBjYXNlIFwic3RhcnRcIjpcbiAgICAgICAgICAgIGUuc3dpcGVTdGFydChpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJtb3ZlXCI6XG4gICAgICAgICAgICBlLnN3aXBlTW92ZShpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgIGUuc3dpcGVFbmQoaSk7XG4gICAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc3dpcGVNb3ZlID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByLFxuICAgICAgICBsID0gdGhpcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIChuID0gdm9pZCAwICE9PSBpLm9yaWdpbmFsRXZlbnQgPyBpLm9yaWdpbmFsRXZlbnQudG91Y2hlcyA6IG51bGwpLFxuICAgICAgICAhKCFsLmRyYWdnaW5nIHx8IGwuc2Nyb2xsaW5nIHx8IChuICYmIDEgIT09IG4ubGVuZ3RoKSkgJiZcbiAgICAgICAgICAoKGUgPSBsLmdldExlZnQobC5jdXJyZW50U2xpZGUpKSxcbiAgICAgICAgICAobC50b3VjaE9iamVjdC5jdXJYID0gdm9pZCAwICE9PSBuID8gblswXS5wYWdlWCA6IGkuY2xpZW50WCksXG4gICAgICAgICAgKGwudG91Y2hPYmplY3QuY3VyWSA9IHZvaWQgMCAhPT0gbiA/IG5bMF0ucGFnZVkgOiBpLmNsaWVudFkpLFxuICAgICAgICAgIChsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID0gTWF0aC5yb3VuZChcbiAgICAgICAgICAgIE1hdGguc3FydChNYXRoLnBvdyhsLnRvdWNoT2JqZWN0LmN1clggLSBsLnRvdWNoT2JqZWN0LnN0YXJ0WCwgMikpXG4gICAgICAgICAgKSksXG4gICAgICAgICAgKHIgPSBNYXRoLnJvdW5kKFxuICAgICAgICAgICAgTWF0aC5zcXJ0KE1hdGgucG93KGwudG91Y2hPYmplY3QuY3VyWSAtIGwudG91Y2hPYmplY3Quc3RhcnRZLCAyKSlcbiAgICAgICAgICApKSxcbiAgICAgICAgICAhbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJiAhbC5zd2lwaW5nICYmIHIgPiA0XG4gICAgICAgICAgICA/ICgobC5zY3JvbGxpbmcgPSAhMCksICExKVxuICAgICAgICAgICAgOiAoITAgPT09IGwub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiZcbiAgICAgICAgICAgICAgICAobC50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA9IHIpLFxuICAgICAgICAgICAgICAodCA9IGwuc3dpcGVEaXJlY3Rpb24oKSksXG4gICAgICAgICAgICAgIHZvaWQgMCAhPT0gaS5vcmlnaW5hbEV2ZW50ICYmXG4gICAgICAgICAgICAgICAgbC50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA+IDQgJiZcbiAgICAgICAgICAgICAgICAoKGwuc3dpcGluZyA9ICEwKSwgaS5wcmV2ZW50RGVmYXVsdCgpKSxcbiAgICAgICAgICAgICAgKHMgPVxuICAgICAgICAgICAgICAgICghMSA9PT0gbC5vcHRpb25zLnJ0bCA/IDEgOiAtMSkgKlxuICAgICAgICAgICAgICAgIChsLnRvdWNoT2JqZWN0LmN1clggPiBsLnRvdWNoT2JqZWN0LnN0YXJ0WCA/IDEgOiAtMSkpLFxuICAgICAgICAgICAgICAhMCA9PT0gbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJlxuICAgICAgICAgICAgICAgIChzID0gbC50b3VjaE9iamVjdC5jdXJZID4gbC50b3VjaE9iamVjdC5zdGFydFkgPyAxIDogLTEpLFxuICAgICAgICAgICAgICAobyA9IGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGgpLFxuICAgICAgICAgICAgICAobC50b3VjaE9iamVjdC5lZGdlSGl0ID0gITEpLFxuICAgICAgICAgICAgICAhMSA9PT0gbC5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgICAgICAgKCgwID09PSBsLmN1cnJlbnRTbGlkZSAmJiBcInJpZ2h0XCIgPT09IHQpIHx8XG4gICAgICAgICAgICAgICAgICAobC5jdXJyZW50U2xpZGUgPj0gbC5nZXREb3RDb3VudCgpICYmIFwibGVmdFwiID09PSB0KSkgJiZcbiAgICAgICAgICAgICAgICAoKG8gPSBsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoICogbC5vcHRpb25zLmVkZ2VGcmljdGlvbiksXG4gICAgICAgICAgICAgICAgKGwudG91Y2hPYmplY3QuZWRnZUhpdCA9ICEwKSksXG4gICAgICAgICAgICAgICExID09PSBsLm9wdGlvbnMudmVydGljYWxcbiAgICAgICAgICAgICAgICA/IChsLnN3aXBlTGVmdCA9IGUgKyBvICogcylcbiAgICAgICAgICAgICAgICA6IChsLnN3aXBlTGVmdCA9IGUgKyBvICogKGwuJGxpc3QuaGVpZ2h0KCkgLyBsLmxpc3RXaWR0aCkgKiBzKSxcbiAgICAgICAgICAgICAgITAgPT09IGwub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiYgKGwuc3dpcGVMZWZ0ID0gZSArIG8gKiBzKSxcbiAgICAgICAgICAgICAgITAgIT09IGwub3B0aW9ucy5mYWRlICYmXG4gICAgICAgICAgICAgICAgITEgIT09IGwub3B0aW9ucy50b3VjaE1vdmUgJiZcbiAgICAgICAgICAgICAgICAoITAgPT09IGwuYW5pbWF0aW5nXG4gICAgICAgICAgICAgICAgICA/ICgobC5zd2lwZUxlZnQgPSBudWxsKSwgITEpXG4gICAgICAgICAgICAgICAgICA6IHZvaWQgbC5zZXRDU1MobC5zd2lwZUxlZnQpKSkpXG4gICAgICApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zd2lwZVN0YXJ0ID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0ID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKCh0LmludGVycnVwdGVkID0gITApLFxuICAgICAgICAxICE9PSB0LnRvdWNoT2JqZWN0LmZpbmdlckNvdW50IHx8XG4gICAgICAgICAgdC5zbGlkZUNvdW50IDw9IHQub3B0aW9ucy5zbGlkZXNUb1Nob3cpXG4gICAgICApXG4gICAgICAgIHJldHVybiAodC50b3VjaE9iamVjdCA9IHt9KSwgITE7XG4gICAgICB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudCAmJlxuICAgICAgICB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudC50b3VjaGVzICYmXG4gICAgICAgIChlID0gaS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0pLFxuICAgICAgICAodC50b3VjaE9iamVjdC5zdGFydFggPSB0LnRvdWNoT2JqZWN0LmN1clggPVxuICAgICAgICAgIHZvaWQgMCAhPT0gZSA/IGUucGFnZVggOiBpLmNsaWVudFgpLFxuICAgICAgICAodC50b3VjaE9iamVjdC5zdGFydFkgPSB0LnRvdWNoT2JqZWN0LmN1clkgPVxuICAgICAgICAgIHZvaWQgMCAhPT0gZSA/IGUucGFnZVkgOiBpLmNsaWVudFkpLFxuICAgICAgICAodC5kcmFnZ2luZyA9ICEwKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUudW5maWx0ZXJTbGlkZXMgPSBlLnByb3RvdHlwZS5zbGlja1VuZmlsdGVyID1cbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgICBudWxsICE9PSBpLiRzbGlkZXNDYWNoZSAmJlxuICAgICAgICAgIChpLnVubG9hZCgpLFxuICAgICAgICAgIGkuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxcbiAgICAgICAgICBpLiRzbGlkZXNDYWNoZS5hcHBlbmRUbyhpLiRzbGlkZVRyYWNrKSxcbiAgICAgICAgICBpLnJlaW5pdCgpKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS51bmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBpKFwiLnNsaWNrLWNsb25lZFwiLCBlLiRzbGlkZXIpLnJlbW92ZSgpLFxuICAgICAgICBlLiRkb3RzICYmIGUuJGRvdHMucmVtb3ZlKCksXG4gICAgICAgIGUuJHByZXZBcnJvdyAmJlxuICAgICAgICAgIGUuaHRtbEV4cHIudGVzdChlLm9wdGlvbnMucHJldkFycm93KSAmJlxuICAgICAgICAgIGUuJHByZXZBcnJvdy5yZW1vdmUoKSxcbiAgICAgICAgZS4kbmV4dEFycm93ICYmXG4gICAgICAgICAgZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5uZXh0QXJyb3cpICYmXG4gICAgICAgICAgZS4kbmV4dEFycm93LnJlbW92ZSgpLFxuICAgICAgICBlLiRzbGlkZXNcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stdmlzaWJsZSBzbGljay1jdXJyZW50XCIpXG4gICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcInRydWVcIilcbiAgICAgICAgICAuY3NzKFwid2lkdGhcIiwgXCJcIik7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnVuc2xpY2sgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgZS4kc2xpZGVyLnRyaWdnZXIoXCJ1bnNsaWNrXCIsIFtlLCBpXSksIGUuZGVzdHJveSgpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS51cGRhdGVBcnJvd3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBNYXRoLmZsb29yKGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKSxcbiAgICAgICAgITAgPT09IGkub3B0aW9ucy5hcnJvd3MgJiZcbiAgICAgICAgICBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgIWkub3B0aW9ucy5pbmZpbml0ZSAmJlxuICAgICAgICAgIChpLiRwcmV2QXJyb3dcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJmYWxzZVwiKSxcbiAgICAgICAgICBpLiRuZXh0QXJyb3dcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJmYWxzZVwiKSxcbiAgICAgICAgICAwID09PSBpLmN1cnJlbnRTbGlkZVxuICAgICAgICAgICAgPyAoaS4kcHJldkFycm93XG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJ0cnVlXCIpLFxuICAgICAgICAgICAgICBpLiRuZXh0QXJyb3dcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpKVxuICAgICAgICAgICAgOiBpLmN1cnJlbnRTbGlkZSA+PSBpLnNsaWRlQ291bnQgLSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgICAgICExID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZVxuICAgICAgICAgICAgPyAoaS4kbmV4dEFycm93XG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJ0cnVlXCIpLFxuICAgICAgICAgICAgICBpLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpKVxuICAgICAgICAgICAgOiBpLmN1cnJlbnRTbGlkZSA+PSBpLnNsaWRlQ291bnQgLSAxICYmXG4gICAgICAgICAgICAgICEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgICAoaS4kbmV4dEFycm93XG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJ0cnVlXCIpLFxuICAgICAgICAgICAgICBpLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnVwZGF0ZURvdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBudWxsICE9PSBpLiRkb3RzICYmXG4gICAgICAgIChpLiRkb3RzLmZpbmQoXCJsaVwiKS5yZW1vdmVDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5lbmQoKSxcbiAgICAgICAgaS4kZG90c1xuICAgICAgICAgIC5maW5kKFwibGlcIilcbiAgICAgICAgICAuZXEoTWF0aC5mbG9vcihpLmN1cnJlbnRTbGlkZSAvIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCkpXG4gICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUudmlzaWJpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIGkub3B0aW9ucy5hdXRvcGxheSAmJlxuICAgICAgICAoZG9jdW1lbnRbaS5oaWRkZW5dID8gKGkuaW50ZXJydXB0ZWQgPSAhMCkgOiAoaS5pbnRlcnJ1cHRlZCA9ICExKSk7XG4gICAgfSksXG4gICAgKGkuZm4uc2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSxcbiAgICAgICAgdCxcbiAgICAgICAgbyA9IHRoaXMsXG4gICAgICAgIHMgPSBhcmd1bWVudHNbMF0sXG4gICAgICAgIG4gPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLFxuICAgICAgICByID0gby5sZW5ndGg7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgcjsgaSsrKVxuICAgICAgICBpZiAoXG4gICAgICAgICAgKFwib2JqZWN0XCIgPT0gdHlwZW9mIHMgfHwgdm9pZCAwID09PSBzXG4gICAgICAgICAgICA/IChvW2ldLnNsaWNrID0gbmV3IGUob1tpXSwgcykpXG4gICAgICAgICAgICA6ICh0ID0gb1tpXS5zbGlja1tzXS5hcHBseShvW2ldLnNsaWNrLCBuKSksXG4gICAgICAgICAgdm9pZCAwICE9PSB0KVxuICAgICAgICApXG4gICAgICAgICAgcmV0dXJuIHQ7XG4gICAgICByZXR1cm4gbztcbiAgICB9KTtcbn0pO1xuXG4oKCkgPT4ge1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgaW5pdExvemFkKCk7XG4gICAgaW5pdE1vYmlsZU1lbnUoKTtcbiAgICAvLyBjaGFuZ2VIZXJvKCk7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGluaXRMb3phZCgpIHtcbiAgICBjb25zdCBvYnNlcnZlciA9IGxvemFkKCk7XG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZSgpO1xuICB9XG59KSgpO1xuXG5mdW5jdGlvbiBjaGFuZ2VIZXJvKCkge1xuICBjb25zdCBzZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlcm8nKTtcbiAgaWYoIXNlY3Rpb24pIHJldHVybjtcblxuICBjb25zdCBvcHRpb25zID0gW1wiLi9kZXN0L2ltZy9oZXJvLTAxLmpwZ1wiLCBcIi4vZGVzdC9pbWcvaGVyby0wMi5qcGdcIiwgXCIuL2Rlc3QvaW1nL2hlcm8tMDMuanBnXCJdO1xuICBsZXQgaW5kZXggPSAwO1xuXG4gIHNldEludGVydmFsKCgpID0+IHtcbiAgICBzZWN0aW9uLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9ICBgdXJsKCR7b3B0aW9uc1tpbmRleF19KWA7XG4gICAgaW5kZXggPSBpbmRleCArIDEgPiBvcHRpb25zLmxlbmd0aCAtIDEgPyBpbmRleCA9IDAgOiBpbmRleCArIDE7IFxuICB9LCA0MDAwKTtcbn1cbi8qISBsb3phZC5qcyAtIHYxLjE2LjAgLSAyMDIwLTA5LTA2XG4gKiBodHRwczovL2dpdGh1Yi5jb20vQXBvb3J2U2F4ZW5hL2xvemFkLmpzXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgQXBvb3J2IFNheGVuYTsgTGljZW5zZWQgTUlUICovXG5cbihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIHR5cGVvZiBleHBvcnRzID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCJcbiAgICA/IChtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSlcbiAgICA6IHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kXG4gICAgPyBkZWZpbmUoZmFjdG9yeSlcbiAgICA6IChnbG9iYWwubG96YWQgPSBmYWN0b3J5KCkpO1xufSkodGhpcywgZnVuY3Rpb24gKCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICAvKipcbiAgICogRGV0ZWN0IElFIGJyb3dzZXJcbiAgICogQGNvbnN0IHtib29sZWFufVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdmFyIGlzSUUgPSB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnQuZG9jdW1lbnRNb2RlO1xuXG4gIHZhciBkZWZhdWx0Q29uZmlnID0ge1xuICAgIHJvb3RNYXJnaW46IFwiMHB4XCIsXG4gICAgdGhyZXNob2xkOiAwLFxuICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoZWxlbWVudCkge1xuICAgICAgaWYgKGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJwaWN0dXJlXCIpIHtcbiAgICAgICAgdmFyIGltZyA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcihcImltZ1wiKTtcbiAgICAgICAgdmFyIGFwcGVuZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChpbWcgPT09IG51bGwpIHtcbiAgICAgICAgICBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgICAgICAgIGFwcGVuZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNJRSAmJiBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtaWVzcmNcIikpIHtcbiAgICAgICAgICBpbWcuc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWllc3JjXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1hbHRcIikpIHtcbiAgICAgICAgICBpbWcuYWx0ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWFsdFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChhcHBlbmQpIHtcbiAgICAgICAgICBlbGVtZW50LmFwcGVuZChpbWcpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChcbiAgICAgICAgZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInZpZGVvXCIgJiZcbiAgICAgICAgIWVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNcIilcbiAgICAgICkge1xuICAgICAgICBpZiAoZWxlbWVudC5jaGlsZHJlbikge1xuICAgICAgICAgIHZhciBjaGlsZHMgPSBlbGVtZW50LmNoaWxkcmVuO1xuICAgICAgICAgIHZhciBjaGlsZFNyYyA9IHZvaWQgMDtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8PSBjaGlsZHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICBjaGlsZFNyYyA9IGNoaWxkc1tpXS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcbiAgICAgICAgICAgIGlmIChjaGlsZFNyYykge1xuICAgICAgICAgICAgICBjaGlsZHNbaV0uc3JjID0gY2hpbGRTcmM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZWxlbWVudC5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1wb3N0ZXJcIikpIHtcbiAgICAgICAgZWxlbWVudC5wb3N0ZXIgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtcG9zdGVyXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKSkge1xuICAgICAgICBlbGVtZW50LnNyYyA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtc3Jjc2V0XCIpKSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3Jjc2V0XCIsIGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNzZXRcIikpO1xuICAgICAgfVxuXG4gICAgICB2YXIgYmFja2dyb3VuZEltYWdlRGVsaW1pdGVyID0gXCIsXCI7XG4gICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJhY2tncm91bmQtZGVsaW1pdGVyXCIpKSB7XG4gICAgICAgIGJhY2tncm91bmRJbWFnZURlbGltaXRlciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFxuICAgICAgICAgIFwiZGF0YS1iYWNrZ3JvdW5kLWRlbGltaXRlclwiXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYmFja2dyb3VuZC1pbWFnZVwiKSkge1xuICAgICAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmRJbWFnZSA9XG4gICAgICAgICAgXCJ1cmwoJ1wiICtcbiAgICAgICAgICBlbGVtZW50XG4gICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiZGF0YS1iYWNrZ3JvdW5kLWltYWdlXCIpXG4gICAgICAgICAgICAuc3BsaXQoYmFja2dyb3VuZEltYWdlRGVsaW1pdGVyKVxuICAgICAgICAgICAgLmpvaW4oXCInKSx1cmwoJ1wiKSArXG4gICAgICAgICAgXCInKVwiO1xuICAgICAgfSBlbHNlIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYmFja2dyb3VuZC1pbWFnZS1zZXRcIikpIHtcbiAgICAgICAgdmFyIGltYWdlU2V0TGlua3MgPSBlbGVtZW50XG4gICAgICAgICAgLmdldEF0dHJpYnV0ZShcImRhdGEtYmFja2dyb3VuZC1pbWFnZS1zZXRcIilcbiAgICAgICAgICAuc3BsaXQoYmFja2dyb3VuZEltYWdlRGVsaW1pdGVyKTtcbiAgICAgICAgdmFyIGZpcnN0VXJsTGluayA9XG4gICAgICAgICAgaW1hZ2VTZXRMaW5rc1swXS5zdWJzdHIoMCwgaW1hZ2VTZXRMaW5rc1swXS5pbmRleE9mKFwiIFwiKSkgfHxcbiAgICAgICAgICBpbWFnZVNldExpbmtzWzBdOyAvLyBTdWJzdHJpbmcgYmVmb3JlIC4uLiAxeFxuICAgICAgICBmaXJzdFVybExpbmsgPVxuICAgICAgICAgIGZpcnN0VXJsTGluay5pbmRleE9mKFwidXJsKFwiKSA9PT0gLTFcbiAgICAgICAgICAgID8gXCJ1cmwoXCIgKyBmaXJzdFVybExpbmsgKyBcIilcIlxuICAgICAgICAgICAgOiBmaXJzdFVybExpbms7XG4gICAgICAgIGlmIChpbWFnZVNldExpbmtzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gZmlyc3RVcmxMaW5rO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKFxuICAgICAgICAgICAgXCJzdHlsZVwiLFxuICAgICAgICAgICAgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwic3R5bGVcIikgfHwgXCJcIikgK1xuICAgICAgICAgICAgICAoXCJiYWNrZ3JvdW5kLWltYWdlOiBcIiArXG4gICAgICAgICAgICAgICAgZmlyc3RVcmxMaW5rICtcbiAgICAgICAgICAgICAgICBcIjsgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1pbWFnZS1zZXQoXCIgK1xuICAgICAgICAgICAgICAgIGltYWdlU2V0TGlua3MgK1xuICAgICAgICAgICAgICAgIFwiKTsgYmFja2dyb3VuZC1pbWFnZTogaW1hZ2Utc2V0KFwiICtcbiAgICAgICAgICAgICAgICBpbWFnZVNldExpbmtzICtcbiAgICAgICAgICAgICAgICBcIilcIilcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtdG9nZ2xlLWNsYXNzXCIpKSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtdG9nZ2xlLWNsYXNzXCIpKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxvYWRlZDogZnVuY3Rpb24gbG9hZGVkKCkge30sXG4gIH07XG5cbiAgZnVuY3Rpb24gbWFya0FzTG9hZGVkKGVsZW1lbnQpIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGEtbG9hZGVkXCIsIHRydWUpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHJlTG9hZChlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1wbGFjZWhvbGRlci1iYWNrZ3JvdW5kXCIpKSB7XG4gICAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcbiAgICAgICAgXCJkYXRhLXBsYWNlaG9sZGVyLWJhY2tncm91bmRcIlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNMb2FkZWQgPSBmdW5jdGlvbiBpc0xvYWRlZChlbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1sb2FkZWRcIikgPT09IFwidHJ1ZVwiO1xuICB9O1xuXG4gIHZhciBvbkludGVyc2VjdGlvbiA9IGZ1bmN0aW9uIG9uSW50ZXJzZWN0aW9uKGxvYWQsIGxvYWRlZCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZW50cmllcywgb2JzZXJ2ZXIpIHtcbiAgICAgIGVudHJpZXMuZm9yRWFjaChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICAgICAgaWYgKGVudHJ5LmludGVyc2VjdGlvblJhdGlvID4gMCB8fCBlbnRyeS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShlbnRyeS50YXJnZXQpO1xuXG4gICAgICAgICAgaWYgKCFpc0xvYWRlZChlbnRyeS50YXJnZXQpKSB7XG4gICAgICAgICAgICBsb2FkKGVudHJ5LnRhcmdldCk7XG4gICAgICAgICAgICBtYXJrQXNMb2FkZWQoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgICAgIGxvYWRlZChlbnRyeS50YXJnZXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgZ2V0RWxlbWVudHMgPSBmdW5jdGlvbiBnZXRFbGVtZW50cyhzZWxlY3Rvcikge1xuICAgIHZhciByb290ID1cbiAgICAgIGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gYXJndW1lbnRzWzFdXG4gICAgICAgIDogZG9jdW1lbnQ7XG5cbiAgICBpZiAoc2VsZWN0b3IgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICByZXR1cm4gW3NlbGVjdG9yXTtcbiAgICB9XG5cbiAgICBpZiAoc2VsZWN0b3IgaW5zdGFuY2VvZiBOb2RlTGlzdCkge1xuICAgICAgcmV0dXJuIHNlbGVjdG9yO1xuICAgIH1cblxuICAgIHJldHVybiByb290LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGxvemFkKCkge1xuICAgIHZhciBzZWxlY3RvciA9XG4gICAgICBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZFxuICAgICAgICA/IGFyZ3VtZW50c1swXVxuICAgICAgICA6IFwiLmxvemFkXCI7XG4gICAgdmFyIG9wdGlvbnMgPVxuICAgICAgYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIHZhciBfT2JqZWN0JGFzc2lnbiA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRDb25maWcsIG9wdGlvbnMpLFxuICAgICAgcm9vdCA9IF9PYmplY3QkYXNzaWduLnJvb3QsXG4gICAgICByb290TWFyZ2luID0gX09iamVjdCRhc3NpZ24ucm9vdE1hcmdpbixcbiAgICAgIHRocmVzaG9sZCA9IF9PYmplY3QkYXNzaWduLnRocmVzaG9sZCxcbiAgICAgIGxvYWQgPSBfT2JqZWN0JGFzc2lnbi5sb2FkLFxuICAgICAgbG9hZGVkID0gX09iamVjdCRhc3NpZ24ubG9hZGVkO1xuXG4gICAgdmFyIG9ic2VydmVyID0gdm9pZCAwO1xuXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyKSB7XG4gICAgICBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihvbkludGVyc2VjdGlvbihsb2FkLCBsb2FkZWQpLCB7XG4gICAgICAgIHJvb3Q6IHJvb3QsXG4gICAgICAgIHJvb3RNYXJnaW46IHJvb3RNYXJnaW4sXG4gICAgICAgIHRocmVzaG9sZDogdGhyZXNob2xkLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnRzID0gZ2V0RWxlbWVudHMoc2VsZWN0b3IsIHJvb3QpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHByZUxvYWQoZWxlbWVudHNbaV0pO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBvYnNlcnZlOiBmdW5jdGlvbiBvYnNlcnZlKCkge1xuICAgICAgICB2YXIgZWxlbWVudHMgPSBnZXRFbGVtZW50cyhzZWxlY3Rvciwgcm9vdCk7XG5cbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGVsZW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgIGlmIChpc0xvYWRlZChlbGVtZW50c1tfaV0pKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAob2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudHNbX2ldKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxvYWQoZWxlbWVudHNbX2ldKTtcbiAgICAgICAgICBtYXJrQXNMb2FkZWQoZWxlbWVudHNbX2ldKTtcbiAgICAgICAgICBsb2FkZWQoZWxlbWVudHNbX2ldKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRyaWdnZXJMb2FkOiBmdW5jdGlvbiB0cmlnZ2VyTG9hZChlbGVtZW50KSB7XG4gICAgICAgIGlmIChpc0xvYWRlZChlbGVtZW50KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxvYWQoZWxlbWVudCk7XG4gICAgICAgIG1hcmtBc0xvYWRlZChlbGVtZW50KTtcbiAgICAgICAgbG9hZGVkKGVsZW1lbnQpO1xuICAgICAgfSxcblxuICAgICAgb2JzZXJ2ZXI6IG9ic2VydmVyLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gbG96YWQ7XG59KTtcblxuZnVuY3Rpb24gaW5pdE1vYmlsZU1lbnUoKSB7XG4gIGNvbnN0IG1lbnUgPSB7XG4gICAgd3JhcHBlcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXIgW2RhdGEtbWVudT0nd3JhcHBlciddXCIpLFxuICAgIGJ0bjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXIgW2RhdGEtbWVudT0nYnRuJ11cIiksXG4gIH07XG5cbiAgaWYgKCFtZW51LmJ0biB8fCAhbWVudS53cmFwcGVyKSByZXR1cm47XG5cbiAgbWVudS5idG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZUNsaWNrKTtcblxuICBmdW5jdGlvbiBoYW5kbGVDbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHsgY3VycmVudFRhcmdldCB9ID0gZTtcblxuICAgIGNvbnNvbGUubG9nKFwiYm90w6NvXCIpO1xuXG4gICAgaWYgKGN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwic2hvd1wiKSkge1xuICAgICAgY3VycmVudFRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcblxuICAgICAgbWVudS53cmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIG1lbnUud3JhcHBlci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB9LCA1MDApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xuXG4gICAgICBtZW51LndyYXBwZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBtZW51LndyYXBwZXIuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XG4gICAgICB9LCA1MDApO1xuICAgIH1cbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHtcbiAgICBtZW51LndyYXBwZXIuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJcIik7XG4gICAgbWVudS53cmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuICAgIG1lbnUuYnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuICB9KTtcbn1cbiJdfQ==
