function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function slideHero(){var e=document.querySelector("[data-homeSlider='wrapper']"),i=document.querySelectorAll("[data-homeSlider='slide']");!e||i.length<2||$("[data-homeSlider='wrapper']").slick({dots:!0,infinite:!1,slidesToShow:1,slidesToScroll:1,lazyLoad:"ondemand",autoplay:!0,autoplaySpeed:5e3})}function slideSoluctions(){var e=document.querySelector("[data-coursesSlider='wrapper']"),i=document.querySelectorAll("[data-coursesSlider='slide']");!e||i.length<2||$("[data-coursesSlider='wrapper']").slick({dots:!1,infinite:!1,slidesToShow:4,slidesToScroll:1,lazyLoad:"ondemand",responsive:[{breakpoint:900,settings:{slidesToShow:3,slidesToScroll:1}},{breakpoint:600,settings:{slidesToShow:2,slidesToScroll:1}},{breakpoint:500,settings:{slidesToShow:1,slidesToScroll:1}}]})}function changeHero(){var e=document.querySelector(".hero");if(e){var i=["./dest/img/hero-01.jpg","./dest/img/hero-02.jpg","./dest/img/hero-03.jpg"],t=0;setInterval((function(){e.style.backgroundImage="url(".concat(i[t],")"),t=t+1>i.length-1?t=0:t+1}),4e3)}}
/*! lozad.js - v1.16.0 - 2020-09-06
 * https://github.com/ApoorvSaxena/lozad.js
 * Copyright (c) 2020 Apoorv Saxena; Licensed MIT */function initMobileMenu(){var e={wrapper:document.querySelector(".header [data-menu='wrapper']"),btn:document.querySelector(".header [data-menu='btn']")};e.btn&&e.wrapper&&(e.btn.addEventListener("click",(function(i){i.preventDefault();var t=i.currentTarget;console.log("bot√£o"),t.classList.contains("show")?(t.classList.remove("show"),e.wrapper.classList.remove("show"),setTimeout((function(){e.wrapper.style.display="none"}),500)):(t.classList.add("show"),e.wrapper.style.display="block",setTimeout((function(){e.wrapper.classList.add("show")}),500))})),window.addEventListener("resize",(function(){e.wrapper.setAttribute("style",""),e.wrapper.classList.remove("show"),e.btn.classList.remove("show")})))}document.addEventListener("DOMContentLoaded",(function(){slideHero(),slideSoluctions()})),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}((function(e){"use strict";var i=window.Slick||{};(i=function(){var i=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(t),appendDots:e(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(i,t){return e('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=e(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=e(t).data("slick")||{},n.options=e.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=e.proxy(n.autoPlay,n),n.autoPlayClear=e.proxy(n.autoPlayClear,n),n.autoPlayIterator=e.proxy(n.autoPlayIterator,n),n.changeSlide=e.proxy(n.changeSlide,n),n.clickHandler=e.proxy(n.clickHandler,n),n.selectHandler=e.proxy(n.selectHandler,n),n.setPosition=e.proxy(n.setPosition,n),n.swipeHandler=e.proxy(n.swipeHandler,n),n.dragHandler=e.proxy(n.dragHandler,n),n.keyHandler=e.proxy(n.keyHandler,n),n.instanceUid=i++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},i.prototype.addSlide=i.prototype.slickAdd=function(i,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?e(i).appendTo(s.$slideTrack):o?e(i).insertBefore(s.$slides.eq(t)):e(i).insertAfter(s.$slides.eq(t)):!0===o?e(i).prependTo(s.$slideTrack):e(i).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each((function(i,t){e(t).attr("data-slick-index",i)})),s.$slidesCache=s.$slides,s.reinit()},i.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:i},e.options.speed)}},i.prototype.animateSlide=function(i,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(i=-i),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:i},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:i},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),e({animStart:s.currentLeft}).animate({animStart:i},{duration:s.options.speed,easing:s.options.easing,step:function(e){e=Math.ceil(e),!1===s.options.vertical?(o[s.animType]="translate("+e+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+e+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),i=Math.ceil(i),!1===s.options.vertical?o[s.animType]="translate3d("+i+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+i+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout((function(){s.disableTransition(),t.call()}),s.options.speed))},i.prototype.getNavTarget=function(){var i=this.options.asNavFor;return i&&null!==i&&(i=e(i).not(this.$slider)),i},i.prototype.asNavFor=function(i){var t=this.getNavTarget();null!==t&&"object"==_typeof(t)&&t.each((function(){var t=e(this).slick("getSlick");t.unslicked||t.slideHandler(i,!0)}))},i.prototype.applyTransition=function(e){var i=this,t={};!1===i.options.fade?t[i.transitionType]=i.transformType+" "+i.options.speed+"ms "+i.options.cssEase:t[i.transitionType]="opacity "+i.options.speed+"ms "+i.options.cssEase,!1===i.options.fade?i.$slideTrack.css(t):i.$slides.eq(e).css(t)},i.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},i.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},i.prototype.autoPlayIterator=function(){var e=this,i=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(i=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(i))},i.prototype.buildArrows=function(){var i=this;!0===i.options.arrows&&(i.$prevArrow=e(i.options.prevArrow).addClass("slick-arrow"),i.$nextArrow=e(i.options.nextArrow).addClass("slick-arrow"),i.slideCount>i.options.slidesToShow?(i.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),i.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.prependTo(i.options.appendArrows),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.appendTo(i.options.appendArrows),!0!==i.options.infinite&&i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):i.$prevArrow.add(i.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},i.prototype.buildDots=function(){var i,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=e("<ul />").addClass(o.options.dotsClass),i=0;i<=o.getDotCount();i+=1)t.append(e("<li />").append(o.options.customPaging.call(this,o,i)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},i.prototype.buildOut=function(){var i=this;i.$slides=i.$slider.children(i.options.slide+":not(.slick-cloned)").addClass("slick-slide"),i.slideCount=i.$slides.length,i.$slides.each((function(i,t){e(t).attr("data-slick-index",i).data("originalStyling",e(t).attr("style")||"")})),i.$slider.addClass("slick-slider"),i.$slideTrack=0===i.slideCount?e('<div class="slick-track"/>').appendTo(i.$slider):i.$slides.wrapAll('<div class="slick-track"/>').parent(),i.$list=i.$slideTrack.wrap('<div class="slick-list"/>').parent(),i.$slideTrack.css("opacity",0),!0!==i.options.centerMode&&!0!==i.options.swipeToSlide||(i.options.slidesToScroll=1),e("img[data-lazy]",i.$slider).not("[src]").addClass("slick-loading"),i.setupInfinite(),i.buildArrows(),i.buildDots(),i.updateDots(),i.setSlideClasses("number"==typeof i.currentSlide?i.currentSlide:0),!0===i.options.draggable&&i.$list.addClass("draggable")},i.prototype.buildRows=function(){var e,i,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),e=0;e<s;e++){var a=document.createElement("div");for(i=0;i<l.options.rows;i++){var d=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=e*r+(i*l.options.slidesPerRow+t);n.get(c)&&d.appendChild(n.get(c))}a.appendChild(d)}o.appendChild(a)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},i.prototype.checkResponsive=function(i,t){var o,s,n,r=this,l=!1,a=r.$slider.width(),d=window.innerWidth||e(window).width();if("window"===r.respondTo?n=d:"slider"===r.respondTo?n=a:"min"===r.respondTo&&(n=Math.min(d,a)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(o in s=null,r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[s]),!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[s]),!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===i&&(r.currentSlide=r.options.initialSlide),r.refresh(i),l=s),i||!1===l||r.$slider.trigger("breakpoint",[r,l])}},i.prototype.changeSlide=function(i,t){var o,s,n=this,r=e(i.currentTarget);switch(r.is("a")&&i.preventDefault(),r.is("li")||(r=r.closest("li")),o=n.slideCount%n.options.slidesToScroll!=0?0:(n.slideCount-n.currentSlide)%n.options.slidesToScroll,i.data.message){case"previous":s=0===o?n.options.slidesToScroll:n.options.slidesToShow-o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide-s,!1,t);break;case"next":s=0===o?n.options.slidesToScroll:o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide+s,!1,t);break;case"index":var l=0===i.data.index?0:i.data.index||r.index()*n.options.slidesToScroll;n.slideHandler(n.checkNavigable(l),!1,t),r.children().trigger("focus");break;default:return}},i.prototype.checkNavigable=function(e){var i,t;if(t=0,e>(i=this.getNavigableIndexes())[i.length-1])e=i[i.length-1];else for(var o in i){if(e<i[o]){e=t;break}t=i[o]}return e},i.prototype.cleanUpEvents=function(){var i=this;i.options.dots&&null!==i.$dots&&(e("li",i.$dots).off("click.slick",i.changeSlide).off("mouseenter.slick",e.proxy(i.interrupt,i,!0)).off("mouseleave.slick",e.proxy(i.interrupt,i,!1)),!0===i.options.accessibility&&i.$dots.off("keydown.slick",i.keyHandler)),i.$slider.off("focus.slick blur.slick"),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow&&i.$prevArrow.off("click.slick",i.changeSlide),i.$nextArrow&&i.$nextArrow.off("click.slick",i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow&&i.$prevArrow.off("keydown.slick",i.keyHandler),i.$nextArrow&&i.$nextArrow.off("keydown.slick",i.keyHandler))),i.$list.off("touchstart.slick mousedown.slick",i.swipeHandler),i.$list.off("touchmove.slick mousemove.slick",i.swipeHandler),i.$list.off("touchend.slick mouseup.slick",i.swipeHandler),i.$list.off("touchcancel.slick mouseleave.slick",i.swipeHandler),i.$list.off("click.slick",i.clickHandler),e(document).off(i.visibilityChange,i.visibility),i.cleanUpSlideEvents(),!0===i.options.accessibility&&i.$list.off("keydown.slick",i.keyHandler),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().off("click.slick",i.selectHandler),e(window).off("orientationchange.slick.slick-"+i.instanceUid,i.orientationChange),e(window).off("resize.slick.slick-"+i.instanceUid,i.resize),e("[draggable!=true]",i.$slideTrack).off("dragstart",i.preventDefault),e(window).off("load.slick.slick-"+i.instanceUid,i.setPosition)},i.prototype.cleanUpSlideEvents=function(){var i=this;i.$list.off("mouseenter.slick",e.proxy(i.interrupt,i,!0)),i.$list.off("mouseleave.slick",e.proxy(i.interrupt,i,!1))},i.prototype.cleanUpRows=function(){var e,i=this;i.options.rows>1&&((e=i.$slides.children().children()).removeAttr("style"),i.$slider.empty().append(e))},i.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},i.prototype.destroy=function(i){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),e(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each((function(){e(this).attr("style",e(this).data("originalStyling"))})),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,i||t.$slider.trigger("destroy",[t])},i.prototype.disableTransition=function(e){var i=this,t={};t[i.transitionType]="",!1===i.options.fade?i.$slideTrack.css(t):i.$slides.eq(e).css(t)},i.prototype.fadeSlide=function(e,i){var t=this;!1===t.cssTransitions?(t.$slides.eq(e).css({zIndex:t.options.zIndex}),t.$slides.eq(e).animate({opacity:1},t.options.speed,t.options.easing,i)):(t.applyTransition(e),t.$slides.eq(e).css({opacity:1,zIndex:t.options.zIndex}),i&&setTimeout((function(){t.disableTransition(e),i.call()}),t.options.speed))},i.prototype.fadeSlideOut=function(e){var i=this;!1===i.cssTransitions?i.$slides.eq(e).animate({opacity:0,zIndex:i.options.zIndex-2},i.options.speed,i.options.easing):(i.applyTransition(e),i.$slides.eq(e).css({opacity:0,zIndex:i.options.zIndex-2}))},i.prototype.filterSlides=i.prototype.slickFilter=function(e){var i=this;null!==e&&(i.$slidesCache=i.$slides,i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.filter(e).appendTo(i.$slideTrack),i.reinit())},i.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",(function(t){t.stopImmediatePropagation();var o=e(this);setTimeout((function(){i.options.pauseOnFocus&&(i.focussed=o.is(":focus"),i.autoPlay())}),0)}))},i.prototype.getCurrent=i.prototype.slickCurrentSlide=function(){return this.currentSlide},i.prototype.getDotCount=function(){var e=this,i=0,t=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},i.prototype.getLeft=function(e){var i,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&e+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(e>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(e-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(e-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):e+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(e+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(e+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),i=!1===n.options.vertical?e*n.slideWidth*-1+n.slideOffset:e*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow),i=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow+1),i=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,i+=(n.$list.width()-o.outerWidth())/2)),i},i.prototype.getOption=i.prototype.slickGetOption=function(e){return this.options[e]},i.prototype.getNavigableIndexes=function(){var e,i=this,t=0,o=0,s=[];for(!1===i.options.infinite?e=i.slideCount:(t=-1*i.options.slidesToScroll,o=-1*i.options.slidesToScroll,e=2*i.slideCount);t<e;)s.push(t),t=o+i.options.slidesToScroll,o+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;return s},i.prototype.getSlick=function(){return this},i.prototype.getSlideCount=function(){var i,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each((function(s,n){if(n.offsetLeft-t+e(n).outerWidth()/2>-1*o.swipeLeft)return i=n,!1})),Math.abs(e(i).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},i.prototype.goTo=i.prototype.slickGoTo=function(e,i){this.changeSlide({data:{message:"index",index:parseInt(e)}},i)},i.prototype.init=function(i){var t=this;e(t.$slider).hasClass("slick-initialized")||(e(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),i&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},i.prototype.initADA=function(){var i=this,t=Math.ceil(i.slideCount/i.options.slidesToShow),o=i.getNavigableIndexes().filter((function(e){return e>=0&&e<i.slideCount}));i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each((function(t){var s=o.indexOf(t);e(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+t,tabindex:-1}),-1!==s&&e(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+s})})),i.$dots.attr("role","tablist").find("li").each((function(s){var n=o[s];e(this).attr({role:"presentation"}),e(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+s,"aria-controls":"slick-slide"+i.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})})).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=i.currentSlide,n=s+i.options.slidesToShow;s<n;s++)i.$slides.eq(s).attr("tabindex",0);i.activateADA()},i.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},i.prototype.initDotEvents=function(){var i=this;!0===i.options.dots&&(e("li",i.$dots).on("click.slick",{message:"index"},i.changeSlide),!0===i.options.accessibility&&i.$dots.on("keydown.slick",i.keyHandler)),!0===i.options.dots&&!0===i.options.pauseOnDotsHover&&e("li",i.$dots).on("mouseenter.slick",e.proxy(i.interrupt,i,!0)).on("mouseleave.slick",e.proxy(i.interrupt,i,!1))},i.prototype.initSlideEvents=function(){var i=this;i.options.pauseOnHover&&(i.$list.on("mouseenter.slick",e.proxy(i.interrupt,i,!0)),i.$list.on("mouseleave.slick",e.proxy(i.interrupt,i,!1)))},i.prototype.initializeEvents=function(){var i=this;i.initArrowEvents(),i.initDotEvents(),i.initSlideEvents(),i.$list.on("touchstart.slick mousedown.slick",{action:"start"},i.swipeHandler),i.$list.on("touchmove.slick mousemove.slick",{action:"move"},i.swipeHandler),i.$list.on("touchend.slick mouseup.slick",{action:"end"},i.swipeHandler),i.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},i.swipeHandler),i.$list.on("click.slick",i.clickHandler),e(document).on(i.visibilityChange,e.proxy(i.visibility,i)),!0===i.options.accessibility&&i.$list.on("keydown.slick",i.keyHandler),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().on("click.slick",i.selectHandler),e(window).on("orientationchange.slick.slick-"+i.instanceUid,e.proxy(i.orientationChange,i)),e(window).on("resize.slick.slick-"+i.instanceUid,e.proxy(i.resize,i)),e("[draggable!=true]",i.$slideTrack).on("dragstart",i.preventDefault),e(window).on("load.slick.slick-"+i.instanceUid,i.setPosition),e(i.setPosition)},i.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},i.prototype.keyHandler=function(e){var i=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===i.options.accessibility?i.changeSlide({data:{message:!0===i.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===i.options.accessibility&&i.changeSlide({data:{message:!0===i.options.rtl?"previous":"next"}}))},i.prototype.lazyLoad=function(){function i(i){e("img[data-lazy]",i).each((function(){var i=e(this),t=e(this).attr("data-lazy"),o=e(this).attr("data-srcset"),s=e(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){i.animate({opacity:0},100,(function(){o&&(i.attr("srcset",o),s&&i.attr("sizes",s)),i.attr("src",t).animate({opacity:1},200,(function(){i.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")})),n.$slider.trigger("lazyLoaded",[n,i,t])}))},r.onerror=function(){i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,i,t])},r.src=t}))}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,a=n.$slider.find(".slick-slide"),d=0;d<n.options.slidesToScroll;d++)r<0&&(r=n.slideCount-1),t=(t=t.add(a.eq(r))).add(a.eq(l)),r--,l++;i(t),n.slideCount<=n.options.slidesToShow?i(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?i(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&i(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},i.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},i.prototype.next=i.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},i.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},i.prototype.pause=i.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},i.prototype.play=i.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},i.prototype.postSlide=function(i){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,i]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&e(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},i.prototype.prev=i.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},i.prototype.preventDefault=function(e){e.preventDefault()},i.prototype.progressiveLazyLoad=function(i){i=i||1;var t,o,s,n,r,l=this,a=e("img[data-lazy]",l.$slider);a.length?(t=a.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){i<3?setTimeout((function(){l.progressiveLazyLoad(i+1)}),500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},i.prototype.refresh=function(i){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),e.extend(s,s.initials,{currentSlide:t}),s.init(),i||s.changeSlide({data:{message:"index",index:t}},!1)},i.prototype.registerBreakpoints=function(){var i,t,o,s=this,n=s.options.responsive||null;if("array"===e.type(n)&&n.length){for(i in s.respondTo=s.options.respondTo||"window",n)if(o=s.breakpoints.length-1,n.hasOwnProperty(i)){for(t=n[i].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[i].settings}s.breakpoints.sort((function(e,i){return s.options.mobileFirst?e-i:i-e}))}},i.prototype.reinit=function(){var i=this;i.$slides=i.$slideTrack.children(i.options.slide).addClass("slick-slide"),i.slideCount=i.$slides.length,i.currentSlide>=i.slideCount&&0!==i.currentSlide&&(i.currentSlide=i.currentSlide-i.options.slidesToScroll),i.slideCount<=i.options.slidesToShow&&(i.currentSlide=0),i.registerBreakpoints(),i.setProps(),i.setupInfinite(),i.buildArrows(),i.updateArrows(),i.initArrowEvents(),i.buildDots(),i.updateDots(),i.initDotEvents(),i.cleanUpSlideEvents(),i.initSlideEvents(),i.checkResponsive(!1,!0),!0===i.options.focusOnSelect&&e(i.$slideTrack).children().on("click.slick",i.selectHandler),i.setSlideClasses("number"==typeof i.currentSlide?i.currentSlide:0),i.setPosition(),i.focusHandler(),i.paused=!i.options.autoplay,i.autoPlay(),i.$slider.trigger("reInit",[i])},i.prototype.resize=function(){var i=this;e(window).width()!==i.windowWidth&&(clearTimeout(i.windowDelay),i.windowDelay=window.setTimeout((function(){i.windowWidth=e(window).width(),i.checkResponsive(),i.unslicked||i.setPosition()}),50))},i.prototype.removeSlide=i.prototype.slickRemove=function(e,i,t){var o=this;if(e="boolean"==typeof e?!0===(i=e)?0:o.slideCount-1:!0===i?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},i.prototype.setCSS=function(e){var i,t,o=this,s={};!0===o.options.rtl&&(e=-e),i="left"==o.positionProp?Math.ceil(e)+"px":"0px",t="top"==o.positionProp?Math.ceil(e)+"px":"0px",s[o.positionProp]=e,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+i+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+i+", "+t+", 0px)",o.$slideTrack.css(s)))},i.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var i=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-i)},i.prototype.setFade=function(){var i,t=this;t.$slides.each((function(o,s){i=t.slideWidth*o*-1,!0===t.options.rtl?e(s).css({position:"relative",right:i,top:0,zIndex:t.options.zIndex-2,opacity:0}):e(s).css({position:"relative",left:i,top:0,zIndex:t.options.zIndex-2,opacity:0})})),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},i.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",i)}},i.prototype.setOption=i.prototype.slickSetOption=function(){var i,t,o,s,n,r=this,l=!1;if("object"===e.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===e.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===e.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)e.each(o,(function(e,i){r.options[e]=i}));else if("responsive"===n)for(t in s)if("array"!==e.type(r.options.responsive))r.options.responsive=[s[t]];else{for(i=r.options.responsive.length-1;i>=0;)r.options.responsive[i].breakpoint===s[t].breakpoint&&r.options.responsive.splice(i,1),i--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},i.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},i.prototype.setProps=function(){var e=this,i=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===i.WebkitTransition&&void 0===i.MozTransition&&void 0===i.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==i.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===i.perspectiveProperty&&void 0===i.MozPerspective&&(e.animType=!1)),void 0!==i.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===i.msTransform&&(e.animType=!1)),void 0!==i.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},i.prototype.setSlideClasses=function(e){var i,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(e).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;i=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(e>=i&&e<=n.slideCount-1-i?n.$slides.slice(e-i+r,e+i+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+e,t.slice(o-i+1+r,o+i+2).addClass("slick-active").attr("aria-hidden","false")),0===e?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):e===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(e).addClass("slick-center")}else e>=0&&e<=n.slideCount-n.options.slidesToShow?n.$slides.slice(e,e+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+e:e,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-e<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},i.prototype.setupInfinite=function(){var i,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,i=s.slideCount;i>s.slideCount-o;i-=1)t=i-1,e(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(i=0;i<o+s.slideCount;i+=1)t=i,e(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each((function(){e(this).attr("id","")}))}},i.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},i.prototype.selectHandler=function(i){var t=this,o=e(i.target).is(".slick-slide")?e(i.target):e(i.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},i.prototype.slideHandler=function(e,i,t){var o,s,n,r,l,a=null,d=this;if(i=i||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===i&&d.asNavFor(e),o=e,a=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,(function(){d.postSlide(o)})):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,(function(){d.postSlide(o)})):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),n=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==t?(d.fadeSlideOut(n),d.fadeSlide(s,(function(){d.postSlide(s)}))):d.postSlide(s),void d.animateHeight();!0!==t?d.animateSlide(a,(function(){d.postSlide(s)})):d.postSlide(s)}},i.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},i.prototype.swipeDirection=function(){var e,i,t,o,s=this;return e=s.touchObject.startX-s.touchObject.curX,i=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(i,e),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0||o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},i.prototype.swipeEnd=function(e){var i,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(i),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},i.prototype.swipeHandler=function(e){var i=this;if(!(!1===i.options.swipe||"ontouchend"in document&&!1===i.options.swipe||!1===i.options.draggable&&-1!==e.type.indexOf("mouse")))switch(i.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,i.touchObject.minSwipe=i.listWidth/i.options.touchThreshold,!0===i.options.verticalSwiping&&(i.touchObject.minSwipe=i.listHeight/i.options.touchThreshold),e.data.action){case"start":i.swipeStart(e);break;case"move":i.swipeMove(e);break;case"end":i.swipeEnd(e)}},i.prototype.swipeMove=function(e){var i,t,o,s,n,r,l=this;return n=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(i=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:e.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:e.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==e.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,e.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=i+o*s:l.swipeLeft=i+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=i+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},i.prototype.swipeStart=function(e){var i,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(i=e.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==i?i.pageX:e.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==i?i.pageY:e.clientY,t.dragging=!0},i.prototype.unfilterSlides=i.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},i.prototype.unload=function(){var i=this;e(".slick-cloned",i.$slider).remove(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove(),i.$nextArrow&&i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove(),i.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},i.prototype.unslick=function(e){var i=this;i.$slider.trigger("unslick",[i,e]),i.destroy()},i.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode||e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode)&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},i.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},i.prototype.visibility=function(){var e=this;e.options.autoplay&&(document[e.hidden]?e.interrupted=!0:e.interrupted=!1)},e.fn.slick=function(){var e,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(e=0;e<r;e++)if("object"==_typeof(s)||void 0===s?o[e].slick=new i(o[e],s):t=o[e].slick[s].apply(o[e].slick,n),void 0!==t)return t;return o}})),document.addEventListener("DOMContentLoaded",(function(){lozad().observe(),initMobileMenu()})),function(e,i){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):e.lozad=i()}(this,(function(){"use strict";var e="undefined"!=typeof document&&document.documentMode,i={rootMargin:"0px",threshold:0,load:function(i){if("picture"===i.nodeName.toLowerCase()){var t=i.querySelector("img"),o=!1;null===t&&(t=document.createElement("img"),o=!0),e&&i.getAttribute("data-iesrc")&&(t.src=i.getAttribute("data-iesrc")),i.getAttribute("data-alt")&&(t.alt=i.getAttribute("data-alt")),o&&i.append(t)}if("video"===i.nodeName.toLowerCase()&&!i.getAttribute("data-src")&&i.children){for(var s=i.children,n=void 0,r=0;r<=s.length-1;r++)(n=s[r].getAttribute("data-src"))&&(s[r].src=n);i.load()}i.getAttribute("data-poster")&&(i.poster=i.getAttribute("data-poster")),i.getAttribute("data-src")&&(i.src=i.getAttribute("data-src")),i.getAttribute("data-srcset")&&i.setAttribute("srcset",i.getAttribute("data-srcset"));var l=",";if(i.getAttribute("data-background-delimiter")&&(l=i.getAttribute("data-background-delimiter")),i.getAttribute("data-background-image"))i.style.backgroundImage="url('"+i.getAttribute("data-background-image").split(l).join("'),url('")+"')";else if(i.getAttribute("data-background-image-set")){var a=i.getAttribute("data-background-image-set").split(l),d=a[0].substr(0,a[0].indexOf(" "))||a[0];d=-1===d.indexOf("url(")?"url("+d+")":d,1===a.length?i.style.backgroundImage=d:i.setAttribute("style",(i.getAttribute("style")||"")+"background-image: "+d+"; background-image: -webkit-image-set("+a+"); background-image: image-set("+a+")")}i.getAttribute("data-toggle-class")&&i.classList.toggle(i.getAttribute("data-toggle-class"))},loaded:function(){}};function t(e){e.setAttribute("data-loaded",!0)}var o=function(e){return"true"===e.getAttribute("data-loaded")},s=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return e instanceof Element?[e]:e instanceof NodeList?e:i.querySelectorAll(e)};return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".lozad",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Object.assign({},i,n),l=r.root,a=r.rootMargin,d=r.threshold,c=r.load,p=r.loaded,u=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(u=new IntersectionObserver(function(e,i){return function(s,n){s.forEach((function(s){(s.intersectionRatio>0||s.isIntersecting)&&(n.unobserve(s.target),o(s.target)||(e(s.target),t(s.target),i(s.target)))}))}}(c,p),{root:l,rootMargin:a,threshold:d}));for(var h,f=s(e,l),v=0;v<f.length;v++)(h=f[v]).getAttribute("data-placeholder-background")&&(h.style.background=h.getAttribute("data-placeholder-background"));return{observe:function(){for(var i=s(e,l),n=0;n<i.length;n++)o(i[n])||(u?u.observe(i[n]):(c(i[n]),t(i[n]),p(i[n])))},triggerLoad:function(e){o(e)||(c(e),t(e),p(e))},observer:u}}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJzbGlkZUhlcm8iLCJzbGlkZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiJCIsInNsaWNrIiwiZG90cyIsImluZmluaXRlIiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJsYXp5TG9hZCIsImF1dG9wbGF5IiwiYXV0b3BsYXlTcGVlZCIsInNsaWRlU29sdWN0aW9ucyIsInJlc3BvbnNpdmUiLCJicmVha3BvaW50Iiwic2V0dGluZ3MiLCJjaGFuZ2VIZXJvIiwic2VjdGlvbiIsIm9wdGlvbnMiLCJpbmRleCIsInNldEludGVydmFsIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJjb25jYXQiLCJpbml0TW9iaWxlTWVudSIsIm1lbnUiLCJ3cmFwcGVyIiwiYnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRUYXJnZXQiLCJjb25zb2xlIiwibG9nIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJzZXRUaW1lb3V0IiwiZGlzcGxheSIsImFkZCIsIndpbmRvdyIsInNldEF0dHJpYnV0ZSIsImkiLCJkZWZpbmUiLCJhbWQiLCJleHBvcnRzIiwibW9kdWxlIiwicmVxdWlyZSIsImpRdWVyeSIsIlNsaWNrIiwidCIsInMiLCJuIiwidGhpcyIsImRlZmF1bHRzIiwiYWNjZXNzaWJpbGl0eSIsImFkYXB0aXZlSGVpZ2h0IiwiYXBwZW5kQXJyb3dzIiwiYXBwZW5kRG90cyIsImFycm93cyIsImFzTmF2Rm9yIiwicHJldkFycm93IiwibmV4dEFycm93IiwiY2VudGVyTW9kZSIsImNlbnRlclBhZGRpbmciLCJjc3NFYXNlIiwiY3VzdG9tUGFnaW5nIiwidGV4dCIsImRvdHNDbGFzcyIsImRyYWdnYWJsZSIsImVhc2luZyIsImVkZ2VGcmljdGlvbiIsImZhZGUiLCJmb2N1c09uU2VsZWN0IiwiZm9jdXNPbkNoYW5nZSIsImluaXRpYWxTbGlkZSIsIm1vYmlsZUZpcnN0IiwicGF1c2VPbkhvdmVyIiwicGF1c2VPbkZvY3VzIiwicGF1c2VPbkRvdHNIb3ZlciIsInJlc3BvbmRUbyIsInJvd3MiLCJydGwiLCJzbGlkZSIsInNsaWRlc1BlclJvdyIsInNwZWVkIiwic3dpcGUiLCJzd2lwZVRvU2xpZGUiLCJ0b3VjaE1vdmUiLCJ0b3VjaFRocmVzaG9sZCIsInVzZUNTUyIsInVzZVRyYW5zZm9ybSIsInZhcmlhYmxlV2lkdGgiLCJ2ZXJ0aWNhbCIsInZlcnRpY2FsU3dpcGluZyIsIndhaXRGb3JBbmltYXRlIiwiekluZGV4IiwiaW5pdGlhbHMiLCJhbmltYXRpbmciLCJkcmFnZ2luZyIsImF1dG9QbGF5VGltZXIiLCJjdXJyZW50RGlyZWN0aW9uIiwiY3VycmVudExlZnQiLCJjdXJyZW50U2xpZGUiLCJkaXJlY3Rpb24iLCIkZG90cyIsImxpc3RXaWR0aCIsImxpc3RIZWlnaHQiLCJsb2FkSW5kZXgiLCIkbmV4dEFycm93IiwiJHByZXZBcnJvdyIsInNjcm9sbGluZyIsInNsaWRlQ291bnQiLCJzbGlkZVdpZHRoIiwiJHNsaWRlVHJhY2siLCIkc2xpZGVzIiwic2xpZGluZyIsInNsaWRlT2Zmc2V0Iiwic3dpcGVMZWZ0Iiwic3dpcGluZyIsIiRsaXN0IiwidG91Y2hPYmplY3QiLCJ0cmFuc2Zvcm1zRW5hYmxlZCIsInVuc2xpY2tlZCIsImV4dGVuZCIsImFjdGl2ZUJyZWFrcG9pbnQiLCJhbmltVHlwZSIsImFuaW1Qcm9wIiwiYnJlYWtwb2ludHMiLCJicmVha3BvaW50U2V0dGluZ3MiLCJjc3NUcmFuc2l0aW9ucyIsImZvY3Vzc2VkIiwiaW50ZXJydXB0ZWQiLCJoaWRkZW4iLCJwYXVzZWQiLCJwb3NpdGlvblByb3AiLCJyb3dDb3VudCIsInNob3VsZENsaWNrIiwiJHNsaWRlciIsIiRzbGlkZXNDYWNoZSIsInRyYW5zZm9ybVR5cGUiLCJ0cmFuc2l0aW9uVHlwZSIsInZpc2liaWxpdHlDaGFuZ2UiLCJ3aW5kb3dXaWR0aCIsIndpbmRvd1RpbWVyIiwiZGF0YSIsIm9yaWdpbmFsU2V0dGluZ3MiLCJtb3pIaWRkZW4iLCJ3ZWJraXRIaWRkZW4iLCJhdXRvUGxheSIsInByb3h5IiwiYXV0b1BsYXlDbGVhciIsImF1dG9QbGF5SXRlcmF0b3IiLCJjaGFuZ2VTbGlkZSIsImNsaWNrSGFuZGxlciIsInNlbGVjdEhhbmRsZXIiLCJzZXRQb3NpdGlvbiIsInN3aXBlSGFuZGxlciIsImRyYWdIYW5kbGVyIiwia2V5SGFuZGxlciIsImluc3RhbmNlVWlkIiwiaHRtbEV4cHIiLCJyZWdpc3RlckJyZWFrcG9pbnRzIiwiaW5pdCIsImFjdGl2YXRlQURBIiwiZmluZCIsImF0dHIiLCJ0YWJpbmRleCIsImFkZFNsaWRlIiwic2xpY2tBZGQiLCJ1bmxvYWQiLCJhcHBlbmRUbyIsImluc2VydEJlZm9yZSIsImVxIiwiaW5zZXJ0QWZ0ZXIiLCJwcmVwZW5kVG8iLCJjaGlsZHJlbiIsImRldGFjaCIsImFwcGVuZCIsImVhY2giLCJyZWluaXQiLCJhbmltYXRlSGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJhbmltYXRlIiwiaGVpZ2h0IiwiYW5pbWF0ZVNsaWRlIiwibGVmdCIsInRvcCIsImFuaW1TdGFydCIsImR1cmF0aW9uIiwic3RlcCIsIk1hdGgiLCJjZWlsIiwiY3NzIiwiY29tcGxldGUiLCJjYWxsIiwiYXBwbHlUcmFuc2l0aW9uIiwiZGlzYWJsZVRyYW5zaXRpb24iLCJnZXROYXZUYXJnZXQiLCJub3QiLCJzbGlkZUhhbmRsZXIiLCJjbGVhckludGVydmFsIiwiYnVpbGRBcnJvd3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicmVtb3ZlQXR0ciIsInRlc3QiLCJidWlsZERvdHMiLCJnZXREb3RDb3VudCIsImZpcnN0IiwiYnVpbGRPdXQiLCJ3cmFwQWxsIiwicGFyZW50Iiwid3JhcCIsInNldHVwSW5maW5pdGUiLCJ1cGRhdGVEb3RzIiwic2V0U2xpZGVDbGFzc2VzIiwiYnVpbGRSb3dzIiwiciIsImwiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZCIsImNyZWF0ZUVsZW1lbnQiLCJhIiwiYyIsImdldCIsImFwcGVuZENoaWxkIiwiZW1wdHkiLCJ3aWR0aCIsImNoZWNrUmVzcG9uc2l2ZSIsImlubmVyV2lkdGgiLCJtaW4iLCJoYXNPd25Qcm9wZXJ0eSIsInVuc2xpY2siLCJyZWZyZXNoIiwidHJpZ2dlciIsImlzIiwiY2xvc2VzdCIsIm1lc3NhZ2UiLCJjaGVja05hdmlnYWJsZSIsImdldE5hdmlnYWJsZUluZGV4ZXMiLCJjbGVhblVwRXZlbnRzIiwib2ZmIiwiaW50ZXJydXB0IiwidmlzaWJpbGl0eSIsImNsZWFuVXBTbGlkZUV2ZW50cyIsIm9yaWVudGF0aW9uQ2hhbmdlIiwicmVzaXplIiwiY2xlYW5VcFJvd3MiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdG9wUHJvcGFnYXRpb24iLCJkZXN0cm95IiwiZmFkZVNsaWRlIiwib3BhY2l0eSIsImZhZGVTbGlkZU91dCIsImZpbHRlclNsaWRlcyIsInNsaWNrRmlsdGVyIiwiZmlsdGVyIiwiZm9jdXNIYW5kbGVyIiwib24iLCJnZXRDdXJyZW50Iiwic2xpY2tDdXJyZW50U2xpZGUiLCJnZXRMZWZ0IiwiZmxvb3IiLCJvZmZzZXRMZWZ0Iiwib3V0ZXJXaWR0aCIsImdldE9wdGlvbiIsInNsaWNrR2V0T3B0aW9uIiwicHVzaCIsImdldFNsaWNrIiwiZ2V0U2xpZGVDb3VudCIsImFicyIsImdvVG8iLCJzbGlja0dvVG8iLCJwYXJzZUludCIsImhhc0NsYXNzIiwic2V0UHJvcHMiLCJzdGFydExvYWQiLCJsb2FkU2xpZGVyIiwiaW5pdGlhbGl6ZUV2ZW50cyIsInVwZGF0ZUFycm93cyIsImluaXRBREEiLCJpbmRleE9mIiwicm9sZSIsImlkIiwiZW5kIiwiaW5pdEFycm93RXZlbnRzIiwiaW5pdERvdEV2ZW50cyIsImluaXRTbGlkZUV2ZW50cyIsImFjdGlvbiIsImluaXRVSSIsInNob3ciLCJ0YXJnZXQiLCJ0YWdOYW1lIiwibWF0Y2giLCJrZXlDb2RlIiwib25sb2FkIiwib25lcnJvciIsInNyYyIsIm1heCIsInNsaWNlIiwicHJvZ3Jlc3NpdmVMYXp5TG9hZCIsIm5leHQiLCJzbGlja05leHQiLCJwYXVzZSIsInNsaWNrUGF1c2UiLCJwbGF5Iiwic2xpY2tQbGF5IiwicG9zdFNsaWRlIiwiZm9jdXMiLCJwcmV2Iiwic2xpY2tQcmV2IiwidHlwZSIsInNwbGljZSIsInNvcnQiLCJjbGVhclRpbWVvdXQiLCJ3aW5kb3dEZWxheSIsInJlbW92ZVNsaWRlIiwic2xpY2tSZW1vdmUiLCJzZXRDU1MiLCJzZXREaW1lbnNpb25zIiwicGFkZGluZyIsInNldEZhZGUiLCJwb3NpdGlvbiIsInJpZ2h0Iiwic2V0SGVpZ2h0Iiwic2V0T3B0aW9uIiwic2xpY2tTZXRPcHRpb24iLCJhcmd1bWVudHMiLCJib2R5IiwiV2Via2l0VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb24iLCJtc1RyYW5zaXRpb24iLCJPVHJhbnNmb3JtIiwicGVyc3BlY3RpdmVQcm9wZXJ0eSIsIndlYmtpdFBlcnNwZWN0aXZlIiwiTW96VHJhbnNmb3JtIiwiTW96UGVyc3BlY3RpdmUiLCJ3ZWJraXRUcmFuc2Zvcm0iLCJtc1RyYW5zZm9ybSIsInRyYW5zZm9ybSIsImNsb25lIiwicGFyZW50cyIsImhpZGUiLCJzd2lwZURpcmVjdGlvbiIsInN0YXJ0WCIsImN1clgiLCJzdGFydFkiLCJjdXJZIiwiYXRhbjIiLCJyb3VuZCIsIlBJIiwic3dpcGVFbmQiLCJzd2lwZUxlbmd0aCIsImVkZ2VIaXQiLCJtaW5Td2lwZSIsImZpbmdlckNvdW50Iiwib3JpZ2luYWxFdmVudCIsInRvdWNoZXMiLCJzd2lwZVN0YXJ0Iiwic3dpcGVNb3ZlIiwicGFnZVgiLCJjbGllbnRYIiwicGFnZVkiLCJjbGllbnRZIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciIsImZuIiwiQXJyYXkiLCJhcHBseSIsImxvemFkIiwib2JzZXJ2ZSIsImdsb2JhbCIsImZhY3RvcnkiLCJpc0lFIiwiZG9jdW1lbnRNb2RlIiwiZGVmYXVsdENvbmZpZyIsInJvb3RNYXJnaW4iLCJ0aHJlc2hvbGQiLCJsb2FkIiwiZWxlbWVudCIsIm5vZGVOYW1lIiwidG9Mb3dlckNhc2UiLCJpbWciLCJnZXRBdHRyaWJ1dGUiLCJhbHQiLCJjaGlsZHMiLCJjaGlsZFNyYyIsInBvc3RlciIsImJhY2tncm91bmRJbWFnZURlbGltaXRlciIsInNwbGl0Iiwiam9pbiIsImltYWdlU2V0TGlua3MiLCJmaXJzdFVybExpbmsiLCJzdWJzdHIiLCJ0b2dnbGUiLCJsb2FkZWQiLCJtYXJrQXNMb2FkZWQiLCJpc0xvYWRlZCIsImdldEVsZW1lbnRzIiwic2VsZWN0b3IiLCJyb290IiwidW5kZWZpbmVkIiwiRWxlbWVudCIsIk5vZGVMaXN0IiwiX09iamVjdCRhc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImludGVyc2VjdGlvblJhdGlvIiwiaXNJbnRlcnNlY3RpbmciLCJ1bm9ic2VydmUiLCJvbkludGVyc2VjdGlvbiIsImVsZW1lbnRzIiwiYmFja2dyb3VuZCIsIl9pIiwidHJpZ2dlckxvYWQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVFDLEdBQWdDLE9BQU9ELFFBQVUsbUJBQXFCRSxRQUFVLGlCQUFtQkEsT0FBT0MsU0FBVyxTQUFVRixHQUFLLGNBQWNBLENBQUcsRUFBSSxTQUFVQSxHQUFLLE9BQU9BLEdBQUssbUJBQXFCQyxRQUFVRCxFQUFFRyxjQUFnQkYsUUFBVUQsSUFBTUMsT0FBT0csVUFBWSxnQkFBa0JKLENBQUcsRUFBR0QsUUFBUUMsRUFBSSxDQUs3VCxTQUFTSyxZQUNQLElBQU1DLEVBQ0tDLFNBQVNDLGNBQWMsK0JBRDVCRixFQUVHQyxTQUFTRSxpQkFBaUIsOEJBRzlCSCxHQUFrQkEsRUFB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Q3JCLEVBQVNtQixFQUFTRSxNQUlsQlgsRUFDRkEsRUFBU3JDLFFBQVE4QyxFQUFTRSxLQUk1QnhDLEVBQUtzQyxFQUFTRSxJQUNkdEIsRUFBYW9CLEVBQVNFLElBQ3RCdkIsRUFBT3FCLEVBQVNFLEtBRXBCLEVBQ0FDLFlBQWEsU0FBcUJ4QyxHQUM1QmtCLEVBQVNsQixLQUliRCxFQUFLQyxHQUNMaUIsRUFBYWpCLEdBQ2JnQixFQUFPaEIsR0FDVCxFQUVBNEIsU0FBVUEsRUFFZCxDQUdGIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgc2xpZGVIZXJvKCk7XG4gIHNsaWRlU29sdWN0aW9ucygpO1xufSk7XG5cbmZ1bmN0aW9uIHNsaWRlSGVybygpIHtcbiAgY29uc3Qgc2xpZGVyID0ge1xuICAgIHdyYXBwZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ob21lU2xpZGVyPSd3cmFwcGVyJ11cIiksXG4gICAgaXRlbnM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ob21lU2xpZGVyPSdzbGlkZSddXCIpLFxuICB9O1xuXG4gIGlmICghc2xpZGVyLndyYXBwZXIgfHwgc2xpZGVyLml0ZW5zLmxlbmd0aCA8IDIpIHJldHVybjtcblxuICAkKFwiW2RhdGEtaG9tZVNsaWRlcj0nd3JhcHBlciddXCIpLnNsaWNrKHtcbiAgICBkb3RzOiB0cnVlLFxuICAgIGluZmluaXRlOiBmYWxzZSxcbiAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgbGF6eUxvYWQ6IFwib25kZW1hbmRcIixcbiAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICBhdXRvcGxheVNwZWVkOiA1MDAwLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gc2xpZGVTb2x1Y3Rpb25zKCkge1xuICBjb25zdCBzbGlkZXIgPSB7XG4gICAgd3JhcHBlcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWNvdXJzZXNTbGlkZXI9J3dyYXBwZXInXVwiKSxcbiAgICBpdGVuczogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNvdXJzZXNTbGlkZXI9J3NsaWRlJ11cIiksXG4gIH07XG5cbiAgaWYgKCFzbGlkZXIud3JhcHBlciB8fCBzbGlkZXIuaXRlbnMubGVuZ3RoIDwgMikgcmV0dXJuO1xuXG4gICQoXCJbZGF0YS1jb3Vyc2VzU2xpZGVyPSd3cmFwcGVyJ11cIikuc2xpY2soe1xuICAgIGRvdHM6IGZhbHNlLFxuICAgIGluZmluaXRlOiBmYWxzZSxcbiAgICBzbGlkZXNUb1Nob3c6IDQsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgbGF6eUxvYWQ6IFwib25kZW1hbmRcIixcbiAgICByZXNwb25zaXZlOiBbXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDkwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDMsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDYwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDIsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDUwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgXVxuICB9KTtcbn1cblxuIShmdW5jdGlvbiAoaSkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgXCJmdW5jdGlvblwiID09IHR5cGVvZiBkZWZpbmUgJiYgZGVmaW5lLmFtZFxuICAgID8gZGVmaW5lKFtcImpxdWVyeVwiXSwgaSlcbiAgICA6IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIGV4cG9ydHNcbiAgICA/IChtb2R1bGUuZXhwb3J0cyA9IGkocmVxdWlyZShcImpxdWVyeVwiKSkpXG4gICAgOiBpKGpRdWVyeSk7XG59KShmdW5jdGlvbiAoaSkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIGUgPSB3aW5kb3cuU2xpY2sgfHwge307XG4gICgoZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGUgPSAwO1xuICAgIHJldHVybiBmdW5jdGlvbiAodCwgbykge1xuICAgICAgdmFyIHMsXG4gICAgICAgIG4gPSB0aGlzO1xuICAgICAgKG4uZGVmYXVsdHMgPSB7XG4gICAgICAgIGFjY2Vzc2liaWxpdHk6ICEwLFxuICAgICAgICBhZGFwdGl2ZUhlaWdodDogITEsXG4gICAgICAgIGFwcGVuZEFycm93czogaSh0KSxcbiAgICAgICAgYXBwZW5kRG90czogaSh0KSxcbiAgICAgICAgYXJyb3dzOiAhMCxcbiAgICAgICAgYXNOYXZGb3I6IG51bGwsXG4gICAgICAgIHByZXZBcnJvdzpcbiAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cInNsaWNrLXByZXZcIiBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIiB0eXBlPVwiYnV0dG9uXCI+UHJldmlvdXM8L2J1dHRvbj4nLFxuICAgICAgICBuZXh0QXJyb3c6XG4gICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJzbGljay1uZXh0XCIgYXJpYS1sYWJlbD1cIk5leHRcIiB0eXBlPVwiYnV0dG9uXCI+TmV4dDwvYnV0dG9uPicsXG4gICAgICAgIGF1dG9wbGF5OiAhMSxcbiAgICAgICAgYXV0b3BsYXlTcGVlZDogM2UzLFxuICAgICAgICBjZW50ZXJNb2RlOiAhMSxcbiAgICAgICAgY2VudGVyUGFkZGluZzogXCI1MHB4XCIsXG4gICAgICAgIGNzc0Vhc2U6IFwiZWFzZVwiLFxuICAgICAgICBjdXN0b21QYWdpbmc6IGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICAgICAgcmV0dXJuIGkoJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIC8+JykudGV4dCh0ICsgMSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRvdHM6ICExLFxuICAgICAgICBkb3RzQ2xhc3M6IFwic2xpY2stZG90c1wiLFxuICAgICAgICBkcmFnZ2FibGU6ICEwLFxuICAgICAgICBlYXNpbmc6IFwibGluZWFyXCIsXG4gICAgICAgIGVkZ2VGcmljdGlvbjogMC4zNSxcbiAgICAgICAgZmFkZTogITEsXG4gICAgICAgIGZvY3VzT25TZWxlY3Q6ICExLFxuICAgICAgICBmb2N1c09uQ2hhbmdlOiAhMSxcbiAgICAgICAgaW5maW5pdGU6ICEwLFxuICAgICAgICBpbml0aWFsU2xpZGU6IDAsXG4gICAgICAgIGxhenlMb2FkOiBcIm9uZGVtYW5kXCIsXG4gICAgICAgIG1vYmlsZUZpcnN0OiAhMSxcbiAgICAgICAgcGF1c2VPbkhvdmVyOiAhMCxcbiAgICAgICAgcGF1c2VPbkZvY3VzOiAhMCxcbiAgICAgICAgcGF1c2VPbkRvdHNIb3ZlcjogITEsXG4gICAgICAgIHJlc3BvbmRUbzogXCJ3aW5kb3dcIixcbiAgICAgICAgcmVzcG9uc2l2ZTogbnVsbCxcbiAgICAgICAgcm93czogMSxcbiAgICAgICAgcnRsOiAhMSxcbiAgICAgICAgc2xpZGU6IFwiXCIsXG4gICAgICAgIHNsaWRlc1BlclJvdzogMSxcbiAgICAgICAgc2xpZGVzVG9TaG93OiAxLFxuICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICAgICAgc3BlZWQ6IDUwMCxcbiAgICAgICAgc3dpcGU6ICEwLFxuICAgICAgICBzd2lwZVRvU2xpZGU6ICExLFxuICAgICAgICB0b3VjaE1vdmU6ICEwLFxuICAgICAgICB0b3VjaFRocmVzaG9sZDogNSxcbiAgICAgICAgdXNlQ1NTOiAhMCxcbiAgICAgICAgdXNlVHJhbnNmb3JtOiAhMCxcbiAgICAgICAgdmFyaWFibGVXaWR0aDogITEsXG4gICAgICAgIHZlcnRpY2FsOiAhMSxcbiAgICAgICAgdmVydGljYWxTd2lwaW5nOiAhMSxcbiAgICAgICAgd2FpdEZvckFuaW1hdGU6ICEwLFxuICAgICAgICB6SW5kZXg6IDFlMyxcbiAgICAgIH0pLFxuICAgICAgICAobi5pbml0aWFscyA9IHtcbiAgICAgICAgICBhbmltYXRpbmc6ICExLFxuICAgICAgICAgIGRyYWdnaW5nOiAhMSxcbiAgICAgICAgICBhdXRvUGxheVRpbWVyOiBudWxsLFxuICAgICAgICAgIGN1cnJlbnREaXJlY3Rpb246IDAsXG4gICAgICAgICAgY3VycmVudExlZnQ6IG51bGwsXG4gICAgICAgICAgY3VycmVudFNsaWRlOiAwLFxuICAgICAgICAgIGRpcmVjdGlvbjogMSxcbiAgICAgICAgICAkZG90czogbnVsbCxcbiAgICAgICAgICBsaXN0V2lkdGg6IG51bGwsXG4gICAgICAgICAgbGlzdEhlaWdodDogbnVsbCxcbiAgICAgICAgICBsb2FkSW5kZXg6IDAsXG4gICAgICAgICAgJG5leHRBcnJvdzogbnVsbCxcbiAgICAgICAgICAkcHJldkFycm93OiBudWxsLFxuICAgICAgICAgIHNjcm9sbGluZzogITEsXG4gICAgICAgICAgc2xpZGVDb3VudDogbnVsbCxcbiAgICAgICAgICBzbGlkZVdpZHRoOiBudWxsLFxuICAgICAgICAgICRzbGlkZVRyYWNrOiBudWxsLFxuICAgICAgICAgICRzbGlkZXM6IG51bGwsXG4gICAgICAgICAgc2xpZGluZzogITEsXG4gICAgICAgICAgc2xpZGVPZmZzZXQ6IDAsXG4gICAgICAgICAgc3dpcGVMZWZ0OiBudWxsLFxuICAgICAgICAgIHN3aXBpbmc6ICExLFxuICAgICAgICAgICRsaXN0OiBudWxsLFxuICAgICAgICAgIHRvdWNoT2JqZWN0OiB7fSxcbiAgICAgICAgICB0cmFuc2Zvcm1zRW5hYmxlZDogITEsXG4gICAgICAgICAgdW5zbGlja2VkOiAhMSxcbiAgICAgICAgfSksXG4gICAgICAgIGkuZXh0ZW5kKG4sIG4uaW5pdGlhbHMpLFxuICAgICAgICAobi5hY3RpdmVCcmVha3BvaW50ID0gbnVsbCksXG4gICAgICAgIChuLmFuaW1UeXBlID0gbnVsbCksXG4gICAgICAgIChuLmFuaW1Qcm9wID0gbnVsbCksXG4gICAgICAgIChuLmJyZWFrcG9pbnRzID0gW10pLFxuICAgICAgICAobi5icmVha3BvaW50U2V0dGluZ3MgPSBbXSksXG4gICAgICAgIChuLmNzc1RyYW5zaXRpb25zID0gITEpLFxuICAgICAgICAobi5mb2N1c3NlZCA9ICExKSxcbiAgICAgICAgKG4uaW50ZXJydXB0ZWQgPSAhMSksXG4gICAgICAgIChuLmhpZGRlbiA9IFwiaGlkZGVuXCIpLFxuICAgICAgICAobi5wYXVzZWQgPSAhMCksXG4gICAgICAgIChuLnBvc2l0aW9uUHJvcCA9IG51bGwpLFxuICAgICAgICAobi5yZXNwb25kVG8gPSBudWxsKSxcbiAgICAgICAgKG4ucm93Q291bnQgPSAxKSxcbiAgICAgICAgKG4uc2hvdWxkQ2xpY2sgPSAhMCksXG4gICAgICAgIChuLiRzbGlkZXIgPSBpKHQpKSxcbiAgICAgICAgKG4uJHNsaWRlc0NhY2hlID0gbnVsbCksXG4gICAgICAgIChuLnRyYW5zZm9ybVR5cGUgPSBudWxsKSxcbiAgICAgICAgKG4udHJhbnNpdGlvblR5cGUgPSBudWxsKSxcbiAgICAgICAgKG4udmlzaWJpbGl0eUNoYW5nZSA9IFwidmlzaWJpbGl0eWNoYW5nZVwiKSxcbiAgICAgICAgKG4ud2luZG93V2lkdGggPSAwKSxcbiAgICAgICAgKG4ud2luZG93VGltZXIgPSBudWxsKSxcbiAgICAgICAgKHMgPSBpKHQpLmRhdGEoXCJzbGlja1wiKSB8fCB7fSksXG4gICAgICAgIChuLm9wdGlvbnMgPSBpLmV4dGVuZCh7fSwgbi5kZWZhdWx0cywgbywgcykpLFxuICAgICAgICAobi5jdXJyZW50U2xpZGUgPSBuLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSxcbiAgICAgICAgKG4ub3JpZ2luYWxTZXR0aW5ncyA9IG4ub3B0aW9ucyksXG4gICAgICAgIHZvaWQgMCAhPT0gZG9jdW1lbnQubW96SGlkZGVuXG4gICAgICAgICAgPyAoKG4uaGlkZGVuID0gXCJtb3pIaWRkZW5cIiksXG4gICAgICAgICAgICAobi52aXNpYmlsaXR5Q2hhbmdlID0gXCJtb3p2aXNpYmlsaXR5Y2hhbmdlXCIpKVxuICAgICAgICAgIDogdm9pZCAwICE9PSBkb2N1bWVudC53ZWJraXRIaWRkZW4gJiZcbiAgICAgICAgICAgICgobi5oaWRkZW4gPSBcIndlYmtpdEhpZGRlblwiKSxcbiAgICAgICAgICAgIChuLnZpc2liaWxpdHlDaGFuZ2UgPSBcIndlYmtpdHZpc2liaWxpdHljaGFuZ2VcIikpLFxuICAgICAgICAobi5hdXRvUGxheSA9IGkucHJveHkobi5hdXRvUGxheSwgbikpLFxuICAgICAgICAobi5hdXRvUGxheUNsZWFyID0gaS5wcm94eShuLmF1dG9QbGF5Q2xlYXIsIG4pKSxcbiAgICAgICAgKG4uYXV0b1BsYXlJdGVyYXRvciA9IGkucHJveHkobi5hdXRvUGxheUl0ZXJhdG9yLCBuKSksXG4gICAgICAgIChuLmNoYW5nZVNsaWRlID0gaS5wcm94eShuLmNoYW5nZVNsaWRlLCBuKSksXG4gICAgICAgIChuLmNsaWNrSGFuZGxlciA9IGkucHJveHkobi5jbGlja0hhbmRsZXIsIG4pKSxcbiAgICAgICAgKG4uc2VsZWN0SGFuZGxlciA9IGkucHJveHkobi5zZWxlY3RIYW5kbGVyLCBuKSksXG4gICAgICAgIChuLnNldFBvc2l0aW9uID0gaS5wcm94eShuLnNldFBvc2l0aW9uLCBuKSksXG4gICAgICAgIChuLnN3aXBlSGFuZGxlciA9IGkucHJveHkobi5zd2lwZUhhbmRsZXIsIG4pKSxcbiAgICAgICAgKG4uZHJhZ0hhbmRsZXIgPSBpLnByb3h5KG4uZHJhZ0hhbmRsZXIsIG4pKSxcbiAgICAgICAgKG4ua2V5SGFuZGxlciA9IGkucHJveHkobi5rZXlIYW5kbGVyLCBuKSksXG4gICAgICAgIChuLmluc3RhbmNlVWlkID0gZSsrKSxcbiAgICAgICAgKG4uaHRtbEV4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSopJC8pLFxuICAgICAgICBuLnJlZ2lzdGVyQnJlYWtwb2ludHMoKSxcbiAgICAgICAgbi5pbml0KCEwKTtcbiAgICB9O1xuICB9KSgpKS5wcm90b3R5cGUuYWN0aXZhdGVBREEgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy4kc2xpZGVUcmFja1xuICAgICAgLmZpbmQoXCIuc2xpY2stYWN0aXZlXCIpXG4gICAgICAuYXR0cih7IFwiYXJpYS1oaWRkZW5cIjogXCJmYWxzZVwiIH0pXG4gICAgICAuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKVxuICAgICAgLmF0dHIoeyB0YWJpbmRleDogXCIwXCIgfSk7XG4gIH0pLFxuICAgIChlLnByb3RvdHlwZS5hZGRTbGlkZSA9IGUucHJvdG90eXBlLnNsaWNrQWRkID1cbiAgICAgIGZ1bmN0aW9uIChlLCB0LCBvKSB7XG4gICAgICAgIHZhciBzID0gdGhpcztcbiAgICAgICAgaWYgKFwiYm9vbGVhblwiID09IHR5cGVvZiB0KSAobyA9IHQpLCAodCA9IG51bGwpO1xuICAgICAgICBlbHNlIGlmICh0IDwgMCB8fCB0ID49IHMuc2xpZGVDb3VudCkgcmV0dXJuICExO1xuICAgICAgICBzLnVubG9hZCgpLFxuICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIHRcbiAgICAgICAgICAgID8gMCA9PT0gdCAmJiAwID09PSBzLiRzbGlkZXMubGVuZ3RoXG4gICAgICAgICAgICAgID8gaShlKS5hcHBlbmRUbyhzLiRzbGlkZVRyYWNrKVxuICAgICAgICAgICAgICA6IG9cbiAgICAgICAgICAgICAgPyBpKGUpLmluc2VydEJlZm9yZShzLiRzbGlkZXMuZXEodCkpXG4gICAgICAgICAgICAgIDogaShlKS5pbnNlcnRBZnRlcihzLiRzbGlkZXMuZXEodCkpXG4gICAgICAgICAgICA6ICEwID09PSBvXG4gICAgICAgICAgICA/IGkoZSkucHJlcGVuZFRvKHMuJHNsaWRlVHJhY2spXG4gICAgICAgICAgICA6IGkoZSkuYXBwZW5kVG8ocy4kc2xpZGVUcmFjayksXG4gICAgICAgICAgKHMuJHNsaWRlcyA9IHMuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKSksXG4gICAgICAgICAgcy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLFxuICAgICAgICAgIHMuJHNsaWRlVHJhY2suYXBwZW5kKHMuJHNsaWRlcyksXG4gICAgICAgICAgcy4kc2xpZGVzLmVhY2goZnVuY3Rpb24gKGUsIHQpIHtcbiAgICAgICAgICAgIGkodCkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiwgZSk7XG4gICAgICAgICAgfSksXG4gICAgICAgICAgKHMuJHNsaWRlc0NhY2hlID0gcy4kc2xpZGVzKSxcbiAgICAgICAgICBzLnJlaW5pdCgpO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLmFuaW1hdGVIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpZiAoXG4gICAgICAgIDEgPT09IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgITAgPT09IGkub3B0aW9ucy5hZGFwdGl2ZUhlaWdodCAmJlxuICAgICAgICAhMSA9PT0gaS5vcHRpb25zLnZlcnRpY2FsXG4gICAgICApIHtcbiAgICAgICAgdmFyIGUgPSBpLiRzbGlkZXMuZXEoaS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTtcbiAgICAgICAgaS4kbGlzdC5hbmltYXRlKHsgaGVpZ2h0OiBlIH0sIGkub3B0aW9ucy5zcGVlZCk7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmFuaW1hdGVTbGlkZSA9IGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICB2YXIgbyA9IHt9LFxuICAgICAgICBzID0gdGhpcztcbiAgICAgIHMuYW5pbWF0ZUhlaWdodCgpLFxuICAgICAgICAhMCA9PT0gcy5vcHRpb25zLnJ0bCAmJiAhMSA9PT0gcy5vcHRpb25zLnZlcnRpY2FsICYmIChlID0gLWUpLFxuICAgICAgICAhMSA9PT0gcy50cmFuc2Zvcm1zRW5hYmxlZFxuICAgICAgICAgID8gITEgPT09IHMub3B0aW9ucy52ZXJ0aWNhbFxuICAgICAgICAgICAgPyBzLiRzbGlkZVRyYWNrLmFuaW1hdGUoXG4gICAgICAgICAgICAgICAgeyBsZWZ0OiBlIH0sXG4gICAgICAgICAgICAgICAgcy5vcHRpb25zLnNwZWVkLFxuICAgICAgICAgICAgICAgIHMub3B0aW9ucy5lYXNpbmcsXG4gICAgICAgICAgICAgICAgdFxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICA6IHMuJHNsaWRlVHJhY2suYW5pbWF0ZShcbiAgICAgICAgICAgICAgICB7IHRvcDogZSB9LFxuICAgICAgICAgICAgICAgIHMub3B0aW9ucy5zcGVlZCxcbiAgICAgICAgICAgICAgICBzLm9wdGlvbnMuZWFzaW5nLFxuICAgICAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgIDogITEgPT09IHMuY3NzVHJhbnNpdGlvbnNcbiAgICAgICAgICA/ICghMCA9PT0gcy5vcHRpb25zLnJ0bCAmJiAocy5jdXJyZW50TGVmdCA9IC1zLmN1cnJlbnRMZWZ0KSxcbiAgICAgICAgICAgIGkoeyBhbmltU3RhcnQ6IHMuY3VycmVudExlZnQgfSkuYW5pbWF0ZShcbiAgICAgICAgICAgICAgeyBhbmltU3RhcnQ6IGUgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBzLm9wdGlvbnMuc3BlZWQsXG4gICAgICAgICAgICAgICAgZWFzaW5nOiBzLm9wdGlvbnMuZWFzaW5nLFxuICAgICAgICAgICAgICAgIHN0ZXA6IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICAgICAgICAoaSA9IE1hdGguY2VpbChpKSksXG4gICAgICAgICAgICAgICAgICAgICExID09PSBzLm9wdGlvbnMudmVydGljYWxcbiAgICAgICAgICAgICAgICAgICAgICA/ICgob1tzLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlKFwiICsgaSArIFwicHgsIDBweClcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBzLiRzbGlkZVRyYWNrLmNzcyhvKSlcbiAgICAgICAgICAgICAgICAgICAgICA6ICgob1tzLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlKDBweCxcIiArIGkgKyBcInB4KVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuJHNsaWRlVHJhY2suY3NzKG8pKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICB0ICYmIHQuY2FsbCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICkpXG4gICAgICAgICAgOiAocy5hcHBseVRyYW5zaXRpb24oKSxcbiAgICAgICAgICAgIChlID0gTWF0aC5jZWlsKGUpKSxcbiAgICAgICAgICAgICExID09PSBzLm9wdGlvbnMudmVydGljYWxcbiAgICAgICAgICAgICAgPyAob1tzLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlM2QoXCIgKyBlICsgXCJweCwgMHB4LCAwcHgpXCIpXG4gICAgICAgICAgICAgIDogKG9bcy5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZTNkKDBweCxcIiArIGUgKyBcInB4LCAwcHgpXCIpLFxuICAgICAgICAgICAgcy4kc2xpZGVUcmFjay5jc3MobyksXG4gICAgICAgICAgICB0ICYmXG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHMuZGlzYWJsZVRyYW5zaXRpb24oKSwgdC5jYWxsKCk7XG4gICAgICAgICAgICAgIH0sIHMub3B0aW9ucy5zcGVlZCkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXROYXZUYXJnZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXMsXG4gICAgICAgIHQgPSBlLm9wdGlvbnMuYXNOYXZGb3I7XG4gICAgICByZXR1cm4gdCAmJiBudWxsICE9PSB0ICYmICh0ID0gaSh0KS5ub3QoZS4kc2xpZGVyKSksIHQ7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmFzTmF2Rm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciB0ID0gdGhpcy5nZXROYXZUYXJnZXQoKTtcbiAgICAgIG51bGwgIT09IHQgJiZcbiAgICAgICAgXCJvYmplY3RcIiA9PSB0eXBlb2YgdCAmJlxuICAgICAgICB0LmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciB0ID0gaSh0aGlzKS5zbGljayhcImdldFNsaWNrXCIpO1xuICAgICAgICAgIHQudW5zbGlja2VkIHx8IHQuc2xpZGVIYW5kbGVyKGUsICEwKTtcbiAgICAgICAgfSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmFwcGx5VHJhbnNpdGlvbiA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSA9IHRoaXMsXG4gICAgICAgIHQgPSB7fTtcbiAgICAgICExID09PSBlLm9wdGlvbnMuZmFkZVxuICAgICAgICA/ICh0W2UudHJhbnNpdGlvblR5cGVdID1cbiAgICAgICAgICAgIGUudHJhbnNmb3JtVHlwZSArIFwiIFwiICsgZS5vcHRpb25zLnNwZWVkICsgXCJtcyBcIiArIGUub3B0aW9ucy5jc3NFYXNlKVxuICAgICAgICA6ICh0W2UudHJhbnNpdGlvblR5cGVdID1cbiAgICAgICAgICAgIFwib3BhY2l0eSBcIiArIGUub3B0aW9ucy5zcGVlZCArIFwibXMgXCIgKyBlLm9wdGlvbnMuY3NzRWFzZSksXG4gICAgICAgICExID09PSBlLm9wdGlvbnMuZmFkZSA/IGUuJHNsaWRlVHJhY2suY3NzKHQpIDogZS4kc2xpZGVzLmVxKGkpLmNzcyh0KTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYXV0b1BsYXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpLmF1dG9QbGF5Q2xlYXIoKSxcbiAgICAgICAgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgIChpLmF1dG9QbGF5VGltZXIgPSBzZXRJbnRlcnZhbChcbiAgICAgICAgICAgIGkuYXV0b1BsYXlJdGVyYXRvcixcbiAgICAgICAgICAgIGkub3B0aW9ucy5hdXRvcGxheVNwZWVkXG4gICAgICAgICAgKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmF1dG9QbGF5Q2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICBpLmF1dG9QbGF5VGltZXIgJiYgY2xlYXJJbnRlcnZhbChpLmF1dG9QbGF5VGltZXIpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzLFxuICAgICAgICBlID0gaS5jdXJyZW50U2xpZGUgKyBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICBpLnBhdXNlZCB8fFxuICAgICAgICBpLmludGVycnVwdGVkIHx8XG4gICAgICAgIGkuZm9jdXNzZWQgfHxcbiAgICAgICAgKCExID09PSBpLm9wdGlvbnMuaW5maW5pdGUgJiZcbiAgICAgICAgICAoMSA9PT0gaS5kaXJlY3Rpb24gJiYgaS5jdXJyZW50U2xpZGUgKyAxID09PSBpLnNsaWRlQ291bnQgLSAxXG4gICAgICAgICAgICA/IChpLmRpcmVjdGlvbiA9IDApXG4gICAgICAgICAgICA6IDAgPT09IGkuZGlyZWN0aW9uICYmXG4gICAgICAgICAgICAgICgoZSA9IGkuY3VycmVudFNsaWRlIC0gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSxcbiAgICAgICAgICAgICAgaS5jdXJyZW50U2xpZGUgLSAxID09IDAgJiYgKGkuZGlyZWN0aW9uID0gMSkpKSxcbiAgICAgICAgaS5zbGlkZUhhbmRsZXIoZSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5idWlsZEFycm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICEwID09PSBlLm9wdGlvbnMuYXJyb3dzICYmXG4gICAgICAgICgoZS4kcHJldkFycm93ID0gaShlLm9wdGlvbnMucHJldkFycm93KS5hZGRDbGFzcyhcInNsaWNrLWFycm93XCIpKSxcbiAgICAgICAgKGUuJG5leHRBcnJvdyA9IGkoZS5vcHRpb25zLm5leHRBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1hcnJvd1wiKSksXG4gICAgICAgIGUuc2xpZGVDb3VudCA+IGUub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICA/IChlLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXhcIiksXG4gICAgICAgICAgICBlLiRuZXh0QXJyb3dcbiAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXhcIiksXG4gICAgICAgICAgICBlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLnByZXZBcnJvdykgJiZcbiAgICAgICAgICAgICAgZS4kcHJldkFycm93LnByZXBlbmRUbyhlLm9wdGlvbnMuYXBwZW5kQXJyb3dzKSxcbiAgICAgICAgICAgIGUuaHRtbEV4cHIudGVzdChlLm9wdGlvbnMubmV4dEFycm93KSAmJlxuICAgICAgICAgICAgICBlLiRuZXh0QXJyb3cuYXBwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksXG4gICAgICAgICAgICAhMCAhPT0gZS5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgICAgIGUuJHByZXZBcnJvd1xuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwidHJ1ZVwiKSlcbiAgICAgICAgICA6IGUuJHByZXZBcnJvd1xuICAgICAgICAgICAgICAuYWRkKGUuJG5leHRBcnJvdylcbiAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgICAgIC5hdHRyKHsgXCJhcmlhLWRpc2FibGVkXCI6IFwidHJ1ZVwiLCB0YWJpbmRleDogXCItMVwiIH0pKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYnVpbGREb3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8gPSB0aGlzO1xuICAgICAgaWYgKCEwID09PSBvLm9wdGlvbnMuZG90cykge1xuICAgICAgICBmb3IgKFxuICAgICAgICAgIG8uJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLWRvdHRlZFwiKSxcbiAgICAgICAgICAgIHQgPSBpKFwiPHVsIC8+XCIpLmFkZENsYXNzKG8ub3B0aW9ucy5kb3RzQ2xhc3MpLFxuICAgICAgICAgICAgZSA9IDA7XG4gICAgICAgICAgZSA8PSBvLmdldERvdENvdW50KCk7XG4gICAgICAgICAgZSArPSAxXG4gICAgICAgIClcbiAgICAgICAgICB0LmFwcGVuZChpKFwiPGxpIC8+XCIpLmFwcGVuZChvLm9wdGlvbnMuY3VzdG9tUGFnaW5nLmNhbGwodGhpcywgbywgZSkpKTtcbiAgICAgICAgKG8uJGRvdHMgPSB0LmFwcGVuZFRvKG8ub3B0aW9ucy5hcHBlbmREb3RzKSksXG4gICAgICAgICAgby4kZG90cy5maW5kKFwibGlcIikuZmlyc3QoKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYnVpbGRPdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAoZS4kc2xpZGVzID0gZS4kc2xpZGVyXG4gICAgICAgIC5jaGlsZHJlbihlLm9wdGlvbnMuc2xpZGUgKyBcIjpub3QoLnNsaWNrLWNsb25lZClcIilcbiAgICAgICAgLmFkZENsYXNzKFwic2xpY2stc2xpZGVcIikpLFxuICAgICAgICAoZS5zbGlkZUNvdW50ID0gZS4kc2xpZGVzLmxlbmd0aCksXG4gICAgICAgIGUuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgICAgICAgaSh0KVxuICAgICAgICAgICAgLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsIGUpXG4gICAgICAgICAgICAuZGF0YShcIm9yaWdpbmFsU3R5bGluZ1wiLCBpKHQpLmF0dHIoXCJzdHlsZVwiKSB8fCBcIlwiKTtcbiAgICAgICAgfSksXG4gICAgICAgIGUuJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLXNsaWRlclwiKSxcbiAgICAgICAgKGUuJHNsaWRlVHJhY2sgPVxuICAgICAgICAgIDAgPT09IGUuc2xpZGVDb3VudFxuICAgICAgICAgICAgPyBpKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykuYXBwZW5kVG8oZS4kc2xpZGVyKVxuICAgICAgICAgICAgOiBlLiRzbGlkZXMud3JhcEFsbCgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLnBhcmVudCgpKSxcbiAgICAgICAgKGUuJGxpc3QgPSBlLiRzbGlkZVRyYWNrLndyYXAoJzxkaXYgY2xhc3M9XCJzbGljay1saXN0XCIvPicpLnBhcmVudCgpKSxcbiAgICAgICAgZS4kc2xpZGVUcmFjay5jc3MoXCJvcGFjaXR5XCIsIDApLFxuICAgICAgICAoITAgIT09IGUub3B0aW9ucy5jZW50ZXJNb2RlICYmICEwICE9PSBlLm9wdGlvbnMuc3dpcGVUb1NsaWRlKSB8fFxuICAgICAgICAgIChlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPSAxKSxcbiAgICAgICAgaShcImltZ1tkYXRhLWxhenldXCIsIGUuJHNsaWRlcikubm90KFwiW3NyY11cIikuYWRkQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLFxuICAgICAgICBlLnNldHVwSW5maW5pdGUoKSxcbiAgICAgICAgZS5idWlsZEFycm93cygpLFxuICAgICAgICBlLmJ1aWxkRG90cygpLFxuICAgICAgICBlLnVwZGF0ZURvdHMoKSxcbiAgICAgICAgZS5zZXRTbGlkZUNsYXNzZXMoXG4gICAgICAgICAgXCJudW1iZXJcIiA9PSB0eXBlb2YgZS5jdXJyZW50U2xpZGUgPyBlLmN1cnJlbnRTbGlkZSA6IDBcbiAgICAgICAgKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5kcmFnZ2FibGUgJiYgZS4kbGlzdC5hZGRDbGFzcyhcImRyYWdnYWJsZVwiKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuYnVpbGRSb3dzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGksXG4gICAgICAgIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8sXG4gICAgICAgIHMsXG4gICAgICAgIG4sXG4gICAgICAgIHIsXG4gICAgICAgIGwgPSB0aGlzO1xuICAgICAgaWYgKFxuICAgICAgICAoKG8gPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpLFxuICAgICAgICAobiA9IGwuJHNsaWRlci5jaGlsZHJlbigpKSxcbiAgICAgICAgbC5vcHRpb25zLnJvd3MgPiAxKVxuICAgICAgKSB7XG4gICAgICAgIGZvciAoXG4gICAgICAgICAgciA9IGwub3B0aW9ucy5zbGlkZXNQZXJSb3cgKiBsLm9wdGlvbnMucm93cyxcbiAgICAgICAgICAgIHMgPSBNYXRoLmNlaWwobi5sZW5ndGggLyByKSxcbiAgICAgICAgICAgIGkgPSAwO1xuICAgICAgICAgIGkgPCBzO1xuICAgICAgICAgIGkrK1xuICAgICAgICApIHtcbiAgICAgICAgICB2YXIgZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgZm9yIChlID0gMDsgZSA8IGwub3B0aW9ucy5yb3dzOyBlKyspIHtcbiAgICAgICAgICAgIHZhciBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGZvciAodCA9IDA7IHQgPCBsLm9wdGlvbnMuc2xpZGVzUGVyUm93OyB0KyspIHtcbiAgICAgICAgICAgICAgdmFyIGMgPSBpICogciArIChlICogbC5vcHRpb25zLnNsaWRlc1BlclJvdyArIHQpO1xuICAgICAgICAgICAgICBuLmdldChjKSAmJiBhLmFwcGVuZENoaWxkKG4uZ2V0KGMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGQuYXBwZW5kQ2hpbGQoYSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG8uYXBwZW5kQ2hpbGQoZCk7XG4gICAgICAgIH1cbiAgICAgICAgbC4kc2xpZGVyLmVtcHR5KCkuYXBwZW5kKG8pLFxuICAgICAgICAgIGwuJHNsaWRlclxuICAgICAgICAgICAgLmNoaWxkcmVuKClcbiAgICAgICAgICAgIC5jaGlsZHJlbigpXG4gICAgICAgICAgICAuY2hpbGRyZW4oKVxuICAgICAgICAgICAgLmNzcyh7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAgLyBsLm9wdGlvbnMuc2xpZGVzUGVyUm93ICsgXCIlXCIsXG4gICAgICAgICAgICAgIGRpc3BsYXk6IFwiaW5saW5lLWJsb2NrXCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuY2hlY2tSZXNwb25zaXZlID0gZnVuY3Rpb24gKGUsIHQpIHtcbiAgICAgIHZhciBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByID0gdGhpcyxcbiAgICAgICAgbCA9ICExLFxuICAgICAgICBkID0gci4kc2xpZGVyLndpZHRoKCksXG4gICAgICAgIGEgPSB3aW5kb3cuaW5uZXJXaWR0aCB8fCBpKHdpbmRvdykud2lkdGgoKTtcbiAgICAgIGlmIChcbiAgICAgICAgKFwid2luZG93XCIgPT09IHIucmVzcG9uZFRvXG4gICAgICAgICAgPyAobiA9IGEpXG4gICAgICAgICAgOiBcInNsaWRlclwiID09PSByLnJlc3BvbmRUb1xuICAgICAgICAgID8gKG4gPSBkKVxuICAgICAgICAgIDogXCJtaW5cIiA9PT0gci5yZXNwb25kVG8gJiYgKG4gPSBNYXRoLm1pbihhLCBkKSksXG4gICAgICAgIHIub3B0aW9ucy5yZXNwb25zaXZlICYmXG4gICAgICAgICAgci5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoICYmXG4gICAgICAgICAgbnVsbCAhPT0gci5vcHRpb25zLnJlc3BvbnNpdmUpXG4gICAgICApIHtcbiAgICAgICAgcyA9IG51bGw7XG4gICAgICAgIGZvciAobyBpbiByLmJyZWFrcG9pbnRzKVxuICAgICAgICAgIHIuYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkobykgJiZcbiAgICAgICAgICAgICghMSA9PT0gci5vcmlnaW5hbFNldHRpbmdzLm1vYmlsZUZpcnN0XG4gICAgICAgICAgICAgID8gbiA8IHIuYnJlYWtwb2ludHNbb10gJiYgKHMgPSByLmJyZWFrcG9pbnRzW29dKVxuICAgICAgICAgICAgICA6IG4gPiByLmJyZWFrcG9pbnRzW29dICYmIChzID0gci5icmVha3BvaW50c1tvXSkpO1xuICAgICAgICBudWxsICE9PSBzXG4gICAgICAgICAgPyBudWxsICE9PSByLmFjdGl2ZUJyZWFrcG9pbnRcbiAgICAgICAgICAgID8gKHMgIT09IHIuYWN0aXZlQnJlYWtwb2ludCB8fCB0KSAmJlxuICAgICAgICAgICAgICAoKHIuYWN0aXZlQnJlYWtwb2ludCA9IHMpLFxuICAgICAgICAgICAgICBcInVuc2xpY2tcIiA9PT0gci5icmVha3BvaW50U2V0dGluZ3Nbc11cbiAgICAgICAgICAgICAgICA/IHIudW5zbGljayhzKVxuICAgICAgICAgICAgICAgIDogKChyLm9wdGlvbnMgPSBpLmV4dGVuZChcbiAgICAgICAgICAgICAgICAgICAge30sXG4gICAgICAgICAgICAgICAgICAgIHIub3JpZ2luYWxTZXR0aW5ncyxcbiAgICAgICAgICAgICAgICAgICAgci5icmVha3BvaW50U2V0dGluZ3Nbc11cbiAgICAgICAgICAgICAgICAgICkpLFxuICAgICAgICAgICAgICAgICAgITAgPT09IGUgJiYgKHIuY3VycmVudFNsaWRlID0gci5vcHRpb25zLmluaXRpYWxTbGlkZSksXG4gICAgICAgICAgICAgICAgICByLnJlZnJlc2goZSkpLFxuICAgICAgICAgICAgICAobCA9IHMpKVxuICAgICAgICAgICAgOiAoKHIuYWN0aXZlQnJlYWtwb2ludCA9IHMpLFxuICAgICAgICAgICAgICBcInVuc2xpY2tcIiA9PT0gci5icmVha3BvaW50U2V0dGluZ3Nbc11cbiAgICAgICAgICAgICAgICA/IHIudW5zbGljayhzKVxuICAgICAgICAgICAgICAgIDogKChyLm9wdGlvbnMgPSBpLmV4dGVuZChcbiAgICAgICAgICAgICAgICAgICAge30sXG4gICAgICAgICAgICAgICAgICAgIHIub3JpZ2luYWxTZXR0aW5ncyxcbiAgICAgICAgICAgICAgICAgICAgci5icmVha3BvaW50U2V0dGluZ3Nbc11cbiAgICAgICAgICAgICAgICAgICkpLFxuICAgICAgICAgICAgICAgICAgITAgPT09IGUgJiYgKHIuY3VycmVudFNsaWRlID0gci5vcHRpb25zLmluaXRpYWxTbGlkZSksXG4gICAgICAgICAgICAgICAgICByLnJlZnJlc2goZSkpLFxuICAgICAgICAgICAgICAobCA9IHMpKVxuICAgICAgICAgIDogbnVsbCAhPT0gci5hY3RpdmVCcmVha3BvaW50ICYmXG4gICAgICAgICAgICAoKHIuYWN0aXZlQnJlYWtwb2ludCA9IG51bGwpLFxuICAgICAgICAgICAgKHIub3B0aW9ucyA9IHIub3JpZ2luYWxTZXR0aW5ncyksXG4gICAgICAgICAgICAhMCA9PT0gZSAmJiAoci5jdXJyZW50U2xpZGUgPSByLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSxcbiAgICAgICAgICAgIHIucmVmcmVzaChlKSxcbiAgICAgICAgICAgIChsID0gcykpLFxuICAgICAgICAgIGUgfHwgITEgPT09IGwgfHwgci4kc2xpZGVyLnRyaWdnZXIoXCJicmVha3BvaW50XCIsIFtyLCBsXSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNoYW5nZVNsaWRlID0gZnVuY3Rpb24gKGUsIHQpIHtcbiAgICAgIHZhciBvLFxuICAgICAgICBzLFxuICAgICAgICBuLFxuICAgICAgICByID0gdGhpcyxcbiAgICAgICAgbCA9IGkoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIHN3aXRjaCAoXG4gICAgICAgIChsLmlzKFwiYVwiKSAmJiBlLnByZXZlbnREZWZhdWx0KCksXG4gICAgICAgIGwuaXMoXCJsaVwiKSB8fCAobCA9IGwuY2xvc2VzdChcImxpXCIpKSxcbiAgICAgICAgKG4gPSByLnNsaWRlQ291bnQgJSByLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgIT0gMCksXG4gICAgICAgIChvID0gblxuICAgICAgICAgID8gMFxuICAgICAgICAgIDogKHIuc2xpZGVDb3VudCAtIHIuY3VycmVudFNsaWRlKSAlIHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgIGUuZGF0YS5tZXNzYWdlKVxuICAgICAgKSB7XG4gICAgICAgIGNhc2UgXCJwcmV2aW91c1wiOlxuICAgICAgICAgIChzID0gMCA9PT0gbyA/IHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IHIub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSBvKSxcbiAgICAgICAgICAgIHIuc2xpZGVDb3VudCA+IHIub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAgICAgci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUgLSBzLCAhMSwgdCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJuZXh0XCI6XG4gICAgICAgICAgKHMgPSAwID09PSBvID8gci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDogbyksXG4gICAgICAgICAgICByLnNsaWRlQ291bnQgPiByLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgICAgIHIuc2xpZGVIYW5kbGVyKHIuY3VycmVudFNsaWRlICsgcywgITEsIHQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiaW5kZXhcIjpcbiAgICAgICAgICB2YXIgZCA9XG4gICAgICAgICAgICAwID09PSBlLmRhdGEuaW5kZXhcbiAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgIDogZS5kYXRhLmluZGV4IHx8IGwuaW5kZXgoKSAqIHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICAgICAgICByLnNsaWRlSGFuZGxlcihyLmNoZWNrTmF2aWdhYmxlKGQpLCAhMSwgdCksXG4gICAgICAgICAgICBsLmNoaWxkcmVuKCkudHJpZ2dlcihcImZvY3VzXCIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuY2hlY2tOYXZpZ2FibGUgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsIHQ7XG4gICAgICBpZiAoKChlID0gdGhpcy5nZXROYXZpZ2FibGVJbmRleGVzKCkpLCAodCA9IDApLCBpID4gZVtlLmxlbmd0aCAtIDFdKSlcbiAgICAgICAgaSA9IGVbZS5sZW5ndGggLSAxXTtcbiAgICAgIGVsc2VcbiAgICAgICAgZm9yICh2YXIgbyBpbiBlKSB7XG4gICAgICAgICAgaWYgKGkgPCBlW29dKSB7XG4gICAgICAgICAgICBpID0gdDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0ID0gZVtvXTtcbiAgICAgICAgfVxuICAgICAgcmV0dXJuIGk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNsZWFuVXBFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBlLm9wdGlvbnMuZG90cyAmJlxuICAgICAgICBudWxsICE9PSBlLiRkb3RzICYmXG4gICAgICAgIChpKFwibGlcIiwgZS4kZG90cylcbiAgICAgICAgICAub2ZmKFwiY2xpY2suc2xpY2tcIiwgZS5jaGFuZ2VTbGlkZSlcbiAgICAgICAgICAub2ZmKFwibW91c2VlbnRlci5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMCkpXG4gICAgICAgICAgLm9mZihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmXG4gICAgICAgICAgZS4kZG90cy5vZmYoXCJrZXlkb3duLnNsaWNrXCIsIGUua2V5SGFuZGxlcikpLFxuICAgICAgICBlLiRzbGlkZXIub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5hcnJvd3MgJiZcbiAgICAgICAgICBlLnNsaWRlQ291bnQgPiBlLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgKGUuJHByZXZBcnJvdyAmJiBlLiRwcmV2QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIiwgZS5jaGFuZ2VTbGlkZSksXG4gICAgICAgICAgZS4kbmV4dEFycm93ICYmIGUuJG5leHRBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiLCBlLmNoYW5nZVNsaWRlKSxcbiAgICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiZcbiAgICAgICAgICAgIChlLiRwcmV2QXJyb3cgJiYgZS4kcHJldkFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIiwgZS5rZXlIYW5kbGVyKSxcbiAgICAgICAgICAgIGUuJG5leHRBcnJvdyAmJiBlLiRuZXh0QXJyb3cub2ZmKFwia2V5ZG93bi5zbGlja1wiLCBlLmtleUhhbmRsZXIpKSksXG4gICAgICAgIGUuJGxpc3Qub2ZmKFwidG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2tcIiwgZS5zd2lwZUhhbmRsZXIpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcInRvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2tcIiwgZS5zd2lwZUhhbmRsZXIpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcInRvdWNoZW5kLnNsaWNrIG1vdXNldXAuc2xpY2tcIiwgZS5zd2lwZUhhbmRsZXIpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcInRvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2tcIiwgZS5zd2lwZUhhbmRsZXIpLFxuICAgICAgICBlLiRsaXN0Lm9mZihcImNsaWNrLnNsaWNrXCIsIGUuY2xpY2tIYW5kbGVyKSxcbiAgICAgICAgaShkb2N1bWVudCkub2ZmKGUudmlzaWJpbGl0eUNoYW5nZSwgZS52aXNpYmlsaXR5KSxcbiAgICAgICAgZS5jbGVhblVwU2xpZGVFdmVudHMoKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmXG4gICAgICAgICAgZS4kbGlzdC5vZmYoXCJrZXlkb3duLnNsaWNrXCIsIGUua2V5SGFuZGxlciksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuZm9jdXNPblNlbGVjdCAmJlxuICAgICAgICAgIGkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vZmYoXCJjbGljay5zbGlja1wiLCBlLnNlbGVjdEhhbmRsZXIpLFxuICAgICAgICBpKHdpbmRvdykub2ZmKFxuICAgICAgICAgIFwib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stXCIgKyBlLmluc3RhbmNlVWlkLFxuICAgICAgICAgIGUub3JpZW50YXRpb25DaGFuZ2VcbiAgICAgICAgKSxcbiAgICAgICAgaSh3aW5kb3cpLm9mZihcInJlc2l6ZS5zbGljay5zbGljay1cIiArIGUuaW5zdGFuY2VVaWQsIGUucmVzaXplKSxcbiAgICAgICAgaShcIltkcmFnZ2FibGUhPXRydWVdXCIsIGUuJHNsaWRlVHJhY2spLm9mZihcbiAgICAgICAgICBcImRyYWdzdGFydFwiLFxuICAgICAgICAgIGUucHJldmVudERlZmF1bHRcbiAgICAgICAgKSxcbiAgICAgICAgaSh3aW5kb3cpLm9mZihcImxvYWQuc2xpY2suc2xpY2stXCIgKyBlLmluc3RhbmNlVWlkLCBlLnNldFBvc2l0aW9uKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuY2xlYW5VcFNsaWRlRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgZS4kbGlzdC5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICEwKSksXG4gICAgICAgIGUuJGxpc3Qub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5jbGVhblVwUm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpLFxuICAgICAgICBlID0gdGhpcztcbiAgICAgIGUub3B0aW9ucy5yb3dzID4gMSAmJlxuICAgICAgICAoKGkgPSBlLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpKS5yZW1vdmVBdHRyKFwic3R5bGVcIiksXG4gICAgICAgIGUuJHNsaWRlci5lbXB0eSgpLmFwcGVuZChpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAhMSA9PT0gdGhpcy5zaG91bGRDbGljayAmJlxuICAgICAgICAoaS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSwgaS5zdG9wUHJvcGFnYXRpb24oKSwgaS5wcmV2ZW50RGVmYXVsdCgpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICB0LmF1dG9QbGF5Q2xlYXIoKSxcbiAgICAgICAgKHQudG91Y2hPYmplY3QgPSB7fSksXG4gICAgICAgIHQuY2xlYW5VcEV2ZW50cygpLFxuICAgICAgICBpKFwiLnNsaWNrLWNsb25lZFwiLCB0LiRzbGlkZXIpLmRldGFjaCgpLFxuICAgICAgICB0LiRkb3RzICYmIHQuJGRvdHMucmVtb3ZlKCksXG4gICAgICAgIHQuJHByZXZBcnJvdyAmJlxuICAgICAgICAgIHQuJHByZXZBcnJvdy5sZW5ndGggJiZcbiAgICAgICAgICAodC4kcHJldkFycm93XG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIilcbiAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCB0YWJpbmRleFwiKVxuICAgICAgICAgICAgLmNzcyhcImRpc3BsYXlcIiwgXCJcIiksXG4gICAgICAgICAgdC5odG1sRXhwci50ZXN0KHQub3B0aW9ucy5wcmV2QXJyb3cpICYmIHQuJHByZXZBcnJvdy5yZW1vdmUoKSksXG4gICAgICAgIHQuJG5leHRBcnJvdyAmJlxuICAgICAgICAgIHQuJG5leHRBcnJvdy5sZW5ndGggJiZcbiAgICAgICAgICAodC4kbmV4dEFycm93XG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIilcbiAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCB0YWJpbmRleFwiKVxuICAgICAgICAgICAgLmNzcyhcImRpc3BsYXlcIiwgXCJcIiksXG4gICAgICAgICAgdC5odG1sRXhwci50ZXN0KHQub3B0aW9ucy5uZXh0QXJyb3cpICYmIHQuJG5leHRBcnJvdy5yZW1vdmUoKSksXG4gICAgICAgIHQuJHNsaWRlcyAmJlxuICAgICAgICAgICh0LiRzbGlkZXNcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcbiAgICAgICAgICAgICAgXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudFwiXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpXG4gICAgICAgICAgICAucmVtb3ZlQXR0cihcImRhdGEtc2xpY2staW5kZXhcIilcbiAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgaSh0aGlzKS5hdHRyKFwic3R5bGVcIiwgaSh0aGlzKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIpKTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgIHQuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxcbiAgICAgICAgICB0LiRzbGlkZVRyYWNrLmRldGFjaCgpLFxuICAgICAgICAgIHQuJGxpc3QuZGV0YWNoKCksXG4gICAgICAgICAgdC4kc2xpZGVyLmFwcGVuZCh0LiRzbGlkZXMpKSxcbiAgICAgICAgdC5jbGVhblVwUm93cygpLFxuICAgICAgICB0LiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZXJcIiksXG4gICAgICAgIHQuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpLFxuICAgICAgICB0LiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1kb3R0ZWRcIiksXG4gICAgICAgICh0LnVuc2xpY2tlZCA9ICEwKSxcbiAgICAgICAgZSB8fCB0LiRzbGlkZXIudHJpZ2dlcihcImRlc3Ryb3lcIiwgW3RdKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZGlzYWJsZVRyYW5zaXRpb24gPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzLFxuICAgICAgICB0ID0ge307XG4gICAgICAodFtlLnRyYW5zaXRpb25UeXBlXSA9IFwiXCIpLFxuICAgICAgICAhMSA9PT0gZS5vcHRpb25zLmZhZGUgPyBlLiRzbGlkZVRyYWNrLmNzcyh0KSA6IGUuJHNsaWRlcy5lcShpKS5jc3ModCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmZhZGVTbGlkZSA9IGZ1bmN0aW9uIChpLCBlKSB7XG4gICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAhMSA9PT0gdC5jc3NUcmFuc2l0aW9uc1xuICAgICAgICA/ICh0LiRzbGlkZXMuZXEoaSkuY3NzKHsgekluZGV4OiB0Lm9wdGlvbnMuekluZGV4IH0pLFxuICAgICAgICAgIHQuJHNsaWRlc1xuICAgICAgICAgICAgLmVxKGkpXG4gICAgICAgICAgICAuYW5pbWF0ZSh7IG9wYWNpdHk6IDEgfSwgdC5vcHRpb25zLnNwZWVkLCB0Lm9wdGlvbnMuZWFzaW5nLCBlKSlcbiAgICAgICAgOiAodC5hcHBseVRyYW5zaXRpb24oaSksXG4gICAgICAgICAgdC4kc2xpZGVzLmVxKGkpLmNzcyh7IG9wYWNpdHk6IDEsIHpJbmRleDogdC5vcHRpb25zLnpJbmRleCB9KSxcbiAgICAgICAgICBlICYmXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdC5kaXNhYmxlVHJhbnNpdGlvbihpKSwgZS5jYWxsKCk7XG4gICAgICAgICAgICB9LCB0Lm9wdGlvbnMuc3BlZWQpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZmFkZVNsaWRlT3V0ID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICExID09PSBlLmNzc1RyYW5zaXRpb25zXG4gICAgICAgID8gZS4kc2xpZGVzXG4gICAgICAgICAgICAuZXEoaSlcbiAgICAgICAgICAgIC5hbmltYXRlKFxuICAgICAgICAgICAgICB7IG9wYWNpdHk6IDAsIHpJbmRleDogZS5vcHRpb25zLnpJbmRleCAtIDIgfSxcbiAgICAgICAgICAgICAgZS5vcHRpb25zLnNwZWVkLFxuICAgICAgICAgICAgICBlLm9wdGlvbnMuZWFzaW5nXG4gICAgICAgICAgICApXG4gICAgICAgIDogKGUuYXBwbHlUcmFuc2l0aW9uKGkpLFxuICAgICAgICAgIGUuJHNsaWRlcy5lcShpKS5jc3MoeyBvcGFjaXR5OiAwLCB6SW5kZXg6IGUub3B0aW9ucy56SW5kZXggLSAyIH0pKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZmlsdGVyU2xpZGVzID0gZS5wcm90b3R5cGUuc2xpY2tGaWx0ZXIgPVxuICAgICAgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICBudWxsICE9PSBpICYmXG4gICAgICAgICAgKChlLiRzbGlkZXNDYWNoZSA9IGUuJHNsaWRlcyksXG4gICAgICAgICAgZS51bmxvYWQoKSxcbiAgICAgICAgICBlLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksXG4gICAgICAgICAgZS4kc2xpZGVzQ2FjaGUuZmlsdGVyKGkpLmFwcGVuZFRvKGUuJHNsaWRlVHJhY2spLFxuICAgICAgICAgIGUucmVpbml0KCkpO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLmZvY3VzSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGUuJHNsaWRlclxuICAgICAgICAub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKVxuICAgICAgICAub24oXCJmb2N1cy5zbGljayBibHVyLnNsaWNrXCIsIFwiKlwiLCBmdW5jdGlvbiAodCkge1xuICAgICAgICAgIHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgdmFyIG8gPSBpKHRoaXMpO1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZS5vcHRpb25zLnBhdXNlT25Gb2N1cyAmJlxuICAgICAgICAgICAgICAoKGUuZm9jdXNzZWQgPSBvLmlzKFwiOmZvY3VzXCIpKSwgZS5hdXRvUGxheSgpKTtcbiAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmdldEN1cnJlbnQgPSBlLnByb3RvdHlwZS5zbGlja0N1cnJlbnRTbGlkZSA9XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRTbGlkZTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXREb3RDb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcyxcbiAgICAgICAgZSA9IDAsXG4gICAgICAgIHQgPSAwLFxuICAgICAgICBvID0gMDtcbiAgICAgIGlmICghMCA9PT0gaS5vcHRpb25zLmluZmluaXRlKVxuICAgICAgICBpZiAoaS5zbGlkZUNvdW50IDw9IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cpICsrbztcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGZvciAoOyBlIDwgaS5zbGlkZUNvdW50OyApXG4gICAgICAgICAgICArK28sXG4gICAgICAgICAgICAgIChlID0gdCArIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgICAgICh0ICs9XG4gICAgICAgICAgICAgICAgaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDw9IGkub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICAgICAgICAgID8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICAgICAgICAgICAgICA6IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cpO1xuICAgICAgZWxzZSBpZiAoITAgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlKSBvID0gaS5zbGlkZUNvdW50O1xuICAgICAgZWxzZSBpZiAoaS5vcHRpb25zLmFzTmF2Rm9yKVxuICAgICAgICBmb3IgKDsgZSA8IGkuc2xpZGVDb3VudDsgKVxuICAgICAgICAgICsrbyxcbiAgICAgICAgICAgIChlID0gdCArIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgICAodCArPVxuICAgICAgICAgICAgICBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPD0gaS5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgICAgICAgID8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICAgICAgICAgICAgOiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgIGVsc2VcbiAgICAgICAgbyA9XG4gICAgICAgICAgMSArXG4gICAgICAgICAgTWF0aC5jZWlsKFxuICAgICAgICAgICAgKGkuc2xpZGVDb3VudCAtIGkub3B0aW9ucy5zbGlkZXNUb1Nob3cpIC8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICAgICAgKTtcbiAgICAgIHJldHVybiBvIC0gMTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuZ2V0TGVmdCA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyxcbiAgICAgICAgbiA9IHRoaXMsXG4gICAgICAgIHIgPSAwO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKG4uc2xpZGVPZmZzZXQgPSAwKSxcbiAgICAgICAgKHQgPSBuLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkpLFxuICAgICAgICAhMCA9PT0gbi5vcHRpb25zLmluZmluaXRlXG4gICAgICAgICAgPyAobi5zbGlkZUNvdW50ID4gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgICAgICAoKG4uc2xpZGVPZmZzZXQgPSBuLnNsaWRlV2lkdGggKiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICogLTEpLFxuICAgICAgICAgICAgICAocyA9IC0xKSxcbiAgICAgICAgICAgICAgITAgPT09IG4ub3B0aW9ucy52ZXJ0aWNhbCAmJlxuICAgICAgICAgICAgICAgICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgICAgICgyID09PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICAgICAgICA/IChzID0gLTEuNSlcbiAgICAgICAgICAgICAgICAgIDogMSA9PT0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiAocyA9IC0yKSksXG4gICAgICAgICAgICAgIChyID0gdCAqIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKiBzKSksXG4gICAgICAgICAgICBuLnNsaWRlQ291bnQgJSBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgIT0gMCAmJlxuICAgICAgICAgICAgICBpICsgbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsID4gbi5zbGlkZUNvdW50ICYmXG4gICAgICAgICAgICAgIG4uc2xpZGVDb3VudCA+IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAgICAgKGkgPiBuLnNsaWRlQ291bnRcbiAgICAgICAgICAgICAgICA/ICgobi5zbGlkZU9mZnNldCA9XG4gICAgICAgICAgICAgICAgICAgIChuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gKGkgLSBuLnNsaWRlQ291bnQpKSAqXG4gICAgICAgICAgICAgICAgICAgIG4uc2xpZGVXaWR0aCAqXG4gICAgICAgICAgICAgICAgICAgIC0xKSxcbiAgICAgICAgICAgICAgICAgIChyID0gKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSAoaSAtIG4uc2xpZGVDb3VudCkpICogdCAqIC0xKSlcbiAgICAgICAgICAgICAgICA6ICgobi5zbGlkZU9mZnNldCA9XG4gICAgICAgICAgICAgICAgICAgIChuLnNsaWRlQ291bnQgJSBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpICpcbiAgICAgICAgICAgICAgICAgICAgbi5zbGlkZVdpZHRoICpcbiAgICAgICAgICAgICAgICAgICAgLTEpLFxuICAgICAgICAgICAgICAgICAgKHIgPSAobi5zbGlkZUNvdW50ICUgbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSAqIHQgKiAtMSkpKSlcbiAgICAgICAgICA6IGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ID4gbi5zbGlkZUNvdW50ICYmXG4gICAgICAgICAgICAoKG4uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgICAgICAoaSArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSBuLnNsaWRlQ291bnQpICogbi5zbGlkZVdpZHRoKSxcbiAgICAgICAgICAgIChyID0gKGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gbi5zbGlkZUNvdW50KSAqIHQpKSxcbiAgICAgICAgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAoKG4uc2xpZGVPZmZzZXQgPSAwKSwgKHIgPSAwKSksXG4gICAgICAgICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJiBuLnNsaWRlQ291bnQgPD0gbi5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgID8gKG4uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgICAgICAobi5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93KSkgLyAyIC1cbiAgICAgICAgICAgICAgKG4uc2xpZGVXaWR0aCAqIG4uc2xpZGVDb3VudCkgLyAyKVxuICAgICAgICAgIDogITAgPT09IG4ub3B0aW9ucy5jZW50ZXJNb2RlICYmICEwID09PSBuLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICA/IChuLnNsaWRlT2Zmc2V0ICs9XG4gICAgICAgICAgICAgIG4uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3Iobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpIC1cbiAgICAgICAgICAgICAgbi5zbGlkZVdpZHRoKVxuICAgICAgICAgIDogITAgPT09IG4ub3B0aW9ucy5jZW50ZXJNb2RlICYmXG4gICAgICAgICAgICAoKG4uc2xpZGVPZmZzZXQgPSAwKSxcbiAgICAgICAgICAgIChuLnNsaWRlT2Zmc2V0ICs9XG4gICAgICAgICAgICAgIG4uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3Iobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpKSksXG4gICAgICAgIChlID1cbiAgICAgICAgICAhMSA9PT0gbi5vcHRpb25zLnZlcnRpY2FsXG4gICAgICAgICAgICA/IGkgKiBuLnNsaWRlV2lkdGggKiAtMSArIG4uc2xpZGVPZmZzZXRcbiAgICAgICAgICAgIDogaSAqIHQgKiAtMSArIHIpLFxuICAgICAgICAhMCA9PT0gbi5vcHRpb25zLnZhcmlhYmxlV2lkdGggJiZcbiAgICAgICAgICAoKG8gPVxuICAgICAgICAgICAgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgfHwgITEgPT09IG4ub3B0aW9ucy5pbmZpbml0ZVxuICAgICAgICAgICAgICA/IG4uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaSlcbiAgICAgICAgICAgICAgOiBuLiRzbGlkZVRyYWNrXG4gICAgICAgICAgICAgICAgICAuY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIilcbiAgICAgICAgICAgICAgICAgIC5lcShpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdykpLFxuICAgICAgICAgIChlID1cbiAgICAgICAgICAgICEwID09PSBuLm9wdGlvbnMucnRsXG4gICAgICAgICAgICAgID8gb1swXVxuICAgICAgICAgICAgICAgID8gLTEgKiAobi4kc2xpZGVUcmFjay53aWR0aCgpIC0gb1swXS5vZmZzZXRMZWZ0IC0gby53aWR0aCgpKVxuICAgICAgICAgICAgICAgIDogMFxuICAgICAgICAgICAgICA6IG9bMF1cbiAgICAgICAgICAgICAgPyAtMSAqIG9bMF0ub2Zmc2V0TGVmdFxuICAgICAgICAgICAgICA6IDApLFxuICAgICAgICAgICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgKChvID1cbiAgICAgICAgICAgICAgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgfHxcbiAgICAgICAgICAgICAgITEgPT09IG4ub3B0aW9ucy5pbmZpbml0ZVxuICAgICAgICAgICAgICAgID8gbi4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5lcShpKVxuICAgICAgICAgICAgICAgIDogbi4kc2xpZGVUcmFja1xuICAgICAgICAgICAgICAgICAgICAuY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIilcbiAgICAgICAgICAgICAgICAgICAgLmVxKGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgMSkpLFxuICAgICAgICAgICAgKGUgPVxuICAgICAgICAgICAgICAhMCA9PT0gbi5vcHRpb25zLnJ0bFxuICAgICAgICAgICAgICAgID8gb1swXVxuICAgICAgICAgICAgICAgICAgPyAtMSAqIChuLiRzbGlkZVRyYWNrLndpZHRoKCkgLSBvWzBdLm9mZnNldExlZnQgLSBvLndpZHRoKCkpXG4gICAgICAgICAgICAgICAgICA6IDBcbiAgICAgICAgICAgICAgICA6IG9bMF1cbiAgICAgICAgICAgICAgICA/IC0xICogb1swXS5vZmZzZXRMZWZ0XG4gICAgICAgICAgICAgICAgOiAwKSxcbiAgICAgICAgICAgIChlICs9IChuLiRsaXN0LndpZHRoKCkgLSBvLm91dGVyV2lkdGgoKSkgLyAyKSkpLFxuICAgICAgICBlXG4gICAgICApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXRPcHRpb24gPSBlLnByb3RvdHlwZS5zbGlja0dldE9wdGlvbiA9XG4gICAgICBmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zW2ldO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLmdldE5hdmlnYWJsZUluZGV4ZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSxcbiAgICAgICAgZSA9IHRoaXMsXG4gICAgICAgIHQgPSAwLFxuICAgICAgICBvID0gMCxcbiAgICAgICAgcyA9IFtdO1xuICAgICAgZm9yIChcbiAgICAgICAgITEgPT09IGUub3B0aW9ucy5pbmZpbml0ZVxuICAgICAgICAgID8gKGkgPSBlLnNsaWRlQ291bnQpXG4gICAgICAgICAgOiAoKHQgPSAtMSAqIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgICAgICAobyA9IC0xICogZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSxcbiAgICAgICAgICAgIChpID0gMiAqIGUuc2xpZGVDb3VudCkpO1xuICAgICAgICB0IDwgaTtcblxuICAgICAgKVxuICAgICAgICBzLnB1c2godCksXG4gICAgICAgICAgKHQgPSBvICsgZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSxcbiAgICAgICAgICAobyArPVxuICAgICAgICAgICAgZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDw9IGUub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICAgICAgPyBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGxcbiAgICAgICAgICAgICAgOiBlLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgIHJldHVybiBzO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXRTbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5nZXRTbGlkZUNvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8gPSB0aGlzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKHQgPVxuICAgICAgICAgICEwID09PSBvLm9wdGlvbnMuY2VudGVyTW9kZVxuICAgICAgICAgICAgPyBvLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKG8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKVxuICAgICAgICAgICAgOiAwKSxcbiAgICAgICAgITAgPT09IG8ub3B0aW9ucy5zd2lwZVRvU2xpZGVcbiAgICAgICAgICA/IChvLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuZWFjaChmdW5jdGlvbiAocywgbikge1xuICAgICAgICAgICAgICBpZiAobi5vZmZzZXRMZWZ0IC0gdCArIGkobikub3V0ZXJXaWR0aCgpIC8gMiA+IC0xICogby5zd2lwZUxlZnQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIChlID0gbiksICExO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBNYXRoLmFicyhpKGUpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpIC0gby5jdXJyZW50U2xpZGUpIHx8IDEpXG4gICAgICAgICAgOiBvLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGxcbiAgICAgICk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmdvVG8gPSBlLnByb3RvdHlwZS5zbGlja0dvVG8gPVxuICAgICAgZnVuY3Rpb24gKGksIGUpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VTbGlkZSh7IGRhdGE6IHsgbWVzc2FnZTogXCJpbmRleFwiLCBpbmRleDogcGFyc2VJbnQoaSkgfSB9LCBlKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgIGkodC4kc2xpZGVyKS5oYXNDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpIHx8XG4gICAgICAgIChpKHQuJHNsaWRlcikuYWRkQ2xhc3MoXCJzbGljay1pbml0aWFsaXplZFwiKSxcbiAgICAgICAgdC5idWlsZFJvd3MoKSxcbiAgICAgICAgdC5idWlsZE91dCgpLFxuICAgICAgICB0LnNldFByb3BzKCksXG4gICAgICAgIHQuc3RhcnRMb2FkKCksXG4gICAgICAgIHQubG9hZFNsaWRlcigpLFxuICAgICAgICB0LmluaXRpYWxpemVFdmVudHMoKSxcbiAgICAgICAgdC51cGRhdGVBcnJvd3MoKSxcbiAgICAgICAgdC51cGRhdGVEb3RzKCksXG4gICAgICAgIHQuY2hlY2tSZXNwb25zaXZlKCEwKSxcbiAgICAgICAgdC5mb2N1c0hhbmRsZXIoKSksXG4gICAgICAgIGUgJiYgdC4kc2xpZGVyLnRyaWdnZXIoXCJpbml0XCIsIFt0XSksXG4gICAgICAgICEwID09PSB0Lm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJiB0LmluaXRBREEoKSxcbiAgICAgICAgdC5vcHRpb25zLmF1dG9wbGF5ICYmICgodC5wYXVzZWQgPSAhMSksIHQuYXV0b1BsYXkoKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmluaXRBREEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXMsXG4gICAgICAgIHQgPSBNYXRoLmNlaWwoZS5zbGlkZUNvdW50IC8gZS5vcHRpb25zLnNsaWRlc1RvU2hvdyksXG4gICAgICAgIG8gPSBlLmdldE5hdmlnYWJsZUluZGV4ZXMoKS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaSA+PSAwICYmIGkgPCBlLnNsaWRlQ291bnQ7XG4gICAgICAgIH0pO1xuICAgICAgZS4kc2xpZGVzXG4gICAgICAgIC5hZGQoZS4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKSlcbiAgICAgICAgLmF0dHIoeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLCB0YWJpbmRleDogXCItMVwiIH0pXG4gICAgICAgIC5maW5kKFwiYSwgaW5wdXQsIGJ1dHRvbiwgc2VsZWN0XCIpXG4gICAgICAgIC5hdHRyKHsgdGFiaW5kZXg6IFwiLTFcIiB9KSxcbiAgICAgICAgbnVsbCAhPT0gZS4kZG90cyAmJlxuICAgICAgICAgIChlLiRzbGlkZXNcbiAgICAgICAgICAgIC5ub3QoZS4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKSlcbiAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgIHZhciBzID0gby5pbmRleE9mKHQpO1xuICAgICAgICAgICAgICBpKHRoaXMpLmF0dHIoe1xuICAgICAgICAgICAgICAgIHJvbGU6IFwidGFicGFuZWxcIixcbiAgICAgICAgICAgICAgICBpZDogXCJzbGljay1zbGlkZVwiICsgZS5pbnN0YW5jZVVpZCArIHQsXG4gICAgICAgICAgICAgICAgdGFiaW5kZXg6IC0xLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAtMSAhPT0gcyAmJlxuICAgICAgICAgICAgICAgICAgaSh0aGlzKS5hdHRyKHtcbiAgICAgICAgICAgICAgICAgICAgXCJhcmlhLWRlc2NyaWJlZGJ5XCI6XG4gICAgICAgICAgICAgICAgICAgICAgXCJzbGljay1zbGlkZS1jb250cm9sXCIgKyBlLmluc3RhbmNlVWlkICsgcyxcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgZS4kZG90c1xuICAgICAgICAgICAgLmF0dHIoXCJyb2xlXCIsIFwidGFibGlzdFwiKVxuICAgICAgICAgICAgLmZpbmQoXCJsaVwiKVxuICAgICAgICAgICAgLmVhY2goZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgICAgdmFyIG4gPSBvW3NdO1xuICAgICAgICAgICAgICBpKHRoaXMpLmF0dHIoeyByb2xlOiBcInByZXNlbnRhdGlvblwiIH0pLFxuICAgICAgICAgICAgICAgIGkodGhpcylcbiAgICAgICAgICAgICAgICAgIC5maW5kKFwiYnV0dG9uXCIpXG4gICAgICAgICAgICAgICAgICAuZmlyc3QoKVxuICAgICAgICAgICAgICAgICAgLmF0dHIoe1xuICAgICAgICAgICAgICAgICAgICByb2xlOiBcInRhYlwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJzbGljay1zbGlkZS1jb250cm9sXCIgKyBlLmluc3RhbmNlVWlkICsgcyxcbiAgICAgICAgICAgICAgICAgICAgXCJhcmlhLWNvbnRyb2xzXCI6IFwic2xpY2stc2xpZGVcIiArIGUuaW5zdGFuY2VVaWQgKyBuLFxuICAgICAgICAgICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogcyArIDEgKyBcIiBvZiBcIiArIHQsXG4gICAgICAgICAgICAgICAgICAgIFwiYXJpYS1zZWxlY3RlZFwiOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB0YWJpbmRleDogXCItMVwiLFxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmVxKGUuY3VycmVudFNsaWRlKVxuICAgICAgICAgICAgLmZpbmQoXCJidXR0b25cIilcbiAgICAgICAgICAgIC5hdHRyKHsgXCJhcmlhLXNlbGVjdGVkXCI6IFwidHJ1ZVwiLCB0YWJpbmRleDogXCIwXCIgfSlcbiAgICAgICAgICAgIC5lbmQoKSk7XG4gICAgICBmb3IgKHZhciBzID0gZS5jdXJyZW50U2xpZGUsIG4gPSBzICsgZS5vcHRpb25zLnNsaWRlc1RvU2hvdzsgcyA8IG47IHMrKylcbiAgICAgICAgZS4kc2xpZGVzLmVxKHMpLmF0dHIoXCJ0YWJpbmRleFwiLCAwKTtcbiAgICAgIGUuYWN0aXZhdGVBREEoKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuaW5pdEFycm93RXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgITAgPT09IGkub3B0aW9ucy5hcnJvd3MgJiZcbiAgICAgICAgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAoaS4kcHJldkFycm93XG4gICAgICAgICAgLm9mZihcImNsaWNrLnNsaWNrXCIpXG4gICAgICAgICAgLm9uKFwiY2xpY2suc2xpY2tcIiwgeyBtZXNzYWdlOiBcInByZXZpb3VzXCIgfSwgaS5jaGFuZ2VTbGlkZSksXG4gICAgICAgIGkuJG5leHRBcnJvd1xuICAgICAgICAgIC5vZmYoXCJjbGljay5zbGlja1wiKVxuICAgICAgICAgIC5vbihcImNsaWNrLnNsaWNrXCIsIHsgbWVzc2FnZTogXCJuZXh0XCIgfSwgaS5jaGFuZ2VTbGlkZSksXG4gICAgICAgICEwID09PSBpLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgIChpLiRwcmV2QXJyb3cub24oXCJrZXlkb3duLnNsaWNrXCIsIGkua2V5SGFuZGxlciksXG4gICAgICAgICAgaS4kbmV4dEFycm93Lm9uKFwia2V5ZG93bi5zbGlja1wiLCBpLmtleUhhbmRsZXIpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmluaXREb3RFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAhMCA9PT0gZS5vcHRpb25zLmRvdHMgJiZcbiAgICAgICAgKGkoXCJsaVwiLCBlLiRkb3RzKS5vbihcbiAgICAgICAgICBcImNsaWNrLnNsaWNrXCIsXG4gICAgICAgICAgeyBtZXNzYWdlOiBcImluZGV4XCIgfSxcbiAgICAgICAgICBlLmNoYW5nZVNsaWRlXG4gICAgICAgICksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgIGUuJGRvdHMub24oXCJrZXlkb3duLnNsaWNrXCIsIGUua2V5SGFuZGxlcikpLFxuICAgICAgICAhMCA9PT0gZS5vcHRpb25zLmRvdHMgJiZcbiAgICAgICAgICAhMCA9PT0gZS5vcHRpb25zLnBhdXNlT25Eb3RzSG92ZXIgJiZcbiAgICAgICAgICBpKFwibGlcIiwgZS4kZG90cylcbiAgICAgICAgICAgIC5vbihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITApKVxuICAgICAgICAgICAgLm9uKFwibW91c2VsZWF2ZS5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5pbml0U2xpZGVFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBlLm9wdGlvbnMucGF1c2VPbkhvdmVyICYmXG4gICAgICAgIChlLiRsaXN0Lm9uKFwibW91c2VlbnRlci5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMCkpLFxuICAgICAgICBlLiRsaXN0Lm9uKFwibW91c2VsZWF2ZS5zbGlja1wiLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMSkpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuaW5pdGlhbGl6ZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGUuaW5pdEFycm93RXZlbnRzKCksXG4gICAgICAgIGUuaW5pdERvdEV2ZW50cygpLFxuICAgICAgICBlLmluaXRTbGlkZUV2ZW50cygpLFxuICAgICAgICBlLiRsaXN0Lm9uKFxuICAgICAgICAgIFwidG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2tcIixcbiAgICAgICAgICB7IGFjdGlvbjogXCJzdGFydFwiIH0sXG4gICAgICAgICAgZS5zd2lwZUhhbmRsZXJcbiAgICAgICAgKSxcbiAgICAgICAgZS4kbGlzdC5vbihcbiAgICAgICAgICBcInRvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2tcIixcbiAgICAgICAgICB7IGFjdGlvbjogXCJtb3ZlXCIgfSxcbiAgICAgICAgICBlLnN3aXBlSGFuZGxlclxuICAgICAgICApLFxuICAgICAgICBlLiRsaXN0Lm9uKFxuICAgICAgICAgIFwidG91Y2hlbmQuc2xpY2sgbW91c2V1cC5zbGlja1wiLFxuICAgICAgICAgIHsgYWN0aW9uOiBcImVuZFwiIH0sXG4gICAgICAgICAgZS5zd2lwZUhhbmRsZXJcbiAgICAgICAgKSxcbiAgICAgICAgZS4kbGlzdC5vbihcbiAgICAgICAgICBcInRvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2tcIixcbiAgICAgICAgICB7IGFjdGlvbjogXCJlbmRcIiB9LFxuICAgICAgICAgIGUuc3dpcGVIYW5kbGVyXG4gICAgICAgICksXG4gICAgICAgIGUuJGxpc3Qub24oXCJjbGljay5zbGlja1wiLCBlLmNsaWNrSGFuZGxlciksXG4gICAgICAgIGkoZG9jdW1lbnQpLm9uKGUudmlzaWJpbGl0eUNoYW5nZSwgaS5wcm94eShlLnZpc2liaWxpdHksIGUpKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmXG4gICAgICAgICAgZS4kbGlzdC5vbihcImtleWRvd24uc2xpY2tcIiwgZS5rZXlIYW5kbGVyKSxcbiAgICAgICAgITAgPT09IGUub3B0aW9ucy5mb2N1c09uU2VsZWN0ICYmXG4gICAgICAgICAgaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKFwiY2xpY2suc2xpY2tcIiwgZS5zZWxlY3RIYW5kbGVyKSxcbiAgICAgICAgaSh3aW5kb3cpLm9uKFxuICAgICAgICAgIFwib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stXCIgKyBlLmluc3RhbmNlVWlkLFxuICAgICAgICAgIGkucHJveHkoZS5vcmllbnRhdGlvbkNoYW5nZSwgZSlcbiAgICAgICAgKSxcbiAgICAgICAgaSh3aW5kb3cpLm9uKFxuICAgICAgICAgIFwicmVzaXplLnNsaWNrLnNsaWNrLVwiICsgZS5pbnN0YW5jZVVpZCxcbiAgICAgICAgICBpLnByb3h5KGUucmVzaXplLCBlKVxuICAgICAgICApLFxuICAgICAgICBpKFwiW2RyYWdnYWJsZSE9dHJ1ZV1cIiwgZS4kc2xpZGVUcmFjaykub24oXCJkcmFnc3RhcnRcIiwgZS5wcmV2ZW50RGVmYXVsdCksXG4gICAgICAgIGkod2luZG93KS5vbihcImxvYWQuc2xpY2suc2xpY2stXCIgKyBlLmluc3RhbmNlVWlkLCBlLnNldFBvc2l0aW9uKSxcbiAgICAgICAgaShlLnNldFBvc2l0aW9uKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuaW5pdFVJID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgITAgPT09IGkub3B0aW9ucy5hcnJvd3MgJiZcbiAgICAgICAgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAoaS4kcHJldkFycm93LnNob3coKSwgaS4kbmV4dEFycm93LnNob3coKSksXG4gICAgICAgICEwID09PSBpLm9wdGlvbnMuZG90cyAmJlxuICAgICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICBpLiRkb3RzLnNob3coKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUua2V5SGFuZGxlciA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBpLnRhcmdldC50YWdOYW1lLm1hdGNoKFwiVEVYVEFSRUF8SU5QVVR8U0VMRUNUXCIpIHx8XG4gICAgICAgICgzNyA9PT0gaS5rZXlDb2RlICYmICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eVxuICAgICAgICAgID8gZS5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICAgIGRhdGE6IHsgbWVzc2FnZTogITAgPT09IGUub3B0aW9ucy5ydGwgPyBcIm5leHRcIiA6IFwicHJldmlvdXNcIiB9LFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICA6IDM5ID09PSBpLmtleUNvZGUgJiZcbiAgICAgICAgICAgICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgICAgZS5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICAgIGRhdGE6IHsgbWVzc2FnZTogITAgPT09IGUub3B0aW9ucy5ydGwgPyBcInByZXZpb3VzXCIgOiBcIm5leHRcIiB9LFxuICAgICAgICAgICAgfSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5sYXp5TG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZ1bmN0aW9uIGUoZSkge1xuICAgICAgICBpKFwiaW1nW2RhdGEtbGF6eV1cIiwgZSkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIGUgPSBpKHRoaXMpLFxuICAgICAgICAgICAgdCA9IGkodGhpcykuYXR0cihcImRhdGEtbGF6eVwiKSxcbiAgICAgICAgICAgIG8gPSBpKHRoaXMpLmF0dHIoXCJkYXRhLXNyY3NldFwiKSxcbiAgICAgICAgICAgIHMgPSBpKHRoaXMpLmF0dHIoXCJkYXRhLXNpemVzXCIpIHx8IG4uJHNsaWRlci5hdHRyKFwiZGF0YS1zaXplc1wiKSxcbiAgICAgICAgICAgIHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgICAgICAgIChyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGUuYW5pbWF0ZSh7IG9wYWNpdHk6IDAgfSwgMTAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIG8gJiYgKGUuYXR0cihcInNyY3NldFwiLCBvKSwgcyAmJiBlLmF0dHIoXCJzaXplc1wiLCBzKSksXG4gICAgICAgICAgICAgICAgZS5hdHRyKFwic3JjXCIsIHQpLmFuaW1hdGUoeyBvcGFjaXR5OiAxIH0sIDIwMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgZS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIikucmVtb3ZlQ2xhc3MoXG4gICAgICAgICAgICAgICAgICAgIFwic2xpY2stbG9hZGluZ1wiXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG4uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRlZFwiLCBbbiwgZSwgdF0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSksXG4gICAgICAgICAgICAoci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBlXG4gICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJkYXRhLWxhenlcIilcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stbGF6eWxvYWQtZXJyb3JcIiksXG4gICAgICAgICAgICAgICAgbi4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZEVycm9yXCIsIFtuLCBlLCB0XSk7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIChyLnNyYyA9IHQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHZhciB0LFxuICAgICAgICBvLFxuICAgICAgICBzLFxuICAgICAgICBuID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKCEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZVxuICAgICAgICAgID8gITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZVxuICAgICAgICAgICAgPyAocyA9XG4gICAgICAgICAgICAgICAgKG8gPSBuLmN1cnJlbnRTbGlkZSArIChuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiArIDEpKSArXG4gICAgICAgICAgICAgICAgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArXG4gICAgICAgICAgICAgICAgMilcbiAgICAgICAgICAgIDogKChvID0gTWF0aC5tYXgoXG4gICAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgICBuLmN1cnJlbnRTbGlkZSAtIChuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiArIDEpXG4gICAgICAgICAgICAgICkpLFxuICAgICAgICAgICAgICAocyA9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyICsgMSArIDIgKyBuLmN1cnJlbnRTbGlkZSkpXG4gICAgICAgICAgOiAoKG8gPSBuLm9wdGlvbnMuaW5maW5pdGVcbiAgICAgICAgICAgICAgPyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgbi5jdXJyZW50U2xpZGVcbiAgICAgICAgICAgICAgOiBuLmN1cnJlbnRTbGlkZSksXG4gICAgICAgICAgICAocyA9IE1hdGguY2VpbChvICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdykpLFxuICAgICAgICAgICAgITAgPT09IG4ub3B0aW9ucy5mYWRlICYmIChvID4gMCAmJiBvLS0sIHMgPD0gbi5zbGlkZUNvdW50ICYmIHMrKykpLFxuICAgICAgICAodCA9IG4uJHNsaWRlci5maW5kKFwiLnNsaWNrLXNsaWRlXCIpLnNsaWNlKG8sIHMpKSxcbiAgICAgICAgXCJhbnRpY2lwYXRlZFwiID09PSBuLm9wdGlvbnMubGF6eUxvYWQpXG4gICAgICApXG4gICAgICAgIGZvciAoXG4gICAgICAgICAgdmFyIHIgPSBvIC0gMSwgbCA9IHMsIGQgPSBuLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKSwgYSA9IDA7XG4gICAgICAgICAgYSA8IG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICAgICAgICBhKytcbiAgICAgICAgKVxuICAgICAgICAgIHIgPCAwICYmIChyID0gbi5zbGlkZUNvdW50IC0gMSksXG4gICAgICAgICAgICAodCA9ICh0ID0gdC5hZGQoZC5lcShyKSkpLmFkZChkLmVxKGwpKSksXG4gICAgICAgICAgICByLS0sXG4gICAgICAgICAgICBsKys7XG4gICAgICBlKHQpLFxuICAgICAgICBuLnNsaWRlQ291bnQgPD0gbi5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgID8gZShuLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKSlcbiAgICAgICAgICA6IG4uY3VycmVudFNsaWRlID49IG4uc2xpZGVDb3VudCAtIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICA/IGUobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpLnNsaWNlKDAsIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKVxuICAgICAgICAgIDogMCA9PT0gbi5jdXJyZW50U2xpZGUgJiZcbiAgICAgICAgICAgIGUoXG4gICAgICAgICAgICAgIG4uJHNsaWRlci5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5zbGljZSgtMSAqIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpXG4gICAgICAgICAgICApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5sb2FkU2xpZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgaS5zZXRQb3NpdGlvbigpLFxuICAgICAgICBpLiRzbGlkZVRyYWNrLmNzcyh7IG9wYWNpdHk6IDEgfSksXG4gICAgICAgIGkuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWxvYWRpbmdcIiksXG4gICAgICAgIGkuaW5pdFVJKCksXG4gICAgICAgIFwicHJvZ3Jlc3NpdmVcIiA9PT0gaS5vcHRpb25zLmxhenlMb2FkICYmIGkucHJvZ3Jlc3NpdmVMYXp5TG9hZCgpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5uZXh0ID0gZS5wcm90b3R5cGUuc2xpY2tOZXh0ID1cbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VTbGlkZSh7IGRhdGE6IHsgbWVzc2FnZTogXCJuZXh0XCIgfSB9KTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5vcmllbnRhdGlvbkNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIGkuY2hlY2tSZXNwb25zaXZlKCksIGkuc2V0UG9zaXRpb24oKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucGF1c2UgPSBlLnByb3RvdHlwZS5zbGlja1BhdXNlID1cbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgICBpLmF1dG9QbGF5Q2xlYXIoKSwgKGkucGF1c2VkID0gITApO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLnBsYXkgPSBlLnByb3RvdHlwZS5zbGlja1BsYXkgPVxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICAgIGkuYXV0b1BsYXkoKSxcbiAgICAgICAgICAoaS5vcHRpb25zLmF1dG9wbGF5ID0gITApLFxuICAgICAgICAgIChpLnBhdXNlZCA9ICExKSxcbiAgICAgICAgICAoaS5mb2N1c3NlZCA9ICExKSxcbiAgICAgICAgICAoaS5pbnRlcnJ1cHRlZCA9ICExKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5wb3N0U2xpZGUgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgdC51bnNsaWNrZWQgfHxcbiAgICAgICAgKHQuJHNsaWRlci50cmlnZ2VyKFwiYWZ0ZXJDaGFuZ2VcIiwgW3QsIGVdKSxcbiAgICAgICAgKHQuYW5pbWF0aW5nID0gITEpLFxuICAgICAgICB0LnNsaWRlQ291bnQgPiB0Lm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIHQuc2V0UG9zaXRpb24oKSxcbiAgICAgICAgKHQuc3dpcGVMZWZ0ID0gbnVsbCksXG4gICAgICAgIHQub3B0aW9ucy5hdXRvcGxheSAmJiB0LmF1dG9QbGF5KCksXG4gICAgICAgICEwID09PSB0Lm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJlxuICAgICAgICAgICh0LmluaXRBREEoKSxcbiAgICAgICAgICB0Lm9wdGlvbnMuZm9jdXNPbkNoYW5nZSAmJlxuICAgICAgICAgICAgaSh0LiRzbGlkZXMuZ2V0KHQuY3VycmVudFNsaWRlKSkuYXR0cihcInRhYmluZGV4XCIsIDApLmZvY3VzKCkpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucHJldiA9IGUucHJvdG90eXBlLnNsaWNrUHJldiA9XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlU2xpZGUoeyBkYXRhOiB7IG1lc3NhZ2U6IFwicHJldmlvdXNcIiB9IH0pO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLnByZXZlbnREZWZhdWx0ID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIGkucHJldmVudERlZmF1bHQoKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucHJvZ3Jlc3NpdmVMYXp5TG9hZCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBlID0gZSB8fCAxO1xuICAgICAgdmFyIHQsXG4gICAgICAgIG8sXG4gICAgICAgIHMsXG4gICAgICAgIG4sXG4gICAgICAgIHIsXG4gICAgICAgIGwgPSB0aGlzLFxuICAgICAgICBkID0gaShcImltZ1tkYXRhLWxhenldXCIsIGwuJHNsaWRlcik7XG4gICAgICBkLmxlbmd0aFxuICAgICAgICA/ICgodCA9IGQuZmlyc3QoKSksXG4gICAgICAgICAgKG8gPSB0LmF0dHIoXCJkYXRhLWxhenlcIikpLFxuICAgICAgICAgIChzID0gdC5hdHRyKFwiZGF0YS1zcmNzZXRcIikpLFxuICAgICAgICAgIChuID0gdC5hdHRyKFwiZGF0YS1zaXplc1wiKSB8fCBsLiRzbGlkZXIuYXR0cihcImRhdGEtc2l6ZXNcIikpLFxuICAgICAgICAgICgociA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIikpLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHMgJiYgKHQuYXR0cihcInNyY3NldFwiLCBzKSwgbiAmJiB0LmF0dHIoXCJzaXplc1wiLCBuKSksXG4gICAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgICAuYXR0cihcInNyY1wiLCBvKVxuICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIilcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLFxuICAgICAgICAgICAgICAhMCA9PT0gbC5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ICYmIGwuc2V0UG9zaXRpb24oKSxcbiAgICAgICAgICAgICAgbC4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsIFtsLCB0LCBvXSksXG4gICAgICAgICAgICAgIGwucHJvZ3Jlc3NpdmVMYXp5TG9hZCgpO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIChyLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBlIDwgM1xuICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgbC5wcm9ncmVzc2l2ZUxhenlMb2FkKGUgKyAxKTtcbiAgICAgICAgICAgICAgICB9LCA1MDApXG4gICAgICAgICAgICAgIDogKHRcbiAgICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpXG4gICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpXG4gICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1sYXp5bG9hZC1lcnJvclwiKSxcbiAgICAgICAgICAgICAgICBsLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkRXJyb3JcIiwgW2wsIHQsIG9dKSxcbiAgICAgICAgICAgICAgICBsLnByb2dyZXNzaXZlTGF6eUxvYWQoKSk7XG4gICAgICAgICAgfSksXG4gICAgICAgICAgKHIuc3JjID0gbykpXG4gICAgICAgIDogbC4kc2xpZGVyLnRyaWdnZXIoXCJhbGxJbWFnZXNMb2FkZWRcIiwgW2xdKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdCxcbiAgICAgICAgbyxcbiAgICAgICAgcyA9IHRoaXM7XG4gICAgICAobyA9IHMuc2xpZGVDb3VudCAtIHMub3B0aW9ucy5zbGlkZXNUb1Nob3cpLFxuICAgICAgICAhcy5vcHRpb25zLmluZmluaXRlICYmIHMuY3VycmVudFNsaWRlID4gbyAmJiAocy5jdXJyZW50U2xpZGUgPSBvKSxcbiAgICAgICAgcy5zbGlkZUNvdW50IDw9IHMub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgKHMuY3VycmVudFNsaWRlID0gMCksXG4gICAgICAgICh0ID0gcy5jdXJyZW50U2xpZGUpLFxuICAgICAgICBzLmRlc3Ryb3koITApLFxuICAgICAgICBpLmV4dGVuZChzLCBzLmluaXRpYWxzLCB7IGN1cnJlbnRTbGlkZTogdCB9KSxcbiAgICAgICAgcy5pbml0KCksXG4gICAgICAgIGUgfHwgcy5jaGFuZ2VTbGlkZSh7IGRhdGE6IHsgbWVzc2FnZTogXCJpbmRleFwiLCBpbmRleDogdCB9IH0sICExKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucmVnaXN0ZXJCcmVha3BvaW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzID0gdGhpcyxcbiAgICAgICAgbiA9IHMub3B0aW9ucy5yZXNwb25zaXZlIHx8IG51bGw7XG4gICAgICBpZiAoXCJhcnJheVwiID09PSBpLnR5cGUobikgJiYgbi5sZW5ndGgpIHtcbiAgICAgICAgcy5yZXNwb25kVG8gPSBzLm9wdGlvbnMucmVzcG9uZFRvIHx8IFwid2luZG93XCI7XG4gICAgICAgIGZvciAoZSBpbiBuKVxuICAgICAgICAgIGlmICgoKG8gPSBzLmJyZWFrcG9pbnRzLmxlbmd0aCAtIDEpLCBuLmhhc093blByb3BlcnR5KGUpKSkge1xuICAgICAgICAgICAgZm9yICh0ID0gbltlXS5icmVha3BvaW50OyBvID49IDA7IClcbiAgICAgICAgICAgICAgcy5icmVha3BvaW50c1tvXSAmJlxuICAgICAgICAgICAgICAgIHMuYnJlYWtwb2ludHNbb10gPT09IHQgJiZcbiAgICAgICAgICAgICAgICBzLmJyZWFrcG9pbnRzLnNwbGljZShvLCAxKSxcbiAgICAgICAgICAgICAgICBvLS07XG4gICAgICAgICAgICBzLmJyZWFrcG9pbnRzLnB1c2godCksIChzLmJyZWFrcG9pbnRTZXR0aW5nc1t0XSA9IG5bZV0uc2V0dGluZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgcy5icmVha3BvaW50cy5zb3J0KGZ1bmN0aW9uIChpLCBlKSB7XG4gICAgICAgICAgcmV0dXJuIHMub3B0aW9ucy5tb2JpbGVGaXJzdCA/IGkgLSBlIDogZSAtIGk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5yZWluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAoZS4kc2xpZGVzID0gZS4kc2xpZGVUcmFja1xuICAgICAgICAuY2hpbGRyZW4oZS5vcHRpb25zLnNsaWRlKVxuICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1zbGlkZVwiKSksXG4gICAgICAgIChlLnNsaWRlQ291bnQgPSBlLiRzbGlkZXMubGVuZ3RoKSxcbiAgICAgICAgZS5jdXJyZW50U2xpZGUgPj0gZS5zbGlkZUNvdW50ICYmXG4gICAgICAgICAgMCAhPT0gZS5jdXJyZW50U2xpZGUgJiZcbiAgICAgICAgICAoZS5jdXJyZW50U2xpZGUgPSBlLmN1cnJlbnRTbGlkZSAtIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCksXG4gICAgICAgIGUuc2xpZGVDb3VudCA8PSBlLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChlLmN1cnJlbnRTbGlkZSA9IDApLFxuICAgICAgICBlLnJlZ2lzdGVyQnJlYWtwb2ludHMoKSxcbiAgICAgICAgZS5zZXRQcm9wcygpLFxuICAgICAgICBlLnNldHVwSW5maW5pdGUoKSxcbiAgICAgICAgZS5idWlsZEFycm93cygpLFxuICAgICAgICBlLnVwZGF0ZUFycm93cygpLFxuICAgICAgICBlLmluaXRBcnJvd0V2ZW50cygpLFxuICAgICAgICBlLmJ1aWxkRG90cygpLFxuICAgICAgICBlLnVwZGF0ZURvdHMoKSxcbiAgICAgICAgZS5pbml0RG90RXZlbnRzKCksXG4gICAgICAgIGUuY2xlYW5VcFNsaWRlRXZlbnRzKCksXG4gICAgICAgIGUuaW5pdFNsaWRlRXZlbnRzKCksXG4gICAgICAgIGUuY2hlY2tSZXNwb25zaXZlKCExLCAhMCksXG4gICAgICAgICEwID09PSBlLm9wdGlvbnMuZm9jdXNPblNlbGVjdCAmJlxuICAgICAgICAgIGkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsIGUuc2VsZWN0SGFuZGxlciksXG4gICAgICAgIGUuc2V0U2xpZGVDbGFzc2VzKFxuICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGUuY3VycmVudFNsaWRlID8gZS5jdXJyZW50U2xpZGUgOiAwXG4gICAgICAgICksXG4gICAgICAgIGUuc2V0UG9zaXRpb24oKSxcbiAgICAgICAgZS5mb2N1c0hhbmRsZXIoKSxcbiAgICAgICAgKGUucGF1c2VkID0gIWUub3B0aW9ucy5hdXRvcGxheSksXG4gICAgICAgIGUuYXV0b1BsYXkoKSxcbiAgICAgICAgZS4kc2xpZGVyLnRyaWdnZXIoXCJyZUluaXRcIiwgW2VdKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgaSh3aW5kb3cpLndpZHRoKCkgIT09IGUud2luZG93V2lkdGggJiZcbiAgICAgICAgKGNsZWFyVGltZW91dChlLndpbmRvd0RlbGF5KSxcbiAgICAgICAgKGUud2luZG93RGVsYXkgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgKGUud2luZG93V2lkdGggPSBpKHdpbmRvdykud2lkdGgoKSksXG4gICAgICAgICAgICBlLmNoZWNrUmVzcG9uc2l2ZSgpLFxuICAgICAgICAgICAgZS51bnNsaWNrZWQgfHwgZS5zZXRQb3NpdGlvbigpO1xuICAgICAgICB9LCA1MCkpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUucmVtb3ZlU2xpZGUgPSBlLnByb3RvdHlwZS5zbGlja1JlbW92ZSA9XG4gICAgICBmdW5jdGlvbiAoaSwgZSwgdCkge1xuICAgICAgICB2YXIgbyA9IHRoaXM7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAoKGkgPVxuICAgICAgICAgICAgXCJib29sZWFuXCIgPT0gdHlwZW9mIGlcbiAgICAgICAgICAgICAgPyAhMCA9PT0gKGUgPSBpKVxuICAgICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICAgIDogby5zbGlkZUNvdW50IC0gMVxuICAgICAgICAgICAgICA6ICEwID09PSBlXG4gICAgICAgICAgICAgID8gLS1pXG4gICAgICAgICAgICAgIDogaSksXG4gICAgICAgICAgby5zbGlkZUNvdW50IDwgMSB8fCBpIDwgMCB8fCBpID4gby5zbGlkZUNvdW50IC0gMSlcbiAgICAgICAgKVxuICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgby51bmxvYWQoKSxcbiAgICAgICAgICAhMCA9PT0gdFxuICAgICAgICAgICAgPyBvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCkucmVtb3ZlKClcbiAgICAgICAgICAgIDogby4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmVxKGkpLnJlbW92ZSgpLFxuICAgICAgICAgIChvLiRzbGlkZXMgPSBvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkpLFxuICAgICAgICAgIG8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxcbiAgICAgICAgICBvLiRzbGlkZVRyYWNrLmFwcGVuZChvLiRzbGlkZXMpLFxuICAgICAgICAgIChvLiRzbGlkZXNDYWNoZSA9IG8uJHNsaWRlcyksXG4gICAgICAgICAgby5yZWluaXQoKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXRDU1MgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8gPSB0aGlzLFxuICAgICAgICBzID0ge307XG4gICAgICAhMCA9PT0gby5vcHRpb25zLnJ0bCAmJiAoaSA9IC1pKSxcbiAgICAgICAgKGUgPSBcImxlZnRcIiA9PSBvLnBvc2l0aW9uUHJvcCA/IE1hdGguY2VpbChpKSArIFwicHhcIiA6IFwiMHB4XCIpLFxuICAgICAgICAodCA9IFwidG9wXCIgPT0gby5wb3NpdGlvblByb3AgPyBNYXRoLmNlaWwoaSkgKyBcInB4XCIgOiBcIjBweFwiKSxcbiAgICAgICAgKHNbby5wb3NpdGlvblByb3BdID0gaSksXG4gICAgICAgICExID09PSBvLnRyYW5zZm9ybXNFbmFibGVkXG4gICAgICAgICAgPyBvLiRzbGlkZVRyYWNrLmNzcyhzKVxuICAgICAgICAgIDogKChzID0ge30pLFxuICAgICAgICAgICAgITEgPT09IG8uY3NzVHJhbnNpdGlvbnNcbiAgICAgICAgICAgICAgPyAoKHNbby5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZShcIiArIGUgKyBcIiwgXCIgKyB0ICsgXCIpXCIpLFxuICAgICAgICAgICAgICAgIG8uJHNsaWRlVHJhY2suY3NzKHMpKVxuICAgICAgICAgICAgICA6ICgoc1tvLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlM2QoXCIgKyBlICsgXCIsIFwiICsgdCArIFwiLCAwcHgpXCIpLFxuICAgICAgICAgICAgICAgIG8uJHNsaWRlVHJhY2suY3NzKHMpKSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldERpbWVuc2lvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICAhMSA9PT0gaS5vcHRpb25zLnZlcnRpY2FsXG4gICAgICAgID8gITAgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlICYmXG4gICAgICAgICAgaS4kbGlzdC5jc3MoeyBwYWRkaW5nOiBcIjBweCBcIiArIGkub3B0aW9ucy5jZW50ZXJQYWRkaW5nIH0pXG4gICAgICAgIDogKGkuJGxpc3QuaGVpZ2h0KFxuICAgICAgICAgICAgaS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApICogaS5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICAgICAgICksXG4gICAgICAgICAgITAgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlICYmXG4gICAgICAgICAgICBpLiRsaXN0LmNzcyh7IHBhZGRpbmc6IGkub3B0aW9ucy5jZW50ZXJQYWRkaW5nICsgXCIgMHB4XCIgfSkpLFxuICAgICAgICAoaS5saXN0V2lkdGggPSBpLiRsaXN0LndpZHRoKCkpLFxuICAgICAgICAoaS5saXN0SGVpZ2h0ID0gaS4kbGlzdC5oZWlnaHQoKSksXG4gICAgICAgICExID09PSBpLm9wdGlvbnMudmVydGljYWwgJiYgITEgPT09IGkub3B0aW9ucy52YXJpYWJsZVdpZHRoXG4gICAgICAgICAgPyAoKGkuc2xpZGVXaWR0aCA9IE1hdGguY2VpbChpLmxpc3RXaWR0aCAvIGkub3B0aW9ucy5zbGlkZXNUb1Nob3cpKSxcbiAgICAgICAgICAgIGkuJHNsaWRlVHJhY2sud2lkdGgoXG4gICAgICAgICAgICAgIE1hdGguY2VpbChcbiAgICAgICAgICAgICAgICBpLnNsaWRlV2lkdGggKiBpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmxlbmd0aFxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApKVxuICAgICAgICAgIDogITAgPT09IGkub3B0aW9ucy52YXJpYWJsZVdpZHRoXG4gICAgICAgICAgPyBpLiRzbGlkZVRyYWNrLndpZHRoKDVlMyAqIGkuc2xpZGVDb3VudClcbiAgICAgICAgICA6ICgoaS5zbGlkZVdpZHRoID0gTWF0aC5jZWlsKGkubGlzdFdpZHRoKSksXG4gICAgICAgICAgICBpLiRzbGlkZVRyYWNrLmhlaWdodChcbiAgICAgICAgICAgICAgTWF0aC5jZWlsKFxuICAgICAgICAgICAgICAgIGkuJHNsaWRlcy5maXJzdCgpLm91dGVySGVpZ2h0KCEwKSAqXG4gICAgICAgICAgICAgICAgICBpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmxlbmd0aFxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApKTtcbiAgICAgIHZhciBlID0gaS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJXaWR0aCghMCkgLSBpLiRzbGlkZXMuZmlyc3QoKS53aWR0aCgpO1xuICAgICAgITEgPT09IGkub3B0aW9ucy52YXJpYWJsZVdpZHRoICYmXG4gICAgICAgIGkuJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikud2lkdGgoaS5zbGlkZVdpZHRoIC0gZSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldEZhZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCA9IHRoaXM7XG4gICAgICB0LiRzbGlkZXMuZWFjaChmdW5jdGlvbiAobywgcykge1xuICAgICAgICAoZSA9IHQuc2xpZGVXaWR0aCAqIG8gKiAtMSksXG4gICAgICAgICAgITAgPT09IHQub3B0aW9ucy5ydGxcbiAgICAgICAgICAgID8gaShzKS5jc3Moe1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXG4gICAgICAgICAgICAgICAgcmlnaHQ6IGUsXG4gICAgICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgICAgIHpJbmRleDogdC5vcHRpb25zLnpJbmRleCAtIDIsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIDogaShzKS5jc3Moe1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXG4gICAgICAgICAgICAgICAgbGVmdDogZSxcbiAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgekluZGV4OiB0Lm9wdGlvbnMuekluZGV4IC0gMixcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICB9KTtcbiAgICAgIH0pLFxuICAgICAgICB0LiRzbGlkZXNcbiAgICAgICAgICAuZXEodC5jdXJyZW50U2xpZGUpXG4gICAgICAgICAgLmNzcyh7IHpJbmRleDogdC5vcHRpb25zLnpJbmRleCAtIDEsIG9wYWNpdHk6IDEgfSk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnNldEhlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgMSA9PT0gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ICYmXG4gICAgICAgICExID09PSBpLm9wdGlvbnMudmVydGljYWxcbiAgICAgICkge1xuICAgICAgICB2YXIgZSA9IGkuJHNsaWRlcy5lcShpLmN1cnJlbnRTbGlkZSkub3V0ZXJIZWlnaHQoITApO1xuICAgICAgICBpLiRsaXN0LmNzcyhcImhlaWdodFwiLCBlKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0T3B0aW9uID0gZS5wcm90b3R5cGUuc2xpY2tTZXRPcHRpb24gPVxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZSxcbiAgICAgICAgICB0LFxuICAgICAgICAgIG8sXG4gICAgICAgICAgcyxcbiAgICAgICAgICBuLFxuICAgICAgICAgIHIgPSB0aGlzLFxuICAgICAgICAgIGwgPSAhMTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIChcIm9iamVjdFwiID09PSBpLnR5cGUoYXJndW1lbnRzWzBdKVxuICAgICAgICAgICAgPyAoKG8gPSBhcmd1bWVudHNbMF0pLCAobCA9IGFyZ3VtZW50c1sxXSksIChuID0gXCJtdWx0aXBsZVwiKSlcbiAgICAgICAgICAgIDogXCJzdHJpbmdcIiA9PT0gaS50eXBlKGFyZ3VtZW50c1swXSkgJiZcbiAgICAgICAgICAgICAgKChvID0gYXJndW1lbnRzWzBdKSxcbiAgICAgICAgICAgICAgKHMgPSBhcmd1bWVudHNbMV0pLFxuICAgICAgICAgICAgICAobCA9IGFyZ3VtZW50c1syXSksXG4gICAgICAgICAgICAgIFwicmVzcG9uc2l2ZVwiID09PSBhcmd1bWVudHNbMF0gJiYgXCJhcnJheVwiID09PSBpLnR5cGUoYXJndW1lbnRzWzFdKVxuICAgICAgICAgICAgICAgID8gKG4gPSBcInJlc3BvbnNpdmVcIilcbiAgICAgICAgICAgICAgICA6IHZvaWQgMCAhPT0gYXJndW1lbnRzWzFdICYmIChuID0gXCJzaW5nbGVcIikpLFxuICAgICAgICAgIFwic2luZ2xlXCIgPT09IG4pXG4gICAgICAgIClcbiAgICAgICAgICByLm9wdGlvbnNbb10gPSBzO1xuICAgICAgICBlbHNlIGlmIChcIm11bHRpcGxlXCIgPT09IG4pXG4gICAgICAgICAgaS5lYWNoKG8sIGZ1bmN0aW9uIChpLCBlKSB7XG4gICAgICAgICAgICByLm9wdGlvbnNbaV0gPSBlO1xuICAgICAgICAgIH0pO1xuICAgICAgICBlbHNlIGlmIChcInJlc3BvbnNpdmVcIiA9PT0gbilcbiAgICAgICAgICBmb3IgKHQgaW4gcylcbiAgICAgICAgICAgIGlmIChcImFycmF5XCIgIT09IGkudHlwZShyLm9wdGlvbnMucmVzcG9uc2l2ZSkpXG4gICAgICAgICAgICAgIHIub3B0aW9ucy5yZXNwb25zaXZlID0gW3NbdF1dO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIGZvciAoZSA9IHIub3B0aW9ucy5yZXNwb25zaXZlLmxlbmd0aCAtIDE7IGUgPj0gMDsgKVxuICAgICAgICAgICAgICAgIHIub3B0aW9ucy5yZXNwb25zaXZlW2VdLmJyZWFrcG9pbnQgPT09IHNbdF0uYnJlYWtwb2ludCAmJlxuICAgICAgICAgICAgICAgICAgci5vcHRpb25zLnJlc3BvbnNpdmUuc3BsaWNlKGUsIDEpLFxuICAgICAgICAgICAgICAgICAgZS0tO1xuICAgICAgICAgICAgICByLm9wdGlvbnMucmVzcG9uc2l2ZS5wdXNoKHNbdF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICBsICYmIChyLnVubG9hZCgpLCByLnJlaW5pdCgpKTtcbiAgICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIGkuc2V0RGltZW5zaW9ucygpLFxuICAgICAgICBpLnNldEhlaWdodCgpLFxuICAgICAgICAhMSA9PT0gaS5vcHRpb25zLmZhZGVcbiAgICAgICAgICA/IGkuc2V0Q1NTKGkuZ2V0TGVmdChpLmN1cnJlbnRTbGlkZSkpXG4gICAgICAgICAgOiBpLnNldEZhZGUoKSxcbiAgICAgICAgaS4kc2xpZGVyLnRyaWdnZXIoXCJzZXRQb3NpdGlvblwiLCBbaV0pO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zZXRQcm9wcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcyxcbiAgICAgICAgZSA9IGRvY3VtZW50LmJvZHkuc3R5bGU7XG4gICAgICAoaS5wb3NpdGlvblByb3AgPSAhMCA9PT0gaS5vcHRpb25zLnZlcnRpY2FsID8gXCJ0b3BcIiA6IFwibGVmdFwiKSxcbiAgICAgICAgXCJ0b3BcIiA9PT0gaS5wb3NpdGlvblByb3BcbiAgICAgICAgICA/IGkuJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLXZlcnRpY2FsXCIpXG4gICAgICAgICAgOiBpLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKSxcbiAgICAgICAgKHZvaWQgMCA9PT0gZS5XZWJraXRUcmFuc2l0aW9uICYmXG4gICAgICAgICAgdm9pZCAwID09PSBlLk1velRyYW5zaXRpb24gJiZcbiAgICAgICAgICB2b2lkIDAgPT09IGUubXNUcmFuc2l0aW9uKSB8fFxuICAgICAgICAgICghMCA9PT0gaS5vcHRpb25zLnVzZUNTUyAmJiAoaS5jc3NUcmFuc2l0aW9ucyA9ICEwKSksXG4gICAgICAgIGkub3B0aW9ucy5mYWRlICYmXG4gICAgICAgICAgKFwibnVtYmVyXCIgPT0gdHlwZW9mIGkub3B0aW9ucy56SW5kZXhcbiAgICAgICAgICAgID8gaS5vcHRpb25zLnpJbmRleCA8IDMgJiYgKGkub3B0aW9ucy56SW5kZXggPSAzKVxuICAgICAgICAgICAgOiAoaS5vcHRpb25zLnpJbmRleCA9IGkuZGVmYXVsdHMuekluZGV4KSksXG4gICAgICAgIHZvaWQgMCAhPT0gZS5PVHJhbnNmb3JtICYmXG4gICAgICAgICAgKChpLmFuaW1UeXBlID0gXCJPVHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zZm9ybVR5cGUgPSBcIi1vLXRyYW5zZm9ybVwiKSxcbiAgICAgICAgICAoaS50cmFuc2l0aW9uVHlwZSA9IFwiT1RyYW5zaXRpb25cIiksXG4gICAgICAgICAgdm9pZCAwID09PSBlLnBlcnNwZWN0aXZlUHJvcGVydHkgJiZcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZS53ZWJraXRQZXJzcGVjdGl2ZSAmJlxuICAgICAgICAgICAgKGkuYW5pbVR5cGUgPSAhMSkpLFxuICAgICAgICB2b2lkIDAgIT09IGUuTW96VHJhbnNmb3JtICYmXG4gICAgICAgICAgKChpLmFuaW1UeXBlID0gXCJNb3pUcmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNmb3JtVHlwZSA9IFwiLW1vei10cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNpdGlvblR5cGUgPSBcIk1velRyYW5zaXRpb25cIiksXG4gICAgICAgICAgdm9pZCAwID09PSBlLnBlcnNwZWN0aXZlUHJvcGVydHkgJiZcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZS5Nb3pQZXJzcGVjdGl2ZSAmJlxuICAgICAgICAgICAgKGkuYW5pbVR5cGUgPSAhMSkpLFxuICAgICAgICB2b2lkIDAgIT09IGUud2Via2l0VHJhbnNmb3JtICYmXG4gICAgICAgICAgKChpLmFuaW1UeXBlID0gXCJ3ZWJraXRUcmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNmb3JtVHlwZSA9IFwiLXdlYmtpdC10cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNpdGlvblR5cGUgPSBcIndlYmtpdFRyYW5zaXRpb25cIiksXG4gICAgICAgICAgdm9pZCAwID09PSBlLnBlcnNwZWN0aXZlUHJvcGVydHkgJiZcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZS53ZWJraXRQZXJzcGVjdGl2ZSAmJlxuICAgICAgICAgICAgKGkuYW5pbVR5cGUgPSAhMSkpLFxuICAgICAgICB2b2lkIDAgIT09IGUubXNUcmFuc2Zvcm0gJiZcbiAgICAgICAgICAoKGkuYW5pbVR5cGUgPSBcIm1zVHJhbnNmb3JtXCIpLFxuICAgICAgICAgIChpLnRyYW5zZm9ybVR5cGUgPSBcIi1tcy10cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNpdGlvblR5cGUgPSBcIm1zVHJhbnNpdGlvblwiKSxcbiAgICAgICAgICB2b2lkIDAgPT09IGUubXNUcmFuc2Zvcm0gJiYgKGkuYW5pbVR5cGUgPSAhMSkpLFxuICAgICAgICB2b2lkIDAgIT09IGUudHJhbnNmb3JtICYmXG4gICAgICAgICAgITEgIT09IGkuYW5pbVR5cGUgJiZcbiAgICAgICAgICAoKGkuYW5pbVR5cGUgPSBcInRyYW5zZm9ybVwiKSxcbiAgICAgICAgICAoaS50cmFuc2Zvcm1UeXBlID0gXCJ0cmFuc2Zvcm1cIiksXG4gICAgICAgICAgKGkudHJhbnNpdGlvblR5cGUgPSBcInRyYW5zaXRpb25cIikpLFxuICAgICAgICAoaS50cmFuc2Zvcm1zRW5hYmxlZCA9XG4gICAgICAgICAgaS5vcHRpb25zLnVzZVRyYW5zZm9ybSAmJiBudWxsICE9PSBpLmFuaW1UeXBlICYmICExICE9PSBpLmFuaW1UeXBlKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0U2xpZGVDbGFzc2VzID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzLFxuICAgICAgICBuID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKCh0ID0gbi4kc2xpZGVyXG4gICAgICAgICAgLmZpbmQoXCIuc2xpY2stc2xpZGVcIilcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLWN1cnJlbnRcIilcbiAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwidHJ1ZVwiKSksXG4gICAgICAgIG4uJHNsaWRlcy5lcShpKS5hZGRDbGFzcyhcInNsaWNrLWN1cnJlbnRcIiksXG4gICAgICAgICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSlcbiAgICAgICkge1xuICAgICAgICB2YXIgciA9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJSAyID09IDAgPyAxIDogMDtcbiAgICAgICAgKGUgPSBNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKSksXG4gICAgICAgICAgITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSAmJlxuICAgICAgICAgICAgKGkgPj0gZSAmJiBpIDw9IG4uc2xpZGVDb3VudCAtIDEgLSBlXG4gICAgICAgICAgICAgID8gbi4kc2xpZGVzXG4gICAgICAgICAgICAgICAgICAuc2xpY2UoaSAtIGUgKyByLCBpICsgZSArIDEpXG4gICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIilcbiAgICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKVxuICAgICAgICAgICAgICA6ICgobyA9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyBpKSxcbiAgICAgICAgICAgICAgICB0XG4gICAgICAgICAgICAgICAgICAuc2xpY2UobyAtIGUgKyAxICsgciwgbyArIGUgKyAyKVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwiZmFsc2VcIikpLFxuICAgICAgICAgICAgMCA9PT0gaVxuICAgICAgICAgICAgICA/IHRcbiAgICAgICAgICAgICAgICAgIC5lcSh0Lmxlbmd0aCAtIDEgLSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpXG4gICAgICAgICAgICAgIDogaSA9PT0gbi5zbGlkZUNvdW50IC0gMSAmJlxuICAgICAgICAgICAgICAgIHQuZXEobi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIikpLFxuICAgICAgICAgIG4uJHNsaWRlcy5lcShpKS5hZGRDbGFzcyhcInNsaWNrLWNlbnRlclwiKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBpID49IDAgJiYgaSA8PSBuLnNsaWRlQ291bnQgLSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyBuLiRzbGlkZXNcbiAgICAgICAgICAgICAgLnNsaWNlKGksIGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIilcbiAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpXG4gICAgICAgICAgOiB0Lmxlbmd0aCA8PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyB0LmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpXG4gICAgICAgICAgOiAoKHMgPSBuLnNsaWRlQ291bnQgJSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxcbiAgICAgICAgICAgIChvID0gITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyBpIDogaSksXG4gICAgICAgICAgICBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ID09IG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAmJlxuICAgICAgICAgICAgbi5zbGlkZUNvdW50IC0gaSA8IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICAgICAgPyB0XG4gICAgICAgICAgICAgICAgICAuc2xpY2UobyAtIChuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gcyksIG8gKyBzKVxuICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwiZmFsc2VcIilcbiAgICAgICAgICAgICAgOiB0XG4gICAgICAgICAgICAgICAgICAuc2xpY2UobywgbyArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpXG4gICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIilcbiAgICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKSk7XG4gICAgICAoXCJvbmRlbWFuZFwiICE9PSBuLm9wdGlvbnMubGF6eUxvYWQgJiZcbiAgICAgICAgXCJhbnRpY2lwYXRlZFwiICE9PSBuLm9wdGlvbnMubGF6eUxvYWQpIHx8XG4gICAgICAgIG4ubGF6eUxvYWQoKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKCEwID09PSBzLm9wdGlvbnMuZmFkZSAmJiAocy5vcHRpb25zLmNlbnRlck1vZGUgPSAhMSksXG4gICAgICAgICEwID09PSBzLm9wdGlvbnMuaW5maW5pdGUgJiZcbiAgICAgICAgICAhMSA9PT0gcy5vcHRpb25zLmZhZGUgJiZcbiAgICAgICAgICAoKHQgPSBudWxsKSwgcy5zbGlkZUNvdW50ID4gcy5vcHRpb25zLnNsaWRlc1RvU2hvdykpXG4gICAgICApIHtcbiAgICAgICAgZm9yIChcbiAgICAgICAgICBvID1cbiAgICAgICAgICAgICEwID09PSBzLm9wdGlvbnMuY2VudGVyTW9kZVxuICAgICAgICAgICAgICA/IHMub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyAxXG4gICAgICAgICAgICAgIDogcy5vcHRpb25zLnNsaWRlc1RvU2hvdyxcbiAgICAgICAgICAgIGUgPSBzLnNsaWRlQ291bnQ7XG4gICAgICAgICAgZSA+IHMuc2xpZGVDb3VudCAtIG87XG4gICAgICAgICAgZSAtPSAxXG4gICAgICAgIClcbiAgICAgICAgICAodCA9IGUgLSAxKSxcbiAgICAgICAgICAgIGkocy4kc2xpZGVzW3RdKVxuICAgICAgICAgICAgICAuY2xvbmUoITApXG4gICAgICAgICAgICAgIC5hdHRyKFwiaWRcIiwgXCJcIilcbiAgICAgICAgICAgICAgLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsIHQgLSBzLnNsaWRlQ291bnQpXG4gICAgICAgICAgICAgIC5wcmVwZW5kVG8ocy4kc2xpZGVUcmFjaylcbiAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO1xuICAgICAgICBmb3IgKGUgPSAwOyBlIDwgbyArIHMuc2xpZGVDb3VudDsgZSArPSAxKVxuICAgICAgICAgICh0ID0gZSksXG4gICAgICAgICAgICBpKHMuJHNsaWRlc1t0XSlcbiAgICAgICAgICAgICAgLmNsb25lKCEwKVxuICAgICAgICAgICAgICAuYXR0cihcImlkXCIsIFwiXCIpXG4gICAgICAgICAgICAgIC5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiLCB0ICsgcy5zbGlkZUNvdW50KVxuICAgICAgICAgICAgICAuYXBwZW5kVG8ocy4kc2xpZGVUcmFjaylcbiAgICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO1xuICAgICAgICBzLiRzbGlkZVRyYWNrXG4gICAgICAgICAgLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpXG4gICAgICAgICAgLmZpbmQoXCJbaWRdXCIpXG4gICAgICAgICAgLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaSh0aGlzKS5hdHRyKFwiaWRcIiwgXCJcIik7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLmludGVycnVwdCA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBpIHx8IGUuYXV0b1BsYXkoKSwgKGUuaW50ZXJydXB0ZWQgPSBpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUuc2VsZWN0SGFuZGxlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdCA9IHRoaXMsXG4gICAgICAgIG8gPSBpKGUudGFyZ2V0KS5pcyhcIi5zbGljay1zbGlkZVwiKVxuICAgICAgICAgID8gaShlLnRhcmdldClcbiAgICAgICAgICA6IGkoZS50YXJnZXQpLnBhcmVudHMoXCIuc2xpY2stc2xpZGVcIiksXG4gICAgICAgIHMgPSBwYXJzZUludChvLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpKTtcbiAgICAgIHMgfHwgKHMgPSAwKSxcbiAgICAgICAgdC5zbGlkZUNvdW50IDw9IHQub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgICA/IHQuc2xpZGVIYW5kbGVyKHMsICExLCAhMClcbiAgICAgICAgICA6IHQuc2xpZGVIYW5kbGVyKHMpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zbGlkZUhhbmRsZXIgPSBmdW5jdGlvbiAoaSwgZSwgdCkge1xuICAgICAgdmFyIG8sXG4gICAgICAgIHMsXG4gICAgICAgIG4sXG4gICAgICAgIHIsXG4gICAgICAgIGwsXG4gICAgICAgIGQgPSBudWxsLFxuICAgICAgICBhID0gdGhpcztcbiAgICAgIGlmIChcbiAgICAgICAgKChlID0gZSB8fCAhMSksXG4gICAgICAgICEoXG4gICAgICAgICAgKCEwID09PSBhLmFuaW1hdGluZyAmJiAhMCA9PT0gYS5vcHRpb25zLndhaXRGb3JBbmltYXRlKSB8fFxuICAgICAgICAgICghMCA9PT0gYS5vcHRpb25zLmZhZGUgJiYgYS5jdXJyZW50U2xpZGUgPT09IGkpXG4gICAgICAgICkpXG4gICAgICApXG4gICAgICAgIGlmIChcbiAgICAgICAgICAoITEgPT09IGUgJiYgYS5hc05hdkZvcihpKSxcbiAgICAgICAgICAobyA9IGkpLFxuICAgICAgICAgIChkID0gYS5nZXRMZWZ0KG8pKSxcbiAgICAgICAgICAociA9IGEuZ2V0TGVmdChhLmN1cnJlbnRTbGlkZSkpLFxuICAgICAgICAgIChhLmN1cnJlbnRMZWZ0ID0gbnVsbCA9PT0gYS5zd2lwZUxlZnQgPyByIDogYS5zd2lwZUxlZnQpLFxuICAgICAgICAgICExID09PSBhLm9wdGlvbnMuaW5maW5pdGUgJiZcbiAgICAgICAgICAgICExID09PSBhLm9wdGlvbnMuY2VudGVyTW9kZSAmJlxuICAgICAgICAgICAgKGkgPCAwIHx8IGkgPiBhLmdldERvdENvdW50KCkgKiBhLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKVxuICAgICAgICApXG4gICAgICAgICAgITEgPT09IGEub3B0aW9ucy5mYWRlICYmXG4gICAgICAgICAgICAoKG8gPSBhLmN1cnJlbnRTbGlkZSksXG4gICAgICAgICAgICAhMCAhPT0gdFxuICAgICAgICAgICAgICA/IGEuYW5pbWF0ZVNsaWRlKHIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIGEucG9zdFNsaWRlKG8pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIDogYS5wb3N0U2xpZGUobykpO1xuICAgICAgICBlbHNlIGlmIChcbiAgICAgICAgICAhMSA9PT0gYS5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgITAgPT09IGEub3B0aW9ucy5jZW50ZXJNb2RlICYmXG4gICAgICAgICAgKGkgPCAwIHx8IGkgPiBhLnNsaWRlQ291bnQgLSBhLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpXG4gICAgICAgIClcbiAgICAgICAgICAhMSA9PT0gYS5vcHRpb25zLmZhZGUgJiZcbiAgICAgICAgICAgICgobyA9IGEuY3VycmVudFNsaWRlKSxcbiAgICAgICAgICAgICEwICE9PSB0XG4gICAgICAgICAgICAgID8gYS5hbmltYXRlU2xpZGUociwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgYS5wb3N0U2xpZGUobyk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgOiBhLnBvc3RTbGlkZShvKSk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIChhLm9wdGlvbnMuYXV0b3BsYXkgJiYgY2xlYXJJbnRlcnZhbChhLmF1dG9QbGF5VGltZXIpLFxuICAgICAgICAgICAgKHMgPVxuICAgICAgICAgICAgICBvIDwgMFxuICAgICAgICAgICAgICAgID8gYS5zbGlkZUNvdW50ICUgYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9IDBcbiAgICAgICAgICAgICAgICAgID8gYS5zbGlkZUNvdW50IC0gKGEuc2xpZGVDb3VudCAlIGEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbClcbiAgICAgICAgICAgICAgICAgIDogYS5zbGlkZUNvdW50ICsgb1xuICAgICAgICAgICAgICAgIDogbyA+PSBhLnNsaWRlQ291bnRcbiAgICAgICAgICAgICAgICA/IGEuc2xpZGVDb3VudCAlIGEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPSAwXG4gICAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICAgIDogbyAtIGEuc2xpZGVDb3VudFxuICAgICAgICAgICAgICAgIDogbyksXG4gICAgICAgICAgICAoYS5hbmltYXRpbmcgPSAhMCksXG4gICAgICAgICAgICBhLiRzbGlkZXIudHJpZ2dlcihcImJlZm9yZUNoYW5nZVwiLCBbYSwgYS5jdXJyZW50U2xpZGUsIHNdKSxcbiAgICAgICAgICAgIChuID0gYS5jdXJyZW50U2xpZGUpLFxuICAgICAgICAgICAgKGEuY3VycmVudFNsaWRlID0gcyksXG4gICAgICAgICAgICBhLnNldFNsaWRlQ2xhc3NlcyhhLmN1cnJlbnRTbGlkZSksXG4gICAgICAgICAgICBhLm9wdGlvbnMuYXNOYXZGb3IgJiZcbiAgICAgICAgICAgICAgKGwgPSAobCA9IGEuZ2V0TmF2VGFyZ2V0KCkpLnNsaWNrKFwiZ2V0U2xpY2tcIikpLnNsaWRlQ291bnQgPD1cbiAgICAgICAgICAgICAgICBsLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgICAgICAgIGwuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSxcbiAgICAgICAgICAgIGEudXBkYXRlRG90cygpLFxuICAgICAgICAgICAgYS51cGRhdGVBcnJvd3MoKSxcbiAgICAgICAgICAgICEwID09PSBhLm9wdGlvbnMuZmFkZSlcbiAgICAgICAgICApXG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAhMCAhPT0gdFxuICAgICAgICAgICAgICAgID8gKGEuZmFkZVNsaWRlT3V0KG4pLFxuICAgICAgICAgICAgICAgICAgYS5mYWRlU2xpZGUocywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBhLnBvc3RTbGlkZShzKTtcbiAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIDogYS5wb3N0U2xpZGUocyksXG4gICAgICAgICAgICAgIHZvaWQgYS5hbmltYXRlSGVpZ2h0KClcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgITAgIT09IHRcbiAgICAgICAgICAgID8gYS5hbmltYXRlU2xpZGUoZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGEucG9zdFNsaWRlKHMpO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgOiBhLnBvc3RTbGlkZShzKTtcbiAgICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zdGFydExvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICAhMCA9PT0gaS5vcHRpb25zLmFycm93cyAmJlxuICAgICAgICBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAgIChpLiRwcmV2QXJyb3cuaGlkZSgpLCBpLiRuZXh0QXJyb3cuaGlkZSgpKSxcbiAgICAgICAgITAgPT09IGkub3B0aW9ucy5kb3RzICYmXG4gICAgICAgICAgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgIGkuJGRvdHMuaGlkZSgpLFxuICAgICAgICBpLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zd2lwZURpcmVjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpLFxuICAgICAgICBlLFxuICAgICAgICB0LFxuICAgICAgICBvLFxuICAgICAgICBzID0gdGhpcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIChpID0gcy50b3VjaE9iamVjdC5zdGFydFggLSBzLnRvdWNoT2JqZWN0LmN1clgpLFxuICAgICAgICAoZSA9IHMudG91Y2hPYmplY3Quc3RhcnRZIC0gcy50b3VjaE9iamVjdC5jdXJZKSxcbiAgICAgICAgKHQgPSBNYXRoLmF0YW4yKGUsIGkpKSxcbiAgICAgICAgKG8gPSBNYXRoLnJvdW5kKCgxODAgKiB0KSAvIE1hdGguUEkpKSA8IDAgJiYgKG8gPSAzNjAgLSBNYXRoLmFicyhvKSksXG4gICAgICAgIG8gPD0gNDUgJiYgbyA+PSAwXG4gICAgICAgICAgPyAhMSA9PT0gcy5vcHRpb25zLnJ0bFxuICAgICAgICAgICAgPyBcImxlZnRcIlxuICAgICAgICAgICAgOiBcInJpZ2h0XCJcbiAgICAgICAgICA6IG8gPD0gMzYwICYmIG8gPj0gMzE1XG4gICAgICAgICAgPyAhMSA9PT0gcy5vcHRpb25zLnJ0bFxuICAgICAgICAgICAgPyBcImxlZnRcIlxuICAgICAgICAgICAgOiBcInJpZ2h0XCJcbiAgICAgICAgICA6IG8gPj0gMTM1ICYmIG8gPD0gMjI1XG4gICAgICAgICAgPyAhMSA9PT0gcy5vcHRpb25zLnJ0bFxuICAgICAgICAgICAgPyBcInJpZ2h0XCJcbiAgICAgICAgICAgIDogXCJsZWZ0XCJcbiAgICAgICAgICA6ICEwID09PSBzLm9wdGlvbnMudmVydGljYWxTd2lwaW5nXG4gICAgICAgICAgPyBvID49IDM1ICYmIG8gPD0gMTM1XG4gICAgICAgICAgICA/IFwiZG93blwiXG4gICAgICAgICAgICA6IFwidXBcIlxuICAgICAgICAgIDogXCJ2ZXJ0aWNhbFwiXG4gICAgICApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zd2lwZUVuZCA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSxcbiAgICAgICAgdCxcbiAgICAgICAgbyA9IHRoaXM7XG4gICAgICBpZiAoKChvLmRyYWdnaW5nID0gITEpLCAoby5zd2lwaW5nID0gITEpLCBvLnNjcm9sbGluZykpXG4gICAgICAgIHJldHVybiAoby5zY3JvbGxpbmcgPSAhMSksICExO1xuICAgICAgaWYgKFxuICAgICAgICAoKG8uaW50ZXJydXB0ZWQgPSAhMSksXG4gICAgICAgIChvLnNob3VsZENsaWNrID0gIShvLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID4gMTApKSxcbiAgICAgICAgdm9pZCAwID09PSBvLnRvdWNoT2JqZWN0LmN1clgpXG4gICAgICApXG4gICAgICAgIHJldHVybiAhMTtcbiAgICAgIGlmIChcbiAgICAgICAgKCEwID09PSBvLnRvdWNoT2JqZWN0LmVkZ2VIaXQgJiZcbiAgICAgICAgICBvLiRzbGlkZXIudHJpZ2dlcihcImVkZ2VcIiwgW28sIG8uc3dpcGVEaXJlY3Rpb24oKV0pLFxuICAgICAgICBvLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID49IG8udG91Y2hPYmplY3QubWluU3dpcGUpXG4gICAgICApIHtcbiAgICAgICAgc3dpdGNoICgodCA9IG8uc3dpcGVEaXJlY3Rpb24oKSkpIHtcbiAgICAgICAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgICAgIGNhc2UgXCJkb3duXCI6XG4gICAgICAgICAgICAoZSA9IG8ub3B0aW9ucy5zd2lwZVRvU2xpZGVcbiAgICAgICAgICAgICAgPyBvLmNoZWNrTmF2aWdhYmxlKG8uY3VycmVudFNsaWRlICsgby5nZXRTbGlkZUNvdW50KCkpXG4gICAgICAgICAgICAgIDogby5jdXJyZW50U2xpZGUgKyBvLmdldFNsaWRlQ291bnQoKSksXG4gICAgICAgICAgICAgIChvLmN1cnJlbnREaXJlY3Rpb24gPSAwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJyaWdodFwiOlxuICAgICAgICAgIGNhc2UgXCJ1cFwiOlxuICAgICAgICAgICAgKGUgPSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlXG4gICAgICAgICAgICAgID8gby5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZSAtIG8uZ2V0U2xpZGVDb3VudCgpKVxuICAgICAgICAgICAgICA6IG8uY3VycmVudFNsaWRlIC0gby5nZXRTbGlkZUNvdW50KCkpLFxuICAgICAgICAgICAgICAoby5jdXJyZW50RGlyZWN0aW9uID0gMSk7XG4gICAgICAgIH1cbiAgICAgICAgXCJ2ZXJ0aWNhbFwiICE9IHQgJiZcbiAgICAgICAgICAoby5zbGlkZUhhbmRsZXIoZSksXG4gICAgICAgICAgKG8udG91Y2hPYmplY3QgPSB7fSksXG4gICAgICAgICAgby4kc2xpZGVyLnRyaWdnZXIoXCJzd2lwZVwiLCBbbywgdF0pKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBvLnRvdWNoT2JqZWN0LnN0YXJ0WCAhPT0gby50b3VjaE9iamVjdC5jdXJYICYmXG4gICAgICAgICAgKG8uc2xpZGVIYW5kbGVyKG8uY3VycmVudFNsaWRlKSwgKG8udG91Y2hPYmplY3QgPSB7fSkpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zd2lwZUhhbmRsZXIgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgaWYgKFxuICAgICAgICAhKFxuICAgICAgICAgICExID09PSBlLm9wdGlvbnMuc3dpcGUgfHxcbiAgICAgICAgICAoXCJvbnRvdWNoZW5kXCIgaW4gZG9jdW1lbnQgJiYgITEgPT09IGUub3B0aW9ucy5zd2lwZSkgfHxcbiAgICAgICAgICAoITEgPT09IGUub3B0aW9ucy5kcmFnZ2FibGUgJiYgLTEgIT09IGkudHlwZS5pbmRleE9mKFwibW91c2VcIikpXG4gICAgICAgIClcbiAgICAgIClcbiAgICAgICAgc3dpdGNoIChcbiAgICAgICAgICAoKGUudG91Y2hPYmplY3QuZmluZ2VyQ291bnQgPVxuICAgICAgICAgICAgaS5vcmlnaW5hbEV2ZW50ICYmIHZvaWQgMCAhPT0gaS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNcbiAgICAgICAgICAgICAgPyBpLm9yaWdpbmFsRXZlbnQudG91Y2hlcy5sZW5ndGhcbiAgICAgICAgICAgICAgOiAxKSxcbiAgICAgICAgICAoZS50b3VjaE9iamVjdC5taW5Td2lwZSA9IGUubGlzdFdpZHRoIC8gZS5vcHRpb25zLnRvdWNoVGhyZXNob2xkKSxcbiAgICAgICAgICAhMCA9PT0gZS5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJlxuICAgICAgICAgICAgKGUudG91Y2hPYmplY3QubWluU3dpcGUgPSBlLmxpc3RIZWlnaHQgLyBlLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQpLFxuICAgICAgICAgIGkuZGF0YS5hY3Rpb24pXG4gICAgICAgICkge1xuICAgICAgICAgIGNhc2UgXCJzdGFydFwiOlxuICAgICAgICAgICAgZS5zd2lwZVN0YXJ0KGkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIm1vdmVcIjpcbiAgICAgICAgICAgIGUuc3dpcGVNb3ZlKGkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgZS5zd2lwZUVuZChpKTtcbiAgICAgICAgfVxuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS5zd2lwZU1vdmUgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQsXG4gICAgICAgIG8sXG4gICAgICAgIHMsXG4gICAgICAgIG4sXG4gICAgICAgIHIsXG4gICAgICAgIGwgPSB0aGlzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKG4gPSB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudCA/IGkub3JpZ2luYWxFdmVudC50b3VjaGVzIDogbnVsbCksXG4gICAgICAgICEoIWwuZHJhZ2dpbmcgfHwgbC5zY3JvbGxpbmcgfHwgKG4gJiYgMSAhPT0gbi5sZW5ndGgpKSAmJlxuICAgICAgICAgICgoZSA9IGwuZ2V0TGVmdChsLmN1cnJlbnRTbGlkZSkpLFxuICAgICAgICAgIChsLnRvdWNoT2JqZWN0LmN1clggPSB2b2lkIDAgIT09IG4gPyBuWzBdLnBhZ2VYIDogaS5jbGllbnRYKSxcbiAgICAgICAgICAobC50b3VjaE9iamVjdC5jdXJZID0gdm9pZCAwICE9PSBuID8gblswXS5wYWdlWSA6IGkuY2xpZW50WSksXG4gICAgICAgICAgKGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPSBNYXRoLnJvdW5kKFxuICAgICAgICAgICAgTWF0aC5zcXJ0KE1hdGgucG93KGwudG91Y2hPYmplY3QuY3VyWCAtIGwudG91Y2hPYmplY3Quc3RhcnRYLCAyKSlcbiAgICAgICAgICApKSxcbiAgICAgICAgICAociA9IE1hdGgucm91bmQoXG4gICAgICAgICAgICBNYXRoLnNxcnQoTWF0aC5wb3cobC50b3VjaE9iamVjdC5jdXJZIC0gbC50b3VjaE9iamVjdC5zdGFydFksIDIpKVxuICAgICAgICAgICkpLFxuICAgICAgICAgICFsLm9wdGlvbnMudmVydGljYWxTd2lwaW5nICYmICFsLnN3aXBpbmcgJiYgciA+IDRcbiAgICAgICAgICAgID8gKChsLnNjcm9sbGluZyA9ICEwKSwgITEpXG4gICAgICAgICAgICA6ICghMCA9PT0gbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJlxuICAgICAgICAgICAgICAgIChsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID0gciksXG4gICAgICAgICAgICAgICh0ID0gbC5zd2lwZURpcmVjdGlvbigpKSxcbiAgICAgICAgICAgICAgdm9pZCAwICE9PSBpLm9yaWdpbmFsRXZlbnQgJiZcbiAgICAgICAgICAgICAgICBsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID4gNCAmJlxuICAgICAgICAgICAgICAgICgobC5zd2lwaW5nID0gITApLCBpLnByZXZlbnREZWZhdWx0KCkpLFxuICAgICAgICAgICAgICAocyA9XG4gICAgICAgICAgICAgICAgKCExID09PSBsLm9wdGlvbnMucnRsID8gMSA6IC0xKSAqXG4gICAgICAgICAgICAgICAgKGwudG91Y2hPYmplY3QuY3VyWCA+IGwudG91Y2hPYmplY3Quc3RhcnRYID8gMSA6IC0xKSksXG4gICAgICAgICAgICAgICEwID09PSBsLm9wdGlvbnMudmVydGljYWxTd2lwaW5nICYmXG4gICAgICAgICAgICAgICAgKHMgPSBsLnRvdWNoT2JqZWN0LmN1clkgPiBsLnRvdWNoT2JqZWN0LnN0YXJ0WSA/IDEgOiAtMSksXG4gICAgICAgICAgICAgIChvID0gbC50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCksXG4gICAgICAgICAgICAgIChsLnRvdWNoT2JqZWN0LmVkZ2VIaXQgPSAhMSksXG4gICAgICAgICAgICAgICExID09PSBsLm9wdGlvbnMuaW5maW5pdGUgJiZcbiAgICAgICAgICAgICAgICAoKDAgPT09IGwuY3VycmVudFNsaWRlICYmIFwicmlnaHRcIiA9PT0gdCkgfHxcbiAgICAgICAgICAgICAgICAgIChsLmN1cnJlbnRTbGlkZSA+PSBsLmdldERvdENvdW50KCkgJiYgXCJsZWZ0XCIgPT09IHQpKSAmJlxuICAgICAgICAgICAgICAgICgobyA9IGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGggKiBsLm9wdGlvbnMuZWRnZUZyaWN0aW9uKSxcbiAgICAgICAgICAgICAgICAobC50b3VjaE9iamVjdC5lZGdlSGl0ID0gITApKSxcbiAgICAgICAgICAgICAgITEgPT09IGwub3B0aW9ucy52ZXJ0aWNhbFxuICAgICAgICAgICAgICAgID8gKGwuc3dpcGVMZWZ0ID0gZSArIG8gKiBzKVxuICAgICAgICAgICAgICAgIDogKGwuc3dpcGVMZWZ0ID0gZSArIG8gKiAobC4kbGlzdC5oZWlnaHQoKSAvIGwubGlzdFdpZHRoKSAqIHMpLFxuICAgICAgICAgICAgICAhMCA9PT0gbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJiAobC5zd2lwZUxlZnQgPSBlICsgbyAqIHMpLFxuICAgICAgICAgICAgICAhMCAhPT0gbC5vcHRpb25zLmZhZGUgJiZcbiAgICAgICAgICAgICAgICAhMSAhPT0gbC5vcHRpb25zLnRvdWNoTW92ZSAmJlxuICAgICAgICAgICAgICAgICghMCA9PT0gbC5hbmltYXRpbmdcbiAgICAgICAgICAgICAgICAgID8gKChsLnN3aXBlTGVmdCA9IG51bGwpLCAhMSlcbiAgICAgICAgICAgICAgICAgIDogdm9pZCBsLnNldENTUyhsLnN3aXBlTGVmdCkpKSlcbiAgICAgICk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnN3aXBlU3RhcnQgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIHQgPSB0aGlzO1xuICAgICAgaWYgKFxuICAgICAgICAoKHQuaW50ZXJydXB0ZWQgPSAhMCksXG4gICAgICAgIDEgIT09IHQudG91Y2hPYmplY3QuZmluZ2VyQ291bnQgfHxcbiAgICAgICAgICB0LnNsaWRlQ291bnQgPD0gdC5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgIClcbiAgICAgICAgcmV0dXJuICh0LnRvdWNoT2JqZWN0ID0ge30pLCAhMTtcbiAgICAgIHZvaWQgMCAhPT0gaS5vcmlnaW5hbEV2ZW50ICYmXG4gICAgICAgIHZvaWQgMCAhPT0gaS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMgJiZcbiAgICAgICAgKGUgPSBpLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXSksXG4gICAgICAgICh0LnRvdWNoT2JqZWN0LnN0YXJ0WCA9IHQudG91Y2hPYmplY3QuY3VyWCA9XG4gICAgICAgICAgdm9pZCAwICE9PSBlID8gZS5wYWdlWCA6IGkuY2xpZW50WCksXG4gICAgICAgICh0LnRvdWNoT2JqZWN0LnN0YXJ0WSA9IHQudG91Y2hPYmplY3QuY3VyWSA9XG4gICAgICAgICAgdm9pZCAwICE9PSBlID8gZS5wYWdlWSA6IGkuY2xpZW50WSksXG4gICAgICAgICh0LmRyYWdnaW5nID0gITApO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS51bmZpbHRlclNsaWRlcyA9IGUucHJvdG90eXBlLnNsaWNrVW5maWx0ZXIgPVxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaSA9IHRoaXM7XG4gICAgICAgIG51bGwgIT09IGkuJHNsaWRlc0NhY2hlICYmXG4gICAgICAgICAgKGkudW5sb2FkKCksXG4gICAgICAgICAgaS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLFxuICAgICAgICAgIGkuJHNsaWRlc0NhY2hlLmFwcGVuZFRvKGkuJHNsaWRlVHJhY2spLFxuICAgICAgICAgIGkucmVpbml0KCkpO1xuICAgICAgfSksXG4gICAgKGUucHJvdG90eXBlLnVubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBlID0gdGhpcztcbiAgICAgIGkoXCIuc2xpY2stY2xvbmVkXCIsIGUuJHNsaWRlcikucmVtb3ZlKCksXG4gICAgICAgIGUuJGRvdHMgJiYgZS4kZG90cy5yZW1vdmUoKSxcbiAgICAgICAgZS4kcHJldkFycm93ICYmXG4gICAgICAgICAgZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5wcmV2QXJyb3cpICYmXG4gICAgICAgICAgZS4kcHJldkFycm93LnJlbW92ZSgpLFxuICAgICAgICBlLiRuZXh0QXJyb3cgJiZcbiAgICAgICAgICBlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykgJiZcbiAgICAgICAgICBlLiRuZXh0QXJyb3cucmVtb3ZlKCksXG4gICAgICAgIGUuJHNsaWRlc1xuICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLXNsaWRlIHNsaWNrLWFjdGl2ZSBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnRcIilcbiAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwidHJ1ZVwiKVxuICAgICAgICAgIC5jc3MoXCJ3aWR0aFwiLCBcIlwiKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUudW5zbGljayA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICBlLiRzbGlkZXIudHJpZ2dlcihcInVuc2xpY2tcIiwgW2UsIGldKSwgZS5kZXN0cm95KCk7XG4gICAgfSksXG4gICAgKGUucHJvdG90eXBlLnVwZGF0ZUFycm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIE1hdGguZmxvb3IoaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpLFxuICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmFycm93cyAmJlxuICAgICAgICAgIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAhaS5vcHRpb25zLmluZmluaXRlICYmXG4gICAgICAgICAgKGkuJHByZXZBcnJvd1xuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpLFxuICAgICAgICAgIGkuJG5leHRBcnJvd1xuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpLFxuICAgICAgICAgIDAgPT09IGkuY3VycmVudFNsaWRlXG4gICAgICAgICAgICA/IChpLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcInRydWVcIiksXG4gICAgICAgICAgICAgIGkuJG5leHRBcnJvd1xuICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwiZmFsc2VcIikpXG4gICAgICAgICAgICA6IGkuY3VycmVudFNsaWRlID49IGkuc2xpZGVDb3VudCAtIGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgICAgICAgITEgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlXG4gICAgICAgICAgICA/IChpLiRuZXh0QXJyb3dcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcInRydWVcIiksXG4gICAgICAgICAgICAgIGkuJHByZXZBcnJvd1xuICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwiZmFsc2VcIikpXG4gICAgICAgICAgICA6IGkuY3VycmVudFNsaWRlID49IGkuc2xpZGVDb3VudCAtIDEgJiZcbiAgICAgICAgICAgICAgITAgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlICYmXG4gICAgICAgICAgICAgIChpLiRuZXh0QXJyb3dcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcInRydWVcIiksXG4gICAgICAgICAgICAgIGkuJHByZXZBcnJvd1xuICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwiZmFsc2VcIikpKTtcbiAgICB9KSxcbiAgICAoZS5wcm90b3R5cGUudXBkYXRlRG90cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpID0gdGhpcztcbiAgICAgIG51bGwgIT09IGkuJGRvdHMgJiZcbiAgICAgICAgKGkuJGRvdHMuZmluZChcImxpXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlXCIpLmVuZCgpLFxuICAgICAgICBpLiRkb3RzXG4gICAgICAgICAgLmZpbmQoXCJsaVwiKVxuICAgICAgICAgIC5lcShNYXRoLmZsb29yKGkuY3VycmVudFNsaWRlIC8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSlcbiAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikpO1xuICAgIH0pLFxuICAgIChlLnByb3RvdHlwZS52aXNpYmlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGkgPSB0aGlzO1xuICAgICAgaS5vcHRpb25zLmF1dG9wbGF5ICYmXG4gICAgICAgIChkb2N1bWVudFtpLmhpZGRlbl0gPyAoaS5pbnRlcnJ1cHRlZCA9ICEwKSA6IChpLmludGVycnVwdGVkID0gITEpKTtcbiAgICB9KSxcbiAgICAoaS5mbi5zbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpLFxuICAgICAgICB0LFxuICAgICAgICBvID0gdGhpcyxcbiAgICAgICAgcyA9IGFyZ3VtZW50c1swXSxcbiAgICAgICAgbiA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSksXG4gICAgICAgIHIgPSBvLmxlbmd0aDtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCByOyBpKyspXG4gICAgICAgIGlmIChcbiAgICAgICAgICAoXCJvYmplY3RcIiA9PSB0eXBlb2YgcyB8fCB2b2lkIDAgPT09IHNcbiAgICAgICAgICAgID8gKG9baV0uc2xpY2sgPSBuZXcgZShvW2ldLCBzKSlcbiAgICAgICAgICAgIDogKHQgPSBvW2ldLnNsaWNrW3NdLmFwcGx5KG9baV0uc2xpY2ssIG4pKSxcbiAgICAgICAgICB2b2lkIDAgIT09IHQpXG4gICAgICAgIClcbiAgICAgICAgICByZXR1cm4gdDtcbiAgICAgIHJldHVybiBvO1xuICAgIH0pO1xufSk7XG5cbigoKSA9PiB7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBpbml0TG96YWQoKTtcbiAgICBpbml0TW9iaWxlTWVudSgpO1xuICAgIC8vIGNoYW5nZUhlcm8oKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gaW5pdExvemFkKCkge1xuICAgIGNvbnN0IG9ic2VydmVyID0gbG96YWQoKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKCk7XG4gIH1cbn0pKCk7XG5cbmZ1bmN0aW9uIGNoYW5nZUhlcm8oKSB7XG4gIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVybycpO1xuICBpZighc2VjdGlvbikgcmV0dXJuO1xuXG4gIGNvbnN0IG9wdGlvbnMgPSBbXCIuL2Rlc3QvaW1nL2hlcm8tMDEuanBnXCIsIFwiLi9kZXN0L2ltZy9oZXJvLTAyLmpwZ1wiLCBcIi4vZGVzdC9pbWcvaGVyby0wMy5qcGdcIl07XG4gIGxldCBpbmRleCA9IDA7XG5cbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIHNlY3Rpb24uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gIGB1cmwoJHtvcHRpb25zW2luZGV4XX0pYDtcbiAgICBpbmRleCA9IGluZGV4ICsgMSA+IG9wdGlvbnMubGVuZ3RoIC0gMSA/IGluZGV4ID0gMCA6IGluZGV4ICsgMTsgXG4gIH0sIDQwMDApO1xufVxuLyohIGxvemFkLmpzIC0gdjEuMTYuMCAtIDIwMjAtMDktMDZcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9BcG9vcnZTYXhlbmEvbG96YWQuanNcbiAqIENvcHlyaWdodCAoYykgMjAyMCBBcG9vcnYgU2F4ZW5hOyBMaWNlbnNlZCBNSVQgKi9cblxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgdHlwZW9mIGV4cG9ydHMgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZSAhPT0gXCJ1bmRlZmluZWRcIlxuICAgID8gKG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpKVxuICAgIDogdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWRcbiAgICA/IGRlZmluZShmYWN0b3J5KVxuICAgIDogKGdsb2JhbC5sb3phZCA9IGZhY3RvcnkoKSk7XG59KSh0aGlzLCBmdW5jdGlvbiAoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIC8qKlxuICAgKiBEZXRlY3QgSUUgYnJvd3NlclxuICAgKiBAY29uc3Qge2Jvb2xlYW59XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB2YXIgaXNJRSA9IHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudC5kb2N1bWVudE1vZGU7XG5cbiAgdmFyIGRlZmF1bHRDb25maWcgPSB7XG4gICAgcm9vdE1hcmdpbjogXCIwcHhcIixcbiAgICB0aHJlc2hvbGQ6IDAsXG4gICAgbG9hZDogZnVuY3Rpb24gbG9hZChlbGVtZW50KSB7XG4gICAgICBpZiAoZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInBpY3R1cmVcIikge1xuICAgICAgICB2YXIgaW1nID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiaW1nXCIpO1xuICAgICAgICB2YXIgYXBwZW5kID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKGltZyA9PT0gbnVsbCkge1xuICAgICAgICAgIGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICAgICAgYXBwZW5kID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0lFICYmIGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZXNyY1wiKSkge1xuICAgICAgICAgIGltZy5zcmMgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtaWVzcmNcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWFsdFwiKSkge1xuICAgICAgICAgIGltZy5hbHQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYWx0XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFwcGVuZCkge1xuICAgICAgICAgIGVsZW1lbnQuYXBwZW5kKGltZyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwidmlkZW9cIiAmJlxuICAgICAgICAhZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKVxuICAgICAgKSB7XG4gICAgICAgIGlmIChlbGVtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgdmFyIGNoaWxkcyA9IGVsZW1lbnQuY2hpbGRyZW47XG4gICAgICAgICAgdmFyIGNoaWxkU3JjID0gdm9pZCAwO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IGNoaWxkcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgIGNoaWxkU3JjID0gY2hpbGRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGEtc3JjXCIpO1xuICAgICAgICAgICAgaWYgKGNoaWxkU3JjKSB7XG4gICAgICAgICAgICAgIGNoaWxkc1tpXS5zcmMgPSBjaGlsZFNyYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlbGVtZW50LmxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBvc3RlclwiKSkge1xuICAgICAgICBlbGVtZW50LnBvc3RlciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1wb3N0ZXJcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtc3JjXCIpKSB7XG4gICAgICAgIGVsZW1lbnQuc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNzZXRcIikpIHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzcmNzZXRcIiwgZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY3NldFwiKSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBiYWNrZ3JvdW5kSW1hZ2VEZWxpbWl0ZXIgPSBcIixcIjtcbiAgICAgIGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYmFja2dyb3VuZC1kZWxpbWl0ZXJcIikpIHtcbiAgICAgICAgYmFja2dyb3VuZEltYWdlRGVsaW1pdGVyID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgXCJkYXRhLWJhY2tncm91bmQtZGVsaW1pdGVyXCJcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1iYWNrZ3JvdW5kLWltYWdlXCIpKSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZEltYWdlID1cbiAgICAgICAgICBcInVybCgnXCIgK1xuICAgICAgICAgIGVsZW1lbnRcbiAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJhY2tncm91bmQtaW1hZ2VcIilcbiAgICAgICAgICAgIC5zcGxpdChiYWNrZ3JvdW5kSW1hZ2VEZWxpbWl0ZXIpXG4gICAgICAgICAgICAuam9pbihcIicpLHVybCgnXCIpICtcbiAgICAgICAgICBcIicpXCI7XG4gICAgICB9IGVsc2UgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1iYWNrZ3JvdW5kLWltYWdlLXNldFwiKSkge1xuICAgICAgICB2YXIgaW1hZ2VTZXRMaW5rcyA9IGVsZW1lbnRcbiAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiZGF0YS1iYWNrZ3JvdW5kLWltYWdlLXNldFwiKVxuICAgICAgICAgIC5zcGxpdChiYWNrZ3JvdW5kSW1hZ2VEZWxpbWl0ZXIpO1xuICAgICAgICB2YXIgZmlyc3RVcmxMaW5rID1cbiAgICAgICAgICBpbWFnZVNldExpbmtzWzBdLnN1YnN0cigwLCBpbWFnZVNldExpbmtzWzBdLmluZGV4T2YoXCIgXCIpKSB8fFxuICAgICAgICAgIGltYWdlU2V0TGlua3NbMF07IC8vIFN1YnN0cmluZyBiZWZvcmUgLi4uIDF4XG4gICAgICAgIGZpcnN0VXJsTGluayA9XG4gICAgICAgICAgZmlyc3RVcmxMaW5rLmluZGV4T2YoXCJ1cmwoXCIpID09PSAtMVxuICAgICAgICAgICAgPyBcInVybChcIiArIGZpcnN0VXJsTGluayArIFwiKVwiXG4gICAgICAgICAgICA6IGZpcnN0VXJsTGluaztcbiAgICAgICAgaWYgKGltYWdlU2V0TGlua3MubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBmaXJzdFVybExpbms7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgICBcInN0eWxlXCIsXG4gICAgICAgICAgICAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzdHlsZVwiKSB8fCBcIlwiKSArXG4gICAgICAgICAgICAgIChcImJhY2tncm91bmQtaW1hZ2U6IFwiICtcbiAgICAgICAgICAgICAgICBmaXJzdFVybExpbmsgK1xuICAgICAgICAgICAgICAgIFwiOyBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWltYWdlLXNldChcIiArXG4gICAgICAgICAgICAgICAgaW1hZ2VTZXRMaW5rcyArXG4gICAgICAgICAgICAgICAgXCIpOyBiYWNrZ3JvdW5kLWltYWdlOiBpbWFnZS1zZXQoXCIgK1xuICAgICAgICAgICAgICAgIGltYWdlU2V0TGlua3MgK1xuICAgICAgICAgICAgICAgIFwiKVwiKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGUtY2xhc3NcIikpIHtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGUtY2xhc3NcIikpO1xuICAgICAgfVxuICAgIH0sXG4gICAgbG9hZGVkOiBmdW5jdGlvbiBsb2FkZWQoKSB7fSxcbiAgfTtcblxuICBmdW5jdGlvbiBtYXJrQXNMb2FkZWQoZWxlbWVudCkge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS1sb2FkZWRcIiwgdHJ1ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBwcmVMb2FkKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBsYWNlaG9sZGVyLWJhY2tncm91bmRcIikpIHtcbiAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFxuICAgICAgICBcImRhdGEtcGxhY2Vob2xkZXItYmFja2dyb3VuZFwiXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0xvYWRlZCA9IGZ1bmN0aW9uIGlzTG9hZGVkKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWxvYWRlZFwiKSA9PT0gXCJ0cnVlXCI7XG4gIH07XG5cbiAgdmFyIG9uSW50ZXJzZWN0aW9uID0gZnVuY3Rpb24gb25JbnRlcnNlY3Rpb24obG9hZCwgbG9hZGVkKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbnRyaWVzLCBvYnNlcnZlcikge1xuICAgICAgZW50cmllcy5mb3JFYWNoKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgICAgICBpZiAoZW50cnkuaW50ZXJzZWN0aW9uUmF0aW8gPiAwIHx8IGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgb2JzZXJ2ZXIudW5vYnNlcnZlKGVudHJ5LnRhcmdldCk7XG5cbiAgICAgICAgICBpZiAoIWlzTG9hZGVkKGVudHJ5LnRhcmdldCkpIHtcbiAgICAgICAgICAgIGxvYWQoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgICAgIG1hcmtBc0xvYWRlZChlbnRyeS50YXJnZXQpO1xuICAgICAgICAgICAgbG9hZGVkKGVudHJ5LnRhcmdldCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBnZXRFbGVtZW50cyA9IGZ1bmN0aW9uIGdldEVsZW1lbnRzKHNlbGVjdG9yKSB7XG4gICAgdmFyIHJvb3QgPVxuICAgICAgYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBhcmd1bWVudHNbMV1cbiAgICAgICAgOiBkb2N1bWVudDtcblxuICAgIGlmIChzZWxlY3RvciBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBbc2VsZWN0b3JdO1xuICAgIH1cblxuICAgIGlmIChzZWxlY3RvciBpbnN0YW5jZW9mIE5vZGVMaXN0KSB7XG4gICAgICByZXR1cm4gc2VsZWN0b3I7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvb3QucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gIH07XG5cbiAgZnVuY3Rpb24gbG96YWQoKSB7XG4gICAgdmFyIHNlbGVjdG9yID1cbiAgICAgIGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gYXJndW1lbnRzWzBdXG4gICAgICAgIDogXCIubG96YWRcIjtcbiAgICB2YXIgb3B0aW9ucyA9XG4gICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gICAgdmFyIF9PYmplY3QkYXNzaWduID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENvbmZpZywgb3B0aW9ucyksXG4gICAgICByb290ID0gX09iamVjdCRhc3NpZ24ucm9vdCxcbiAgICAgIHJvb3RNYXJnaW4gPSBfT2JqZWN0JGFzc2lnbi5yb290TWFyZ2luLFxuICAgICAgdGhyZXNob2xkID0gX09iamVjdCRhc3NpZ24udGhyZXNob2xkLFxuICAgICAgbG9hZCA9IF9PYmplY3QkYXNzaWduLmxvYWQsXG4gICAgICBsb2FkZWQgPSBfT2JqZWN0JGFzc2lnbi5sb2FkZWQ7XG5cbiAgICB2YXIgb2JzZXJ2ZXIgPSB2b2lkIDA7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuSW50ZXJzZWN0aW9uT2JzZXJ2ZXIpIHtcbiAgICAgIG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKG9uSW50ZXJzZWN0aW9uKGxvYWQsIGxvYWRlZCksIHtcbiAgICAgICAgcm9vdDogcm9vdCxcbiAgICAgICAgcm9vdE1hcmdpbjogcm9vdE1hcmdpbixcbiAgICAgICAgdGhyZXNob2xkOiB0aHJlc2hvbGQsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudHMgPSBnZXRFbGVtZW50cyhzZWxlY3Rvciwgcm9vdCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgcHJlTG9hZChlbGVtZW50c1tpXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIG9ic2VydmU6IGZ1bmN0aW9uIG9ic2VydmUoKSB7XG4gICAgICAgIHZhciBlbGVtZW50cyA9IGdldEVsZW1lbnRzKHNlbGVjdG9yLCByb290KTtcblxuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZWxlbWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgaWYgKGlzTG9hZGVkKGVsZW1lbnRzW19pXSkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50c1tfaV0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbG9hZChlbGVtZW50c1tfaV0pO1xuICAgICAgICAgIG1hcmtBc0xvYWRlZChlbGVtZW50c1tfaV0pO1xuICAgICAgICAgIGxvYWRlZChlbGVtZW50c1tfaV0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdHJpZ2dlckxvYWQ6IGZ1bmN0aW9uIHRyaWdnZXJMb2FkKGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKGlzTG9hZGVkKGVsZW1lbnQpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbG9hZChlbGVtZW50KTtcbiAgICAgICAgbWFya0FzTG9hZGVkKGVsZW1lbnQpO1xuICAgICAgICBsb2FkZWQoZWxlbWVudCk7XG4gICAgICB9LFxuXG4gICAgICBvYnNlcnZlcjogb2JzZXJ2ZXIsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBsb3phZDtcbn0pO1xuXG5mdW5jdGlvbiBpbml0TW9iaWxlTWVudSgpIHtcbiAgY29uc3QgbWVudSA9IHtcbiAgICB3cmFwcGVyOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlciBbZGF0YS1tZW51PSd3cmFwcGVyJ11cIiksXG4gICAgYnRuOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlciBbZGF0YS1tZW51PSdidG4nXVwiKSxcbiAgfTtcblxuICBpZiAoIW1lbnUuYnRuIHx8ICFtZW51LndyYXBwZXIpIHJldHVybjtcblxuICBtZW51LmJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlQ2xpY2spO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBjdXJyZW50VGFyZ2V0IH0gPSBlO1xuXG4gICAgY29uc29sZS5sb2coXCJib3TDo29cIik7XG5cbiAgICBpZiAoY3VycmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJzaG93XCIpKSB7XG4gICAgICBjdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuXG4gICAgICBtZW51LndyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgbWVudS53cmFwcGVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIH0sIDUwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XG5cbiAgICAgIG1lbnUud3JhcHBlci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIG1lbnUud3JhcHBlci5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcbiAgICAgIH0sIDUwMCk7XG4gICAgfVxuICB9XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgKCkgPT4ge1xuICAgIG1lbnUud3JhcHBlci5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcIlwiKTtcbiAgICBtZW51LndyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XG4gICAgbWVudS5idG4uY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XG4gIH0pO1xufVxuIl19
